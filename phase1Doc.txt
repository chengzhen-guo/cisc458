===============================================================
_Keywords Removal & Addition_

In stdIdentifiers, removed old PT keywords: 

array; begin; case; const; div; do; mod; procedure; program; type; until. 


Added the following like keywords (Line 20): 

choose; elseif; fun; is; like; pkg; public; using; val; when. 


Replaced four PT predefined identifiers:  
Line 51 to 58.

In scan.ssl, added the new like keyword tokens. Line 71 to 82
===============================================================
_Character Classes Addition & Replacement_

In scan.ssl, Added new Like input character classes for the characters slash ("/"), 
percent (“%"), hash ("#"), bang ("!") and or bar ("|"). Line 45 to 51.

In parser.pt, updated the initialization of the character class map in the Initialize procedure of parser.pt. Line 937 to 942

In scan.ssl, added the new syntax tokens for the new Like symbols. Line 118 to 123. 

In the rules of scan.ssl, added rules for recognition of the new inputs, and the emission of the coresponding output tokens, Line 256 to 301.
(emission of pSlash is integrated in a choose with comments, replacing the PT comment '{' with '/'. Line 169 to 181).

=================================================================
_More Syntax Tokens Addition_

In scan.ssl, added more syntax tokens for the following: (Line 124 to 131)
DoubleOrBar("||") PlusEquals("+=") MinusEquals("-=") StarEquals("*=") SlashEquals("/=") DoubleEquals("==")

In the rules of scan.ssl, added rules for recognition of the new inputs. Line 169 to 181 and Line 256 to 301.

==================================================================
_Operators_

In scan.ssl, removed the old PT colon equals operator, replaced by a single equal. Line 193 to 195.
             Added the Like double equal operator. Line 208 to 215.
	     Removed old PT not equal operator <>. Line 240 to 247.
	     Added Like not equal operator !=, otherwise ! followed by
                any other symbol will be illeagal, as the bang ! itself
                is not a syntax token. Line 281 to 291.

===================================================================
_String Literals_

Reused the existing lQuote character class to refer to the Like double quote ( " ) instead of the PT Pascal single quote ( ' ). 
Changed the quote in { misc. } of parser.pt to refer to the double quote symbol. Line 427.

Note: The original PT scanner has "quote = '''';", which assigned both the starting ' and the ending ' to "quote,
      When replacing each of the single quote with double-quote, i.e. "quote = '""';", the program reports an error
      when running "make scanner". However, if only assign one single double-quote symbol, i.e. "quote = '"';", "make scanner" 
      will run and the resulting scanner can correctly consume string literals wrapped in double quote. 

====================================================================
_Comments_ 

Replace the scanning of PT {  } and (*  *) comments with the scanning of Like // to end of line and /* */ comments. Line 169 to 181. 
Replaced the { with / in the choice rule in which the AlternateComment and Comment are called. Line 381 to 382.


