@Program
 @EmitProgramPrologue
  oEmitNone(iData)
  oOperandPushMode(mWord)
  oOperandSetLength(two)
  oOperandEnterValueFromDataAreaSize
  oOperandPushMode(mGlobalBase)
  oEmitDouble(iSpace)
  oOperandPop
  oOperandPop
  oEmitProcLabel(mLineNum)
  oOperandPushMode(mWord)
  oOperandSetLength(two)
  oOperandSetValue(zero)
  oEmitSingle(iWord)
  oOperandPop
  oEmitNone(iText)
  oOperandPushMode(mMainProc)
  oEmitSingle(iGlobl)
  oEmitProcLabel(mMainProc)
  oOperandPop
  oEmitNone(iEnter)
  >>
 ;EmitProgramPrologue
 @Block
  [ (tFileDescriptor)
  | tFileDescriptor:
  ?tLiteralInteger (tLiteralInteger)
  oOperandPushInteger
  ?tFileBind (tFileBind)
  ?tLiteralAddress (tLiteralAddress)
  oOperandPushVariable
  ?tStoreInteger (tStoreInteger)
  oOperandSwap
  @OperandAssignIntegerPopPop
   [ oOperandCompareLeftAndRight (no)
   | no:
   @EmitMove
    @OperandLeftOrRightIsTemp
     [ oOperandChooseMode (mManifest)
     | *:
     oOperandSwap
     [ oOperandChooseMode (mStatic)
     | *:
     oOperandSwap
     >>no
    ;OperandLeftOrRightIsTemp
    [@OperandLeftOrRightIsTemp (no)
    | *:
    [ oOperandChooseMode (mManifest)
    | mManifest:
    oEmitDouble(iMov)
    ] or >
    >>
   ;EmitMove
   @OperandPopAndFreeTemp
    [ oOperandChooseMode (mManifest)
    | *:
    oOperandPop
    >>
   ;OperandPopAndFreeTemp
   @OperandPopAndFreeTemp
    [ oOperandChooseMode (mStatic)
    | *:
    oOperandPop
    >>
   ;OperandPopAndFreeTemp
   ] or >
   >>
  ;OperandAssignIntegerPopPop
  ] or >
  }
  [ (tFileDescriptor)
  | tFileDescriptor:
  ?tLiteralInteger (tLiteralInteger)
  oOperandPushInteger
  ?tFileBind (tFileBind)
  ?tLiteralAddress (tLiteralAddress)
  oOperandPushVariable
  ?tStoreInteger (tStoreInteger)
  oOperandSwap
  @OperandAssignIntegerPopPop
   [ oOperandCompareLeftAndRight (no)
   | no:
   @EmitMove
    @OperandLeftOrRightIsTemp
     [ oOperandChooseMode (mManifest)
     | *:
     oOperandSwap
     [ oOperandChooseMode (mStatic)
     | *:
     oOperandSwap
     >>no
    ;OperandLeftOrRightIsTemp
    [@OperandLeftOrRightIsTemp (no)
    | *:
    [ oOperandChooseMode (mManifest)
    | mManifest:
    oEmitDouble(iMov)
    ] or >
    >>
   ;EmitMove
   @OperandPopAndFreeTemp
    [ oOperandChooseMode (mManifest)
    | *:
    oOperandPop
    >>
   ;OperandPopAndFreeTemp
   @OperandPopAndFreeTemp
    [ oOperandChooseMode (mStatic)
    | *:
    oOperandPop
    >>
   ;OperandPopAndFreeTemp
   ] or >
   >>
  ;OperandAssignIntegerPopPop
  ] or >
  }
  [ (tRepeatBegin)
  | tRepeatBegin:
  @RepeatStmt
   oFixPushAddress
   oEmitMergeSourceCoordinate
   @Statements
    @Block
     [ (tWriteBegin)
     | tWriteBegin:
     @WriteProc
      oEmitSourceCoordinate
      [ (tTrapBegin)
      | *:
      @WriteParameter
       ?tTrapBegin (tTrapBegin)
       ?tLiteralAddress (tLiteralAddress)
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tSkipString)
        | tSkipString:
        oEmitNone(iData)
        ?tStringData (tStringData)
        oEmitString
        oEmitNone(iText)
        ] or >
        }
        [ (tLiteralAddress)
        | tLiteralAddress:
        @OperandPushVariable
         oOperandPushVariable
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | tFetchChar:
         oOperandSetLength(regCX)
         ] or >
         >>
        ;OperandPushVariable
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       [ (tParmEnd)
       | *:
       @OperandForceToStack
        [ oOperandChooseLength (regCX)
        | regCX:
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mStatic)
         | mStatic:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tLiteralInteger)
        | tLiteralInteger:
        oOperandPushInteger
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mManifest)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       ?tTrap (tTrap)
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(twelve)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       >>
      ;WriteParameter
      }
      [ (tWriteEnd)
      | tWriteEnd:
      ] or >
      >>
     ;WriteProc
     ] or >
     }
     [ (tTrapBegin)
     | tTrapBegin:
     @TrapStmt
      oEmitSourceCoordinate
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      oOperandPushCopy
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      oOperandPop
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      [ (tTrap)
      | tTrap:
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(four)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      ] or >
      ] or >
      >>
     ;TrapStmt
     ] or >
     }
     [ (tReadBegin)
     | tReadBegin:
     @ReadProc
      oEmitSourceCoordinate
      [ (tTrapBegin)
      | *:
      @ReadParameter
       ?tTrapBegin (tTrapBegin)
       ?tLiteralAddress (tLiteralAddress)
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       ?tLiteralAddress (tLiteralAddress)
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       @OperandForceAddressIntoTemp
        [ oOperandChooseMode (mStatic)
        | mStatic:
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        oEmitDouble(iLoada)
        oOperandPop
        ] or >
        oOperandSetLength(two)
        >>
       ;OperandForceAddressIntoTemp
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(eight)
       [ (tTrap)
       | tTrap:
       ] or >
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandSwap
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       >>
      ;ReadParameter
      }
      [ (tReadEnd)
      | tReadEnd:
      ] or >
      >>
     ;ReadProc
     ] or >
     }
     [ (tTrapBegin)
     | tTrapBegin:
     @TrapStmt
      oEmitSourceCoordinate
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      oOperandPushCopy
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      oOperandPop
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      [ (tTrap)
      | tTrap:
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(four)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      ] or >
      ] or >
      >>
     ;TrapStmt
     ] or >
     }
     [ (tWriteBegin)
     | tWriteBegin:
     @WriteProc
      oEmitSourceCoordinate
      [ (tTrapBegin)
      | *:
      @WriteParameter
       ?tTrapBegin (tTrapBegin)
       ?tLiteralAddress (tLiteralAddress)
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tSkipString)
        | tSkipString:
        oEmitNone(iData)
        ?tStringData (tStringData)
        oEmitString
        oEmitNone(iText)
        ] or >
        }
        [ (tLiteralAddress)
        | tLiteralAddress:
        @OperandPushVariable
         oOperandPushVariable
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | tFetchChar:
         oOperandSetLength(regCX)
         ] or >
         >>
        ;OperandPushVariable
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       [ (tParmEnd)
       | *:
       @OperandForceToStack
        [ oOperandChooseLength (regCX)
        | regCX:
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mStatic)
         | mStatic:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tLiteralInteger)
        | tLiteralInteger:
        oOperandPushInteger
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mManifest)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       ?tTrap (tTrap)
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(twelve)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       >>
      ;WriteParameter
      }
      [ (tWriteEnd)
      | tWriteEnd:
      ] or >
      >>
     ;WriteProc
     ] or >
     }
     [ (tTrapBegin)
     | tTrapBegin:
     @TrapStmt
      oEmitSourceCoordinate
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      oOperandPushCopy
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      oOperandPop
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      [ (tTrap)
      | tTrap:
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(four)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      ] or >
      ] or >
      >>
     ;TrapStmt
     ] or >
     }
     [ (tInitialValue)
     | tInitialValue:
     @OperandPushExpression
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tFetchChar)
       | *:
       [ (tFetchChar)
       | *:
       [ (tFetchChar)
       | tFetchChar:
       oOperandSetLength(regCX)
       ] or >
       >>
      ;OperandPushVariable
      ] or >
      }
      [ (tLiteralInteger)
      | tLiteralInteger:
      oOperandPushInteger
      ] or >
      }
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tFetchChar)
       | *:
       [ (tFetchChar)
       | *:
       [ (tFetchChar)
       | tFetchChar:
       oOperandSetLength(regCX)
       ] or >
       >>
      ;OperandPushVariable
      ] or >
      }
      [ (tLength)
      | tLength:
      @OperandLength
       @SaveTempRegsToStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(one)
        oEmitSingle(iPush)
        oOperandSetRegnum(two)
        oEmitSingle(iPush)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPush)
        oOperandSetRegnum(four)
        oEmitSingle(iPush)
        oOperandPop
        >>
       ;SaveTempRegsToStack
       @OperandForceAddressIntoTemp
        [ oOperandChooseMode (mStatic)
        | mStatic:
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        oEmitDouble(iLoada)
        oOperandPop
        ] or >
        oOperandSetLength(two)
        >>
       ;OperandForceAddressIntoTemp
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mTrap)
       oOperandSetValue(trLength)
       oOperandSetLength(two)
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(four)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       oOperandPushMode(mScratchReg1)
       oOperandSetLength(two)
       oOperandPushMode(mResultReg)
       oOperandSetLength(two)
       oEmitDouble(iMov)
       oOperandPop
       @RestoreTempRegsFromStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(four)
        oEmitSingle(iPop)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPop)
        oOperandSetRegnum(two)
        oEmitSingle(iPop)
        oOperandSetRegnum(one)
        oEmitSingle(iPop)
        oOperandPop
        >>
       ;RestoreTempRegsFromStack
       @OperandForceIntoTemp
        [ oOperandChooseMode (mScratchReg1)
        | *:
        [ oOperandChooseLength (two)
        | two:
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        oEmitDouble(iMov)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mScratchReg1)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandSetMode(mTemp)
        ] or >
        >>
       ;OperandForceIntoTemp
       oOperandSetLength(two)
       >>
      ;OperandLength
      ] or >
      }
      [ (tLiteralInteger)
      | tLiteralInteger:
      oOperandPushInteger
      ] or >
      }
      [ (tSubtract)
      | tSubtract:
      @OperandSubtractPop
       @OperandAreLeftAndRightManifest
        [ oOperandChooseMode (mManifest)
        | mManifest:
        oOperandSwap
        [ oOperandChooseMode (mTemp)
        | *:
        oOperandSwap
        >>no
       ;OperandAreLeftAndRightManifest
       [@OperandAreLeftAndRightManifest (no)
       | no:
       [ oOperandChooseManifestValue (two)
       | *:
       @OperandForceLeftIntoTemp
        oOperandSwap
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oOperandSwap
        ] or >
        >>
       ;OperandForceLeftIntoTemp
       oEmitDouble(iSub)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mManifest)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ] or >
       >>
      ;OperandSubtractPop
      ] or >
      }
      [ (tSubstring)
      | tSubstring:
      @OperandSubstringPopPop
       @SaveTempRegsToStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(one)
        oEmitSingle(iPush)
        oOperandSetRegnum(two)
        oEmitSingle(iPush)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPush)
        oOperandSetRegnum(four)
        oEmitSingle(iPush)
        oOperandPop
        >>
       ;SaveTempRegsToStack
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mManifest)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       @OperandForceAddressIntoTemp
        [ oOperandChooseMode (mStatic)
        | mStatic:
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        oEmitDouble(iLoada)
        oOperandPop
        ] or >
        oOperandSetLength(two)
        >>
       ;OperandForceAddressIntoTemp
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mTrap)
       oOperandSetValue(trSubstring)
       oOperandSetLength(two)
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(twelve)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       oOperandPushMode(mScratchReg1)
       oOperandSetLength(two)
       oOperandPushMode(mResultReg)
       oOperandSetLength(two)
       oEmitDouble(iMov)
       oOperandPop
       @RestoreTempRegsFromStack
        oOperandPushMode(mTemp)
        oOperandSetLength(two)
        oOperandSetRegnum(four)
        oEmitSingle(iPop)
        oOperandSetRegnum(regCX)
        oEmitSingle(iPop)
        oOperandSetRegnum(two)
        oEmitSingle(iPop)
        oOperandSetRegnum(one)
        oEmitSingle(iPop)
        oOperandPop
        >>
       ;RestoreTempRegsFromStack
       @OperandForceIntoTemp
        [ oOperandChooseMode (mScratchReg1)
        | *:
        [ oOperandChooseLength (two)
        | two:
        @OperandPushTempWord
         oTempAllocate
         oOperandPushTemp
         oOperandSetValue(zero)
         oOperandSetLength(two)
         >>
        ;OperandPushTempWord
        oOperandSwap
        oEmitDouble(iMov)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mScratchReg1)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandSetMode(mTemp)
        ] or >
        >>
       ;OperandForceIntoTemp
       oOperandSetLength(two)
       >>
      ;OperandSubstringPopPop
      ] or >
      }
      [ (tInitEnd)
      | *:
      ] or >
      >>
     ;OperandPushExpression
     ?tInitEnd (tInitEnd)
     ?tLiteralAddress (tLiteralAddress)
     oOperandPushVariable
     oOperandSwap
     [ (tStoreChar)
     | tStoreChar:
     oOperandSetLength(regCX)
     @OperandAssignCharPopPop
      @SaveTempRegsToStack
       oOperandPushMode(mTemp)
       oOperandSetLength(two)
       oOperandSetRegnum(one)
       oEmitSingle(iPush)
       oOperandSetRegnum(two)
       oEmitSingle(iPush)
       oOperandSetRegnum(regCX)
       oEmitSingle(iPush)
       oOperandSetRegnum(four)
       oEmitSingle(iPush)
       oOperandPop
       >>
      ;SaveTempRegsToStack
      @OperandForceAddressIntoTemp
       [ oOperandChooseMode (mTemp)
       | *:
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       oEmitDouble(iMov)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandSetLength(two)
       >>
      ;OperandForceAddressIntoTemp
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      @OperandForceAddressIntoTemp
       [ oOperandChooseMode (mStatic)
       | mStatic:
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       oEmitDouble(iLoada)
       oOperandPop
       ] or >
       oOperandSetLength(two)
       >>
      ;OperandForceAddressIntoTemp
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushMode(mTrap)
      oOperandSetValue(trAssignString)
      oOperandSetLength(two)
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(eight)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      @RestoreTempRegsFromStack
       oOperandPushMode(mTemp)
       oOperandSetLength(two)
       oOperandSetRegnum(four)
       oEmitSingle(iPop)
       oOperandSetRegnum(regCX)
       oEmitSingle(iPop)
       oOperandSetRegnum(two)
       oEmitSingle(iPop)
       oOperandSetRegnum(one)
       oEmitSingle(iPop)
       oOperandPop
       >>
      ;RestoreTempRegsFromStack
      >>
     ;OperandAssignCharPopPop
     ] or >
     ] or >
     }
     [ (tWriteBegin)
     | tWriteBegin:
     @WriteProc
      oEmitSourceCoordinate
      [ (tTrapBegin)
      | *:
      @WriteParameter
       ?tTrapBegin (tTrapBegin)
       ?tLiteralAddress (tLiteralAddress)
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tSkipString)
        | tSkipString:
        oEmitNone(iData)
        ?tStringData (tStringData)
        oEmitString
        oEmitNone(iText)
        ] or >
        }
        [ (tLiteralAddress)
        | tLiteralAddress:
        @OperandPushVariable
         oOperandPushVariable
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | tFetchChar:
         oOperandSetLength(regCX)
         ] or >
         >>
        ;OperandPushVariable
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       [ (tParmEnd)
       | *:
       @OperandForceToStack
        [ oOperandChooseLength (regCX)
        | regCX:
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mStatic)
         | mStatic:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tLiteralInteger)
        | tLiteralInteger:
        oOperandPushInteger
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mManifest)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       ?tTrap (tTrap)
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(twelve)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       >>
      ;WriteParameter
      }
      [ (tTrapBegin)
      | *:
      @WriteParameter
       ?tTrapBegin (tTrapBegin)
       ?tLiteralAddress (tLiteralAddress)
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tLiteralAddress)
        | tLiteralAddress:
        @OperandPushVariable
         oOperandPushVariable
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | tFetchChar:
         oOperandSetLength(regCX)
         ] or >
         >>
        ;OperandPushVariable
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       [ (tParmEnd)
       | *:
       @OperandForceToStack
        [ oOperandChooseLength (regCX)
        | regCX:
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mStatic)
         | mStatic:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tLiteralInteger)
        | tLiteralInteger:
        oOperandPushInteger
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mManifest)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       ?tTrap (tTrap)
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(twelve)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       >>
      ;WriteParameter
      }
      [ (tTrapBegin)
      | *:
      @WriteParameter
       ?tTrapBegin (tTrapBegin)
       ?tLiteralAddress (tLiteralAddress)
       @OperandPushVariable
        oOperandPushVariable
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        [ (tVarParm)
        | *:
        >>
       ;OperandPushVariable
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mStatic)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tVarParm (tVarParm)
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tSkipString)
        | tSkipString:
        oEmitNone(iData)
        ?tStringData (tStringData)
        oEmitString
        oEmitNone(iText)
        ] or >
        }
        [ (tLiteralAddress)
        | tLiteralAddress:
        @OperandPushVariable
         oOperandPushVariable
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | tFetchChar:
         oOperandSetLength(regCX)
         ] or >
         >>
        ;OperandPushVariable
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       [ (tParmEnd)
       | *:
       @OperandForceToStack
        [ oOperandChooseLength (regCX)
        | regCX:
        @OperandForceAddressIntoTemp
         [ oOperandChooseMode (mStatic)
         | mStatic:
         @OperandPushTempWord
          oTempAllocate
          oOperandPushTemp
          oOperandSetValue(zero)
          oOperandSetLength(two)
          >>
         ;OperandPushTempWord
         oOperandSwap
         oEmitDouble(iLoada)
         oOperandPop
         ] or >
         oOperandSetLength(two)
         >>
        ;OperandForceAddressIntoTemp
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       @OperandPushExpression
        [ (tLiteralInteger)
        | tLiteralInteger:
        oOperandPushInteger
        ] or >
        }
        [ (tParmEnd)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       @OperandForceToStack
        [ oOperandChooseLength (two)
        | two:
        ] or >
        oEmitSingle(iPush)
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mManifest)
         | *:
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushMode(mStack)
        >>
       ;OperandForceToStack
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStack)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       ?tParmEnd (tParmEnd)
       ?tTrap (tTrap)
       oOperandPushTrap
       oEmitSingle(iCall)
       oOperandPop
       oOperandPushMode(mStackReg)
       oOperandSetLength(two)
       oOperandPushMode(mManifest)
       oOperandSetLength(two)
       oOperandSetValue(twelve)
       oEmitDouble(iAdd)
       oOperandPop
       oOperandPop
       >>
      ;WriteParameter
      }
      [ (tWriteEnd)
      | tWriteEnd:
      ] or >
      >>
     ;WriteProc
     ] or >
     }
     [ (tTrapBegin)
     | tTrapBegin:
     @TrapStmt
      oEmitSourceCoordinate
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      oOperandPushCopy
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      oOperandPop
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      [ (tTrap)
      | tTrap:
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(four)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      ] or >
      ] or >
      >>
     ;TrapStmt
     ] or >
     }
     [ (tTrapBegin)
     | tTrapBegin:
     @TrapStmt
      oEmitSourceCoordinate
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      oOperandPushCopy
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      oOperandPop
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      [ (tTrap)
      | tTrap:
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(four)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      ] or >
      ] or >
      >>
     ;TrapStmt
     ] or >
     }
     [ (tIfBegin)
     | tIfBegin:
     @IfStmt
      oEmitSourceCoordinate
      @OperandPushBooleanControlExpression
       @OperandPushExpression
        [ (tLiteralAddress)
        | tLiteralAddress:
        @OperandPushVariable
         oOperandPushVariable
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | tFetchChar:
         oOperandSetLength(regCX)
         ] or >
         >>
        ;OperandPushVariable
        ] or >
        }
        [ (tLiteralAddress)
        | tLiteralAddress:
        @OperandPushVariable
         oOperandPushVariable
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | tFetchChar:
         oOperandSetLength(regCX)
         ] or >
         >>
        ;OperandPushVariable
        ] or >
        }
        [ (tLength)
        | tLength:
        @OperandLength
         @SaveTempRegsToStack
          oOperandPushMode(mTemp)
          oOperandSetLength(two)
          oOperandSetRegnum(one)
          oEmitSingle(iPush)
          oOperandSetRegnum(two)
          oEmitSingle(iPush)
          oOperandSetRegnum(regCX)
          oEmitSingle(iPush)
          oOperandSetRegnum(four)
          oEmitSingle(iPush)
          oOperandPop
          >>
         ;SaveTempRegsToStack
         @OperandForceAddressIntoTemp
          [ oOperandChooseMode (mStatic)
          | mStatic:
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          oEmitDouble(iLoada)
          oOperandPop
          ] or >
          oOperandSetLength(two)
          >>
         ;OperandForceAddressIntoTemp
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStack)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mTrap)
         oOperandSetValue(trLength)
         oOperandSetLength(two)
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         oOperandPushMode(mScratchReg1)
         oOperandSetLength(two)
         oOperandPushMode(mResultReg)
         oOperandSetLength(two)
         oEmitDouble(iMov)
         oOperandPop
         @RestoreTempRegsFromStack
          oOperandPushMode(mTemp)
          oOperandSetLength(two)
          oOperandSetRegnum(four)
          oEmitSingle(iPop)
          oOperandSetRegnum(regCX)
          oEmitSingle(iPop)
          oOperandSetRegnum(two)
          oEmitSingle(iPop)
          oOperandSetRegnum(one)
          oEmitSingle(iPop)
          oOperandPop
          >>
         ;RestoreTempRegsFromStack
         @OperandForceIntoTemp
          [ oOperandChooseMode (mScratchReg1)
          | *:
          [ oOperandChooseLength (two)
          | two:
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          oEmitDouble(iMov)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandSetMode(mTemp)
          ] or >
          >>
         ;OperandForceIntoTemp
         oOperandSetLength(two)
         >>
        ;OperandLength
        ] or >
        }
        [ (tLiteralInteger)
        | tLiteralInteger:
        oOperandPushInteger
        ] or >
        }
        [ (tSubtract)
        | tSubtract:
        @OperandSubtractPop
         @OperandAreLeftAndRightManifest
          [ oOperandChooseMode (mManifest)
          | mManifest:
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | *:
          oOperandSwap
          >>no
         ;OperandAreLeftAndRightManifest
         [@OperandAreLeftAndRightManifest (no)
         | no:
         [ oOperandChooseManifestValue (one)
         | one:
         oOperandPop
         @OperandForceIntoTemp
          [ oOperandChooseMode (mTemp)
          | mTemp:
          ] or >
          >>
         ;OperandForceIntoTemp
         oEmitSingle(iDec)
         ] or >
         ] or >
         >>
        ;OperandSubtractPop
        ] or >
        }
        [ (tLiteralAddress)
        | tLiteralAddress:
        @OperandPushVariable
         oOperandPushVariable
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | tFetchChar:
         oOperandSetLength(regCX)
         ] or >
         >>
        ;OperandPushVariable
        ] or >
        }
        [ (tLength)
        | tLength:
        @OperandLength
         @SaveTempRegsToStack
          oOperandPushMode(mTemp)
          oOperandSetLength(two)
          oOperandSetRegnum(one)
          oEmitSingle(iPush)
          oOperandSetRegnum(two)
          oEmitSingle(iPush)
          oOperandSetRegnum(regCX)
          oEmitSingle(iPush)
          oOperandSetRegnum(four)
          oEmitSingle(iPush)
          oOperandPop
          >>
         ;SaveTempRegsToStack
         @OperandForceAddressIntoTemp
          [ oOperandChooseMode (mStatic)
          | mStatic:
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          oEmitDouble(iLoada)
          oOperandPop
          ] or >
          oOperandSetLength(two)
          >>
         ;OperandForceAddressIntoTemp
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStack)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mTrap)
         oOperandSetValue(trLength)
         oOperandSetLength(two)
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         oOperandPushMode(mScratchReg1)
         oOperandSetLength(two)
         oOperandPushMode(mResultReg)
         oOperandSetLength(two)
         oEmitDouble(iMov)
         oOperandPop
         @RestoreTempRegsFromStack
          oOperandPushMode(mTemp)
          oOperandSetLength(two)
          oOperandSetRegnum(four)
          oEmitSingle(iPop)
          oOperandSetRegnum(regCX)
          oEmitSingle(iPop)
          oOperandSetRegnum(two)
          oEmitSingle(iPop)
          oOperandSetRegnum(one)
          oEmitSingle(iPop)
          oOperandPop
          >>
         ;RestoreTempRegsFromStack
         @OperandForceIntoTemp
          [ oOperandChooseMode (mScratchReg1)
          | *:
          [ oOperandChooseLength (two)
          | two:
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          oEmitDouble(iMov)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandSetMode(mTemp)
          ] or >
          >>
         ;OperandForceIntoTemp
         oOperandSetLength(two)
         >>
        ;OperandLength
        ] or >
        }
        [ (tSubstring)
        | tSubstring:
        @OperandSubstringPopPop
         @SaveTempRegsToStack
          oOperandPushMode(mTemp)
          oOperandSetLength(two)
          oOperandSetRegnum(one)
          oEmitSingle(iPush)
          oOperandSetRegnum(two)
          oEmitSingle(iPush)
          oOperandSetRegnum(regCX)
          oEmitSingle(iPush)
          oOperandSetRegnum(four)
          oEmitSingle(iPush)
          oOperandPop
          >>
         ;SaveTempRegsToStack
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStack)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStack)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         @OperandForceAddressIntoTemp
          [ oOperandChooseMode (mStatic)
          | mStatic:
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          oEmitDouble(iLoada)
          oOperandPop
          ] or >
          oOperandSetLength(two)
          >>
         ;OperandForceAddressIntoTemp
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStack)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mTrap)
         oOperandSetValue(trSubstring)
         oOperandSetLength(two)
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(twelve)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         oOperandPushMode(mScratchReg1)
         oOperandSetLength(two)
         oOperandPushMode(mResultReg)
         oOperandSetLength(two)
         oEmitDouble(iMov)
         oOperandPop
         @RestoreTempRegsFromStack
          oOperandPushMode(mTemp)
          oOperandSetLength(two)
          oOperandSetRegnum(four)
          oEmitSingle(iPop)
          oOperandSetRegnum(regCX)
          oEmitSingle(iPop)
          oOperandSetRegnum(two)
          oEmitSingle(iPop)
          oOperandSetRegnum(one)
          oEmitSingle(iPop)
          oOperandPop
          >>
         ;RestoreTempRegsFromStack
         @OperandForceIntoTemp
          [ oOperandChooseMode (mScratchReg1)
          | *:
          [ oOperandChooseLength (two)
          | two:
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          oEmitDouble(iMov)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandSetMode(mTemp)
          ] or >
          >>
         ;OperandForceIntoTemp
         oOperandSetLength(two)
         >>
        ;OperandSubstringPopPop
        ] or >
        }
        [ (tSkipString)
        | tSkipString:
        oEmitNone(iData)
        ?tStringData (tStringData)
        oEmitString
        oEmitNone(iText)
        ] or >
        }
        [ (tLiteralAddress)
        | tLiteralAddress:
        @OperandPushVariable
         oOperandPushVariable
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | *:
         [ (tFetchChar)
         | tFetchChar:
         oOperandSetLength(regCX)
         ] or >
         >>
        ;OperandPushVariable
        ] or >
        }
        [ (tStringEQ)
        | tStringEQ:
        @OperandStringEqualPop
         @SaveTempRegsToStack
          oOperandPushMode(mTemp)
          oOperandSetLength(two)
          oOperandSetRegnum(one)
          oEmitSingle(iPush)
          oOperandSetRegnum(two)
          oEmitSingle(iPush)
          oOperandSetRegnum(regCX)
          oEmitSingle(iPush)
          oOperandSetRegnum(four)
          oEmitSingle(iPush)
          oOperandPop
          >>
         ;SaveTempRegsToStack
         @OperandForceAddressIntoTemp
          [ oOperandChooseMode (mStatic)
          | mStatic:
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          oEmitDouble(iLoada)
          oOperandPop
          ] or >
          oOperandSetLength(two)
          >>
         ;OperandForceAddressIntoTemp
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStack)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         @OperandForceAddressIntoTemp
          [ oOperandChooseMode (mTemp)
          | *:
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          oEmitDouble(iMov)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandSetLength(two)
          >>
         ;OperandForceAddressIntoTemp
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oTempFree
           ] or >
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStack)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushMode(mTrap)
         oOperandSetValue(trStringEqual)
         oOperandSetLength(two)
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(eight)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         oOperandPushMode(mScratchReg1)
         oOperandSetLength(two)
         oOperandPushMode(mResultReg)
         oOperandSetLength(two)
         oEmitDouble(iMov)
         oOperandPop
         @RestoreTempRegsFromStack
          oOperandPushMode(mTemp)
          oOperandSetLength(two)
          oOperandSetRegnum(four)
          oEmitSingle(iPop)
          oOperandSetRegnum(regCX)
          oEmitSingle(iPop)
          oOperandSetRegnum(two)
          oEmitSingle(iPop)
          oOperandSetRegnum(one)
          oEmitSingle(iPop)
          oOperandPop
          >>
         ;RestoreTempRegsFromStack
         @OperandForceIntoTemp
          [ oOperandChooseMode (mScratchReg1)
          | *:
          [ oOperandChooseLength (two)
          | two:
          @OperandPushTempWord
           oTempAllocate
           oOperandPushTemp
           oOperandSetValue(zero)
           oOperandSetLength(two)
           >>
          ;OperandPushTempWord
          oOperandSwap
          oEmitDouble(iMov)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mScratchReg1)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandSetMode(mTemp)
          ] or >
          >>
         ;OperandForceIntoTemp
         oOperandSetLength(one)
         >>
        ;OperandStringEqualPop
        ] or >
        }
        [ (tIfThen)
        | *:
        ] or >
        >>
       ;OperandPushExpression
       @OperandForceToJumpCondition
        [ oOperandIsJumpCondition (no)
        | *:
        [ oOperandChooseManifestValue ()
        | *:
        @EmitTst
         [ oOperandChooseLength (one)
         | one:
         oOperandPushMode(mManifest)
         oOperandSetValue(zero)
         oOperandSetLength(one)
         ] or >
         @EmitCmp
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | *:
          oOperandSwap
          @OperandLeftOrRightIsTemp
           [ oOperandChooseMode (mManifest)
           | *:
           oOperandSwap
           [ oOperandChooseMode (mTemp)
           | mTemp:
           oOperandSwap
           >>yes
          ;OperandLeftOrRightIsTemp
          [@OperandLeftOrRightIsTemp (yes)
          | yes:
          oEmitDouble(iCmp)
          ] or >
          >>
         ;EmitCmp
         oOperandPop
         >>
        ;EmitTst
        @OperandPopAndFreeTemp
         [ oOperandChooseMode (mTemp)
         | mTemp:
         oTempFree
         ] or >
         oOperandPop
         >>
        ;OperandPopAndFreeTemp
        oOperandPushJumpCondition(iJne)
        >>
       ;OperandForceToJumpCondition
       >>
      ;OperandPushBooleanControlExpression
      ?tIfThen (tIfThen)
      [ oOperandChooseJumpCondition (iJne)
      | *:
      @OperandComplementJumpCondition
       [ oOperandChooseJumpCondition (iJne)
       | *:
       oOperandComplementJumpCondition
       >>
      ;OperandComplementJumpCondition
      @OperandInfixOr
       @OperandForceToJumpCondition
        [ oOperandIsJumpCondition (yes)
        | yes:
        ] or >
        >>
       ;OperandForceToJumpCondition
       [ oOperandChooseJumpCondition (iJeq)
       | *:
       oEmitConditionalForwardBranch
       oFixAndFreeFalseBranches
       oFixPushLastAddress
       oOperandMergeShuntsWithAddress
       oFixPopAddress
       >>
      ;OperandInfixOr
      @Statements
       @Block
        [ (tIfBegin)
        | tIfBegin:
        @IfStmt
         oEmitSourceCoordinate
         @OperandPushBooleanControlExpression
          @OperandPushExpression
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tSubstring)
           | tSubstring:
           @OperandSubstringPopPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trSubstring)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(twelve)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandSubstringPopPop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tStringEQ)
           | tStringEQ:
           @OperandStringEqualPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trStringEqual)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(one)
            >>
           ;OperandStringEqualPop
           ] or >
           }
           [ (tInfixOr)
           | tInfixOr:
           @OperandInfixOr
            @OperandForceToJumpCondition
             [ oOperandIsJumpCondition (no)
             | *:
             [ oOperandChooseManifestValue ()
             | *:
             @EmitTst
              [ oOperandChooseLength (one)
              | one:
              oOperandPushMode(mManifest)
              oOperandSetValue(zero)
              oOperandSetLength(one)
              ] or >
              @EmitCmp
               oOperandSwap
               [ oOperandChooseMode (mTemp)
               | *:
               oOperandSwap
               @OperandLeftOrRightIsTemp
                [ oOperandChooseMode (mManifest)
                | *:
                oOperandSwap
                [ oOperandChooseMode (mTemp)
                | mTemp:
                oOperandSwap
                >>yes
               ;OperandLeftOrRightIsTemp
               [@OperandLeftOrRightIsTemp (yes)
               | yes:
               oEmitDouble(iCmp)
               ] or >
               >>
              ;EmitCmp
              oOperandPop
              >>
             ;EmitTst
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushJumpCondition(iJne)
             >>
            ;OperandForceToJumpCondition
            [ oOperandChooseJumpCondition (iJne)
            | *:
            oEmitConditionalForwardBranch
            oFixAndFreeFalseBranches
            oFixPushLastAddress
            oOperandMergeShuntsWithAddress
            oFixPopAddress
            >>
           ;OperandInfixOr
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tSubstring)
           | tSubstring:
           @OperandSubstringPopPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trSubstring)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(twelve)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandSubstringPopPop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tStringEQ)
           | tStringEQ:
           @OperandStringEqualPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trStringEqual)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(one)
            >>
           ;OperandStringEqualPop
           ] or >
           }
           [ (tOr)
           | tOr:
           @OperandOrPop
            @OperandForceToJumpCondition
             [ oOperandIsJumpCondition (no)
             | *:
             [ oOperandChooseManifestValue ()
             | *:
             @EmitTst
              [ oOperandChooseLength (one)
              | one:
              oOperandPushMode(mManifest)
              oOperandSetValue(zero)
              oOperandSetLength(one)
              ] or >
              @EmitCmp
               oOperandSwap
               [ oOperandChooseMode (mTemp)
               | *:
               oOperandSwap
               @OperandLeftOrRightIsTemp
                [ oOperandChooseMode (mManifest)
                | *:
                oOperandSwap
                [ oOperandChooseMode (mTemp)
                | mTemp:
                oOperandSwap
                >>yes
               ;OperandLeftOrRightIsTemp
               [@OperandLeftOrRightIsTemp (yes)
               | yes:
               oEmitDouble(iCmp)
               ] or >
               >>
              ;EmitCmp
              oOperandPop
              >>
             ;EmitTst
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushJumpCondition(iJne)
             >>
            ;OperandForceToJumpCondition
            oOperandSwap
            [ oOperandChooseJumpCondition ()
            | *:
            oOperandSwap
            oOperandMergeShunts
            oOperandSwap
            oOperandPop
            >>
           ;OperandOrPop
           ] or >
           }
           [ (tInfixOr)
           | tInfixOr:
           @OperandInfixOr
            @OperandForceToJumpCondition
             [ oOperandIsJumpCondition (yes)
             | yes:
             ] or >
             >>
            ;OperandForceToJumpCondition
            [ oOperandChooseJumpCondition (iJne)
            | *:
            oEmitConditionalForwardBranch
            oFixAndFreeFalseBranches
            oFixPushLastAddress
            oOperandMergeShuntsWithAddress
            oFixPopAddress
            >>
           ;OperandInfixOr
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tSubstring)
           | tSubstring:
           @OperandSubstringPopPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trSubstring)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(twelve)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandSubstringPopPop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tStringEQ)
           | tStringEQ:
           @OperandStringEqualPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trStringEqual)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(one)
            >>
           ;OperandStringEqualPop
           ] or >
           }
           [ (tOr)
           | tOr:
           @OperandOrPop
            @OperandForceToJumpCondition
             [ oOperandIsJumpCondition (no)
             | *:
             [ oOperandChooseManifestValue ()
             | *:
             @EmitTst
              [ oOperandChooseLength (one)
              | one:
              oOperandPushMode(mManifest)
              oOperandSetValue(zero)
              oOperandSetLength(one)
              ] or >
              @EmitCmp
               oOperandSwap
               [ oOperandChooseMode (mTemp)
               | *:
               oOperandSwap
               @OperandLeftOrRightIsTemp
                [ oOperandChooseMode (mManifest)
                | *:
                oOperandSwap
                [ oOperandChooseMode (mTemp)
                | mTemp:
                oOperandSwap
                >>yes
               ;OperandLeftOrRightIsTemp
               [@OperandLeftOrRightIsTemp (yes)
               | yes:
               oEmitDouble(iCmp)
               ] or >
               >>
              ;EmitCmp
              oOperandPop
              >>
             ;EmitTst
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushJumpCondition(iJne)
             >>
            ;OperandForceToJumpCondition
            oOperandSwap
            [ oOperandChooseJumpCondition ()
            | *:
            oOperandSwap
            oOperandMergeShunts
            oOperandSwap
            oOperandPop
            >>
           ;OperandOrPop
           ] or >
           }
           [ (tInfixOr)
           | tInfixOr:
           @OperandInfixOr
            @OperandForceToJumpCondition
             [ oOperandIsJumpCondition (yes)
             | yes:
             ] or >
             >>
            ;OperandForceToJumpCondition
            [ oOperandChooseJumpCondition (iJne)
            | *:
            oEmitConditionalForwardBranch
            oFixAndFreeFalseBranches
            oFixPushLastAddress
            oOperandMergeShuntsWithAddress
            oFixPopAddress
            >>
           ;OperandInfixOr
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tSubstring)
           | tSubstring:
           @OperandSubstringPopPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trSubstring)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(twelve)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandSubstringPopPop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tStringEQ)
           | tStringEQ:
           @OperandStringEqualPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trStringEqual)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(one)
            >>
           ;OperandStringEqualPop
           ] or >
           }
           [ (tOr)
           | tOr:
           @OperandOrPop
            @OperandForceToJumpCondition
             [ oOperandIsJumpCondition (no)
             | *:
             [ oOperandChooseManifestValue ()
             | *:
             @EmitTst
              [ oOperandChooseLength (one)
              | one:
              oOperandPushMode(mManifest)
              oOperandSetValue(zero)
              oOperandSetLength(one)
              ] or >
              @EmitCmp
               oOperandSwap
               [ oOperandChooseMode (mTemp)
               | *:
               oOperandSwap
               @OperandLeftOrRightIsTemp
                [ oOperandChooseMode (mManifest)
                | *:
                oOperandSwap
                [ oOperandChooseMode (mTemp)
                | mTemp:
                oOperandSwap
                >>yes
               ;OperandLeftOrRightIsTemp
               [@OperandLeftOrRightIsTemp (yes)
               | yes:
               oEmitDouble(iCmp)
               ] or >
               >>
              ;EmitCmp
              oOperandPop
              >>
             ;EmitTst
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushJumpCondition(iJne)
             >>
            ;OperandForceToJumpCondition
            oOperandSwap
            [ oOperandChooseJumpCondition ()
            | *:
            oOperandSwap
            oOperandMergeShunts
            oOperandSwap
            oOperandPop
            >>
           ;OperandOrPop
           ] or >
           }
           [ (tInfixOr)
           | tInfixOr:
           @OperandInfixOr
            @OperandForceToJumpCondition
             [ oOperandIsJumpCondition (yes)
             | yes:
             ] or >
             >>
            ;OperandForceToJumpCondition
            [ oOperandChooseJumpCondition (iJne)
            | *:
            oEmitConditionalForwardBranch
            oFixAndFreeFalseBranches
            oFixPushLastAddress
            oOperandMergeShuntsWithAddress
            oFixPopAddress
            >>
           ;OperandInfixOr
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tSubstring)
           | tSubstring:
           @OperandSubstringPopPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trSubstring)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(twelve)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandSubstringPopPop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tStringEQ)
           | tStringEQ:
           @OperandStringEqualPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trStringEqual)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(one)
            >>
           ;OperandStringEqualPop
           ] or >
           }
           [ (tOr)
           | tOr:
           @OperandOrPop
            @OperandForceToJumpCondition
             [ oOperandIsJumpCondition (no)
             | *:
             [ oOperandChooseManifestValue ()
             | *:
             @EmitTst
              [ oOperandChooseLength (one)
              | one:
              oOperandPushMode(mManifest)
              oOperandSetValue(zero)
              oOperandSetLength(one)
              ] or >
              @EmitCmp
               oOperandSwap
               [ oOperandChooseMode (mTemp)
               | *:
               oOperandSwap
               @OperandLeftOrRightIsTemp
                [ oOperandChooseMode (mManifest)
                | *:
                oOperandSwap
                [ oOperandChooseMode (mTemp)
                | mTemp:
                oOperandSwap
                >>yes
               ;OperandLeftOrRightIsTemp
               [@OperandLeftOrRightIsTemp (yes)
               | yes:
               oEmitDouble(iCmp)
               ] or >
               >>
              ;EmitCmp
              oOperandPop
              >>
             ;EmitTst
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushJumpCondition(iJne)
             >>
            ;OperandForceToJumpCondition
            oOperandSwap
            [ oOperandChooseJumpCondition ()
            | *:
            oOperandSwap
            oOperandMergeShunts
            oOperandSwap
            oOperandPop
            >>
           ;OperandOrPop
           ] or >
           }
           [ (tIfThen)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (yes)
           | yes:
           ] or >
           >>
          ;OperandForceToJumpCondition
          >>
         ;OperandPushBooleanControlExpression
         ?tIfThen (tIfThen)
         [ oOperandChooseJumpCondition (iJne)
         | *:
         @OperandComplementJumpCondition
          [ oOperandChooseJumpCondition (iJne)
          | *:
          oOperandComplementJumpCondition
          >>
         ;OperandComplementJumpCondition
         @OperandInfixOr
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (yes)
           | yes:
           ] or >
           >>
          ;OperandForceToJumpCondition
          [ oOperandChooseJumpCondition (iJeq)
          | *:
          oEmitConditionalForwardBranch
          oFixAndFreeFalseBranches
          oFixPushLastAddress
          oOperandMergeShuntsWithAddress
          oFixPopAddress
          >>
         ;OperandInfixOr
         @Statements
          @Block
           [ (tWriteBegin)
           | tWriteBegin:
           @WriteProc
            oEmitSourceCoordinate
            [ (tTrapBegin)
            | *:
            @WriteParameter
             ?tTrapBegin (tTrapBegin)
             ?tLiteralAddress (tLiteralAddress)
             @OperandPushVariable
              oOperandPushVariable
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              >>
             ;OperandPushVariable
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mStatic)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tVarParm (tVarParm)
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tConcatenate)
              | tConcatenate:
              @OperandConcatenatePop
               @SaveTempRegsToStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(one)
                oEmitSingle(iPush)
                oOperandSetRegnum(two)
                oEmitSingle(iPush)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPush)
                oOperandSetRegnum(four)
                oEmitSingle(iPush)
                oOperandPop
                >>
               ;SaveTempRegsToStack
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               oOperandPushMode(mTrap)
               oOperandSetValue(trConcatenate)
               oOperandSetLength(two)
               oEmitSingle(iCall)
               oOperandPop
               oOperandPushMode(mStackReg)
               oOperandSetLength(two)
               oOperandPushMode(mManifest)
               oOperandSetLength(two)
               oOperandSetValue(eight)
               oEmitDouble(iAdd)
               oOperandPop
               oOperandPop
               oOperandPushMode(mScratchReg1)
               oOperandSetLength(two)
               oOperandPushMode(mResultReg)
               oOperandSetLength(two)
               oEmitDouble(iMov)
               oOperandPop
               @RestoreTempRegsFromStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(four)
                oEmitSingle(iPop)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPop)
                oOperandSetRegnum(two)
                oEmitSingle(iPop)
                oOperandSetRegnum(one)
                oEmitSingle(iPop)
                oOperandPop
                >>
               ;RestoreTempRegsFromStack
               @OperandForceIntoTemp
                [ oOperandChooseMode (mScratchReg1)
                | *:
                [ oOperandChooseLength (two)
                | two:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mScratchReg1)
                 | *:
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetMode(mTemp)
                ] or >
                >>
               ;OperandForceIntoTemp
               oOperandSetLength(two)
               >>
              ;OperandConcatenatePop
              ] or >
              }
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tConcatenate)
              | tConcatenate:
              @OperandConcatenatePop
               @SaveTempRegsToStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(one)
                oEmitSingle(iPush)
                oOperandSetRegnum(two)
                oEmitSingle(iPush)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPush)
                oOperandSetRegnum(four)
                oEmitSingle(iPush)
                oOperandPop
                >>
               ;SaveTempRegsToStack
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mTemp)
                | *:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               oOperandPushMode(mTrap)
               oOperandSetValue(trConcatenate)
               oOperandSetLength(two)
               oEmitSingle(iCall)
               oOperandPop
               oOperandPushMode(mStackReg)
               oOperandSetLength(two)
               oOperandPushMode(mManifest)
               oOperandSetLength(two)
               oOperandSetValue(eight)
               oEmitDouble(iAdd)
               oOperandPop
               oOperandPop
               oOperandPushMode(mScratchReg1)
               oOperandSetLength(two)
               oOperandPushMode(mResultReg)
               oOperandSetLength(two)
               oEmitDouble(iMov)
               oOperandPop
               @RestoreTempRegsFromStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(four)
                oEmitSingle(iPop)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPop)
                oOperandSetRegnum(two)
                oEmitSingle(iPop)
                oOperandSetRegnum(one)
                oEmitSingle(iPop)
                oOperandPop
                >>
               ;RestoreTempRegsFromStack
               @OperandForceIntoTemp
                [ oOperandChooseMode (mScratchReg1)
                | *:
                [ oOperandChooseLength (two)
                | two:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mScratchReg1)
                 | *:
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetMode(mTemp)
                ] or >
                >>
               ;OperandForceIntoTemp
               oOperandSetLength(two)
               >>
              ;OperandConcatenatePop
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             [ (tParmEnd)
             | *:
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mTemp)
               | mTemp:
               oTempFree
               ] or >
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tLiteralInteger)
              | tLiteralInteger:
              oOperandPushInteger
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mManifest)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             ?tTrap (tTrap)
             oOperandPushTrap
             oEmitSingle(iCall)
             oOperandPop
             oOperandPushMode(mStackReg)
             oOperandSetLength(two)
             oOperandPushMode(mManifest)
             oOperandSetLength(two)
             oOperandSetValue(twelve)
             oEmitDouble(iAdd)
             oOperandPop
             oOperandPop
             >>
            ;WriteParameter
            }
            [ (tWriteEnd)
            | tWriteEnd:
            ] or >
            >>
           ;WriteProc
           ] or >
           }
           [ (tIfMerge)
           | *:
           ] or >
           >>
          ;Block
          >>
         ;Statements
         [ (tIfMerge)
         | tIfMerge:
         oEmitUnconditionalForwardBranch
         oFixAndFreeShuntList
         oOperandPop
         oFixPushLastAddress
         oEmitMergeSourceCoordinate
         @Statements
          @Block
           [ (tWriteBegin)
           | tWriteBegin:
           @WriteProc
            oEmitSourceCoordinate
            [ (tTrapBegin)
            | *:
            @WriteParameter
             ?tTrapBegin (tTrapBegin)
             ?tLiteralAddress (tLiteralAddress)
             @OperandPushVariable
              oOperandPushVariable
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              >>
             ;OperandPushVariable
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mStatic)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tVarParm (tVarParm)
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tConcatenate)
              | tConcatenate:
              @OperandConcatenatePop
               @SaveTempRegsToStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(one)
                oEmitSingle(iPush)
                oOperandSetRegnum(two)
                oEmitSingle(iPush)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPush)
                oOperandSetRegnum(four)
                oEmitSingle(iPush)
                oOperandPop
                >>
               ;SaveTempRegsToStack
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               oOperandPushMode(mTrap)
               oOperandSetValue(trConcatenate)
               oOperandSetLength(two)
               oEmitSingle(iCall)
               oOperandPop
               oOperandPushMode(mStackReg)
               oOperandSetLength(two)
               oOperandPushMode(mManifest)
               oOperandSetLength(two)
               oOperandSetValue(eight)
               oEmitDouble(iAdd)
               oOperandPop
               oOperandPop
               oOperandPushMode(mScratchReg1)
               oOperandSetLength(two)
               oOperandPushMode(mResultReg)
               oOperandSetLength(two)
               oEmitDouble(iMov)
               oOperandPop
               @RestoreTempRegsFromStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(four)
                oEmitSingle(iPop)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPop)
                oOperandSetRegnum(two)
                oEmitSingle(iPop)
                oOperandSetRegnum(one)
                oEmitSingle(iPop)
                oOperandPop
                >>
               ;RestoreTempRegsFromStack
               @OperandForceIntoTemp
                [ oOperandChooseMode (mScratchReg1)
                | *:
                [ oOperandChooseLength (two)
                | two:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mScratchReg1)
                 | *:
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetMode(mTemp)
                ] or >
                >>
               ;OperandForceIntoTemp
               oOperandSetLength(two)
               >>
              ;OperandConcatenatePop
              ] or >
              }
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tConcatenate)
              | tConcatenate:
              @OperandConcatenatePop
               @SaveTempRegsToStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(one)
                oEmitSingle(iPush)
                oOperandSetRegnum(two)
                oEmitSingle(iPush)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPush)
                oOperandSetRegnum(four)
                oEmitSingle(iPush)
                oOperandPop
                >>
               ;SaveTempRegsToStack
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mTemp)
                | *:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               oOperandPushMode(mTrap)
               oOperandSetValue(trConcatenate)
               oOperandSetLength(two)
               oEmitSingle(iCall)
               oOperandPop
               oOperandPushMode(mStackReg)
               oOperandSetLength(two)
               oOperandPushMode(mManifest)
               oOperandSetLength(two)
               oOperandSetValue(eight)
               oEmitDouble(iAdd)
               oOperandPop
               oOperandPop
               oOperandPushMode(mScratchReg1)
               oOperandSetLength(two)
               oOperandPushMode(mResultReg)
               oOperandSetLength(two)
               oEmitDouble(iMov)
               oOperandPop
               @RestoreTempRegsFromStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(four)
                oEmitSingle(iPop)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPop)
                oOperandSetRegnum(two)
                oEmitSingle(iPop)
                oOperandSetRegnum(one)
                oEmitSingle(iPop)
                oOperandPop
                >>
               ;RestoreTempRegsFromStack
               @OperandForceIntoTemp
                [ oOperandChooseMode (mScratchReg1)
                | *:
                [ oOperandChooseLength (two)
                | two:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mScratchReg1)
                 | *:
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetMode(mTemp)
                ] or >
                >>
               ;OperandForceIntoTemp
               oOperandSetLength(two)
               >>
              ;OperandConcatenatePop
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             [ (tParmEnd)
             | *:
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mTemp)
               | mTemp:
               oTempFree
               ] or >
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tLiteralInteger)
              | tLiteralInteger:
              oOperandPushInteger
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mManifest)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             ?tTrap (tTrap)
             oOperandPushTrap
             oEmitSingle(iCall)
             oOperandPop
             oOperandPushMode(mStackReg)
             oOperandSetLength(two)
             oOperandPushMode(mManifest)
             oOperandSetLength(two)
             oOperandSetValue(twelve)
             oEmitDouble(iAdd)
             oOperandPop
             oOperandPop
             >>
            ;WriteParameter
            }
            [ (tWriteEnd)
            | tWriteEnd:
            ] or >
            >>
           ;WriteProc
           ] or >
           }
           [ (tIfEnd)
           | *:
           ] or >
           >>
          ;Block
          >>
         ;Statements
         oFixForwardBranch
         oFixPopAddress
         ?tIfEnd (tIfEnd)
         ] or >
         >>
        ;IfStmt
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tIfBegin)
        | tIfBegin:
        @IfStmt
         oEmitSourceCoordinate
         @OperandPushBooleanControlExpression
          @OperandPushExpression
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLength)
           | tLength:
           @OperandLength
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trLength)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(four)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandLength
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLength)
           | tLength:
           @OperandLength
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trLength)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(four)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandLength
           ] or >
           }
           [ (tSubstring)
           | tSubstring:
           @OperandSubstringPopPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trSubstring)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(twelve)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandSubstringPopPop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tStringEQ)
           | tStringEQ:
           @OperandStringEqualPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trStringEqual)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(one)
            >>
           ;OperandStringEqualPop
           ] or >
           }
           [ (tIfThen)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (no)
           | *:
           [ oOperandChooseManifestValue ()
           | *:
           @EmitTst
            [ oOperandChooseLength (one)
            | one:
            oOperandPushMode(mManifest)
            oOperandSetValue(zero)
            oOperandSetLength(one)
            ] or >
            @EmitCmp
             oOperandSwap
             [ oOperandChooseMode (mTemp)
             | *:
             oOperandSwap
             @OperandLeftOrRightIsTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandSwap
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oOperandSwap
              >>yes
             ;OperandLeftOrRightIsTemp
             [@OperandLeftOrRightIsTemp (yes)
             | yes:
             oEmitDouble(iCmp)
             ] or >
             >>
            ;EmitCmp
            oOperandPop
            >>
           ;EmitTst
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushJumpCondition(iJne)
           >>
          ;OperandForceToJumpCondition
          >>
         ;OperandPushBooleanControlExpression
         ?tIfThen (tIfThen)
         [ oOperandChooseJumpCondition (iJne)
         | *:
         @OperandComplementJumpCondition
          [ oOperandChooseJumpCondition (iJne)
          | *:
          oOperandComplementJumpCondition
          >>
         ;OperandComplementJumpCondition
         @OperandInfixOr
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (yes)
           | yes:
           ] or >
           >>
          ;OperandForceToJumpCondition
          [ oOperandChooseJumpCondition (iJeq)
          | *:
          oEmitConditionalForwardBranch
          oFixAndFreeFalseBranches
          oFixPushLastAddress
          oOperandMergeShuntsWithAddress
          oFixPopAddress
          >>
         ;OperandInfixOr
         @Statements
          @Block
           [ (tWriteBegin)
           | tWriteBegin:
           @WriteProc
            oEmitSourceCoordinate
            [ (tTrapBegin)
            | *:
            @WriteParameter
             ?tTrapBegin (tTrapBegin)
             ?tLiteralAddress (tLiteralAddress)
             @OperandPushVariable
              oOperandPushVariable
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              >>
             ;OperandPushVariable
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mStatic)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tVarParm (tVarParm)
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tConcatenate)
              | tConcatenate:
              @OperandConcatenatePop
               @SaveTempRegsToStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(one)
                oEmitSingle(iPush)
                oOperandSetRegnum(two)
                oEmitSingle(iPush)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPush)
                oOperandSetRegnum(four)
                oEmitSingle(iPush)
                oOperandPop
                >>
               ;SaveTempRegsToStack
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               oOperandPushMode(mTrap)
               oOperandSetValue(trConcatenate)
               oOperandSetLength(two)
               oEmitSingle(iCall)
               oOperandPop
               oOperandPushMode(mStackReg)
               oOperandSetLength(two)
               oOperandPushMode(mManifest)
               oOperandSetLength(two)
               oOperandSetValue(eight)
               oEmitDouble(iAdd)
               oOperandPop
               oOperandPop
               oOperandPushMode(mScratchReg1)
               oOperandSetLength(two)
               oOperandPushMode(mResultReg)
               oOperandSetLength(two)
               oEmitDouble(iMov)
               oOperandPop
               @RestoreTempRegsFromStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(four)
                oEmitSingle(iPop)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPop)
                oOperandSetRegnum(two)
                oEmitSingle(iPop)
                oOperandSetRegnum(one)
                oEmitSingle(iPop)
                oOperandPop
                >>
               ;RestoreTempRegsFromStack
               @OperandForceIntoTemp
                [ oOperandChooseMode (mScratchReg1)
                | *:
                [ oOperandChooseLength (two)
                | two:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mScratchReg1)
                 | *:
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetMode(mTemp)
                ] or >
                >>
               ;OperandForceIntoTemp
               oOperandSetLength(two)
               >>
              ;OperandConcatenatePop
              ] or >
              }
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tConcatenate)
              | tConcatenate:
              @OperandConcatenatePop
               @SaveTempRegsToStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(one)
                oEmitSingle(iPush)
                oOperandSetRegnum(two)
                oEmitSingle(iPush)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPush)
                oOperandSetRegnum(four)
                oEmitSingle(iPush)
                oOperandPop
                >>
               ;SaveTempRegsToStack
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mTemp)
                | *:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               oOperandPushMode(mTrap)
               oOperandSetValue(trConcatenate)
               oOperandSetLength(two)
               oEmitSingle(iCall)
               oOperandPop
               oOperandPushMode(mStackReg)
               oOperandSetLength(two)
               oOperandPushMode(mManifest)
               oOperandSetLength(two)
               oOperandSetValue(eight)
               oEmitDouble(iAdd)
               oOperandPop
               oOperandPop
               oOperandPushMode(mScratchReg1)
               oOperandSetLength(two)
               oOperandPushMode(mResultReg)
               oOperandSetLength(two)
               oEmitDouble(iMov)
               oOperandPop
               @RestoreTempRegsFromStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(four)
                oEmitSingle(iPop)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPop)
                oOperandSetRegnum(two)
                oEmitSingle(iPop)
                oOperandSetRegnum(one)
                oEmitSingle(iPop)
                oOperandPop
                >>
               ;RestoreTempRegsFromStack
               @OperandForceIntoTemp
                [ oOperandChooseMode (mScratchReg1)
                | *:
                [ oOperandChooseLength (two)
                | two:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mScratchReg1)
                 | *:
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetMode(mTemp)
                ] or >
                >>
               ;OperandForceIntoTemp
               oOperandSetLength(two)
               >>
              ;OperandConcatenatePop
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             [ (tParmEnd)
             | *:
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mTemp)
               | mTemp:
               oTempFree
               ] or >
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tLiteralInteger)
              | tLiteralInteger:
              oOperandPushInteger
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mManifest)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             ?tTrap (tTrap)
             oOperandPushTrap
             oEmitSingle(iCall)
             oOperandPop
             oOperandPushMode(mStackReg)
             oOperandSetLength(two)
             oOperandPushMode(mManifest)
             oOperandSetLength(two)
             oOperandSetValue(twelve)
             oEmitDouble(iAdd)
             oOperandPop
             oOperandPop
             >>
            ;WriteParameter
            }
            [ (tWriteEnd)
            | tWriteEnd:
            ] or >
            >>
           ;WriteProc
           ] or >
           }
           [ (tIfMerge)
           | *:
           ] or >
           >>
          ;Block
          >>
         ;Statements
         [ (tIfMerge)
         | tIfMerge:
         oEmitUnconditionalForwardBranch
         oFixAndFreeShuntList
         oOperandPop
         oFixPushLastAddress
         oEmitMergeSourceCoordinate
         @Statements
          @Block
           [ (tWriteBegin)
           | tWriteBegin:
           @WriteProc
            oEmitSourceCoordinate
            [ (tTrapBegin)
            | *:
            @WriteParameter
             ?tTrapBegin (tTrapBegin)
             ?tLiteralAddress (tLiteralAddress)
             @OperandPushVariable
              oOperandPushVariable
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              >>
             ;OperandPushVariable
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mStatic)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tVarParm (tVarParm)
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tConcatenate)
              | tConcatenate:
              @OperandConcatenatePop
               @SaveTempRegsToStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(one)
                oEmitSingle(iPush)
                oOperandSetRegnum(two)
                oEmitSingle(iPush)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPush)
                oOperandSetRegnum(four)
                oEmitSingle(iPush)
                oOperandPop
                >>
               ;SaveTempRegsToStack
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               oOperandPushMode(mTrap)
               oOperandSetValue(trConcatenate)
               oOperandSetLength(two)
               oEmitSingle(iCall)
               oOperandPop
               oOperandPushMode(mStackReg)
               oOperandSetLength(two)
               oOperandPushMode(mManifest)
               oOperandSetLength(two)
               oOperandSetValue(eight)
               oEmitDouble(iAdd)
               oOperandPop
               oOperandPop
               oOperandPushMode(mScratchReg1)
               oOperandSetLength(two)
               oOperandPushMode(mResultReg)
               oOperandSetLength(two)
               oEmitDouble(iMov)
               oOperandPop
               @RestoreTempRegsFromStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(four)
                oEmitSingle(iPop)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPop)
                oOperandSetRegnum(two)
                oEmitSingle(iPop)
                oOperandSetRegnum(one)
                oEmitSingle(iPop)
                oOperandPop
                >>
               ;RestoreTempRegsFromStack
               @OperandForceIntoTemp
                [ oOperandChooseMode (mScratchReg1)
                | *:
                [ oOperandChooseLength (two)
                | two:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mScratchReg1)
                 | *:
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetMode(mTemp)
                ] or >
                >>
               ;OperandForceIntoTemp
               oOperandSetLength(two)
               >>
              ;OperandConcatenatePop
              ] or >
              }
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tConcatenate)
              | tConcatenate:
              @OperandConcatenatePop
               @SaveTempRegsToStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(one)
                oEmitSingle(iPush)
                oOperandSetRegnum(two)
                oEmitSingle(iPush)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPush)
                oOperandSetRegnum(four)
                oEmitSingle(iPush)
                oOperandPop
                >>
               ;SaveTempRegsToStack
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mStatic)
                | mStatic:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iLoada)
                oOperandPop
                ] or >
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               @OperandForceAddressIntoTemp
                [ oOperandChooseMode (mTemp)
                | *:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetLength(two)
                >>
               ;OperandForceAddressIntoTemp
               @OperandForceToStack
                [ oOperandChooseLength (two)
                | two:
                ] or >
                oEmitSingle(iPush)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mTemp)
                 | mTemp:
                 oTempFree
                 ] or >
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandPushMode(mStack)
                >>
               ;OperandForceToStack
               @OperandPopAndFreeTemp
                [ oOperandChooseMode (mStack)
                | *:
                oOperandPop
                >>
               ;OperandPopAndFreeTemp
               oOperandPushMode(mTrap)
               oOperandSetValue(trConcatenate)
               oOperandSetLength(two)
               oEmitSingle(iCall)
               oOperandPop
               oOperandPushMode(mStackReg)
               oOperandSetLength(two)
               oOperandPushMode(mManifest)
               oOperandSetLength(two)
               oOperandSetValue(eight)
               oEmitDouble(iAdd)
               oOperandPop
               oOperandPop
               oOperandPushMode(mScratchReg1)
               oOperandSetLength(two)
               oOperandPushMode(mResultReg)
               oOperandSetLength(two)
               oEmitDouble(iMov)
               oOperandPop
               @RestoreTempRegsFromStack
                oOperandPushMode(mTemp)
                oOperandSetLength(two)
                oOperandSetRegnum(four)
                oEmitSingle(iPop)
                oOperandSetRegnum(regCX)
                oEmitSingle(iPop)
                oOperandSetRegnum(two)
                oEmitSingle(iPop)
                oOperandSetRegnum(one)
                oEmitSingle(iPop)
                oOperandPop
                >>
               ;RestoreTempRegsFromStack
               @OperandForceIntoTemp
                [ oOperandChooseMode (mScratchReg1)
                | *:
                [ oOperandChooseLength (two)
                | two:
                @OperandPushTempWord
                 oTempAllocate
                 oOperandPushTemp
                 oOperandSetValue(zero)
                 oOperandSetLength(two)
                 >>
                ;OperandPushTempWord
                oOperandSwap
                oEmitDouble(iMov)
                @OperandPopAndFreeTemp
                 [ oOperandChooseMode (mScratchReg1)
                 | *:
                 oOperandPop
                 >>
                ;OperandPopAndFreeTemp
                oOperandSetMode(mTemp)
                ] or >
                >>
               ;OperandForceIntoTemp
               oOperandSetLength(two)
               >>
              ;OperandConcatenatePop
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             [ (tParmEnd)
             | *:
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mTemp)
               | mTemp:
               oTempFree
               ] or >
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tLiteralInteger)
              | tLiteralInteger:
              oOperandPushInteger
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mManifest)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             ?tTrap (tTrap)
             oOperandPushTrap
             oEmitSingle(iCall)
             oOperandPop
             oOperandPushMode(mStackReg)
             oOperandSetLength(two)
             oOperandPushMode(mManifest)
             oOperandSetLength(two)
             oOperandSetValue(twelve)
             oEmitDouble(iAdd)
             oOperandPop
             oOperandPop
             >>
            ;WriteParameter
            }
            [ (tWriteEnd)
            | tWriteEnd:
            ] or >
            >>
           ;WriteProc
           ] or >
           }
           [ (tIfEnd)
           | *:
           ] or >
           >>
          ;Block
          >>
         ;Statements
         oFixForwardBranch
         oFixPopAddress
         ?tIfEnd (tIfEnd)
         ] or >
         >>
        ;IfStmt
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tWriteBegin)
        | tWriteBegin:
        @WriteProc
         oEmitSourceCoordinate
         [ (tTrapBegin)
         | *:
         @WriteParameter
          ?tTrapBegin (tTrapBegin)
          ?tLiteralAddress (tLiteralAddress)
          @OperandPushVariable
           oOperandPushVariable
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           [ (tVarParm)
           | *:
           >>
          ;OperandPushVariable
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mStatic)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tVarParm (tVarParm)
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tConcatenate)
           | tConcatenate:
           @OperandConcatenatePop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trConcatenate)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandConcatenatePop
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          [ (tParmEnd)
          | *:
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          @OperandPushExpression
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tParmEnd)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToStack
           [ oOperandChooseLength (two)
           | two:
           ] or >
           oEmitSingle(iPush)
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mManifest)
            | *:
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushMode(mStack)
           >>
          ;OperandForceToStack
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStack)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          ?tParmEnd (tParmEnd)
          ?tTrap (tTrap)
          oOperandPushTrap
          oEmitSingle(iCall)
          oOperandPop
          oOperandPushMode(mStackReg)
          oOperandSetLength(two)
          oOperandPushMode(mManifest)
          oOperandSetLength(two)
          oOperandSetValue(twelve)
          oEmitDouble(iAdd)
          oOperandPop
          oOperandPop
          >>
         ;WriteParameter
         }
         [ (tWriteEnd)
         | tWriteEnd:
         ] or >
         >>
        ;WriteProc
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tTrapBegin)
        | tTrapBegin:
        @TrapStmt
         oEmitSourceCoordinate
         [ (tLiteralAddress)
         | tLiteralAddress:
         @OperandPushVariable
          oOperandPushVariable
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          [ (tVarParm)
          | *:
          >>
         ;OperandPushVariable
         oOperandPushCopy
         @OperandForceToStack
          [ oOperandChooseLength (two)
          | two:
          ] or >
          oEmitSingle(iPush)
          @OperandPopAndFreeTemp
           [ oOperandChooseMode (mStatic)
           | *:
           oOperandPop
           >>
          ;OperandPopAndFreeTemp
          oOperandPushMode(mStack)
          >>
         ;OperandForceToStack
         oOperandPop
         ?tVarParm (tVarParm)
         ?tParmEnd (tParmEnd)
         [ (tTrap)
         | tTrap:
         @OperandPopAndFreeTemp
          [ oOperandChooseMode (mStatic)
          | *:
          oOperandPop
          >>
         ;OperandPopAndFreeTemp
         oOperandPushTrap
         oEmitSingle(iCall)
         oOperandPop
         oOperandPushMode(mStackReg)
         oOperandSetLength(two)
         oOperandPushMode(mManifest)
         oOperandSetLength(two)
         oOperandSetValue(four)
         oEmitDouble(iAdd)
         oOperandPop
         oOperandPop
         ] or >
         ] or >
         >>
        ;TrapStmt
        ] or >
        }
        [ (tIfMerge)
        | *:
        ] or >
        >>
       ;Block
       >>
      ;Statements
      [ (tIfMerge)
      | tIfMerge:
      oEmitUnconditionalForwardBranch
      oFixAndFreeShuntList
      oOperandPop
      oFixPushLastAddress
      oEmitMergeSourceCoordinate
      @Statements
       @Block
        [ (tIfBegin)
        | tIfBegin:
        @IfStmt
         oEmitSourceCoordinate
         @OperandPushBooleanControlExpression
          @OperandPushExpression
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLength)
           | tLength:
           @OperandLength
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trLength)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(four)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandLength
           ] or >
           }
           [ (tLiteralInteger)
           | tLiteralInteger:
           oOperandPushInteger
           ] or >
           }
           [ (tSubtract)
           | tSubtract:
           @OperandSubtractPop
            @OperandAreLeftAndRightManifest
             [ oOperandChooseMode (mManifest)
             | mManifest:
             oOperandSwap
             [ oOperandChooseMode (mTemp)
             | *:
             oOperandSwap
             >>no
            ;OperandAreLeftAndRightManifest
            [@OperandAreLeftAndRightManifest (no)
            | no:
            [ oOperandChooseManifestValue (one)
            | one:
            oOperandPop
            @OperandForceIntoTemp
             [ oOperandChooseMode (mTemp)
             | mTemp:
             ] or >
             >>
            ;OperandForceIntoTemp
            oEmitSingle(iDec)
            ] or >
            ] or >
            >>
           ;OperandSubtractPop
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tLength)
           | tLength:
           @OperandLength
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trLength)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(four)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandLength
           ] or >
           }
           [ (tSubstring)
           | tSubstring:
           @OperandSubstringPopPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trSubstring)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(twelve)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(two)
            >>
           ;OperandSubstringPopPop
           ] or >
           }
           [ (tSkipString)
           | tSkipString:
           oEmitNone(iData)
           ?tStringData (tStringData)
           oEmitString
           oEmitNone(iText)
           ] or >
           }
           [ (tLiteralAddress)
           | tLiteralAddress:
           @OperandPushVariable
            oOperandPushVariable
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | *:
            [ (tFetchChar)
            | tFetchChar:
            oOperandSetLength(regCX)
            ] or >
            >>
           ;OperandPushVariable
           ] or >
           }
           [ (tStringEQ)
           | tStringEQ:
           @OperandStringEqualPop
            @SaveTempRegsToStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(one)
             oEmitSingle(iPush)
             oOperandSetRegnum(two)
             oEmitSingle(iPush)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPush)
             oOperandSetRegnum(four)
             oEmitSingle(iPush)
             oOperandPop
             >>
            ;SaveTempRegsToStack
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mStatic)
             | mStatic:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iLoada)
             oOperandPop
             ] or >
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            @OperandForceAddressIntoTemp
             [ oOperandChooseMode (mTemp)
             | *:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetLength(two)
             >>
            ;OperandForceAddressIntoTemp
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oTempFree
              ] or >
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStack)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushMode(mTrap)
            oOperandSetValue(trStringEqual)
            oOperandSetLength(two)
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(eight)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            oOperandPushMode(mScratchReg1)
            oOperandSetLength(two)
            oOperandPushMode(mResultReg)
            oOperandSetLength(two)
            oEmitDouble(iMov)
            oOperandPop
            @RestoreTempRegsFromStack
             oOperandPushMode(mTemp)
             oOperandSetLength(two)
             oOperandSetRegnum(four)
             oEmitSingle(iPop)
             oOperandSetRegnum(regCX)
             oEmitSingle(iPop)
             oOperandSetRegnum(two)
             oEmitSingle(iPop)
             oOperandSetRegnum(one)
             oEmitSingle(iPop)
             oOperandPop
             >>
            ;RestoreTempRegsFromStack
            @OperandForceIntoTemp
             [ oOperandChooseMode (mScratchReg1)
             | *:
             [ oOperandChooseLength (two)
             | two:
             @OperandPushTempWord
              oTempAllocate
              oOperandPushTemp
              oOperandSetValue(zero)
              oOperandSetLength(two)
              >>
             ;OperandPushTempWord
             oOperandSwap
             oEmitDouble(iMov)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mScratchReg1)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandSetMode(mTemp)
             ] or >
             >>
            ;OperandForceIntoTemp
            oOperandSetLength(one)
            >>
           ;OperandStringEqualPop
           ] or >
           }
           [ (tIfThen)
           | *:
           ] or >
           >>
          ;OperandPushExpression
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (no)
           | *:
           [ oOperandChooseManifestValue ()
           | *:
           @EmitTst
            [ oOperandChooseLength (one)
            | one:
            oOperandPushMode(mManifest)
            oOperandSetValue(zero)
            oOperandSetLength(one)
            ] or >
            @EmitCmp
             oOperandSwap
             [ oOperandChooseMode (mTemp)
             | *:
             oOperandSwap
             @OperandLeftOrRightIsTemp
              [ oOperandChooseMode (mManifest)
              | *:
              oOperandSwap
              [ oOperandChooseMode (mTemp)
              | mTemp:
              oOperandSwap
              >>yes
             ;OperandLeftOrRightIsTemp
             [@OperandLeftOrRightIsTemp (yes)
             | yes:
             oEmitDouble(iCmp)
             ] or >
             >>
            ;EmitCmp
            oOperandPop
            >>
           ;EmitTst
           @OperandPopAndFreeTemp
            [ oOperandChooseMode (mTemp)
            | mTemp:
            oTempFree
            ] or >
            oOperandPop
            >>
           ;OperandPopAndFreeTemp
           oOperandPushJumpCondition(iJne)
           >>
          ;OperandForceToJumpCondition
          >>
         ;OperandPushBooleanControlExpression
         ?tIfThen (tIfThen)
         [ oOperandChooseJumpCondition (iJne)
         | *:
         @OperandComplementJumpCondition
          [ oOperandChooseJumpCondition (iJne)
          | *:
          oOperandComplementJumpCondition
          >>
         ;OperandComplementJumpCondition
         @OperandInfixOr
          @OperandForceToJumpCondition
           [ oOperandIsJumpCondition (yes)
           | yes:
           ] or >
           >>
          ;OperandForceToJumpCondition
          [ oOperandChooseJumpCondition (iJeq)
          | *:
          oEmitConditionalForwardBranch
          oFixAndFreeFalseBranches
          oFixPushLastAddress
          oOperandMergeShuntsWithAddress
          oFixPopAddress
          >>
         ;OperandInfixOr
         @Statements
          @Block
           [ (tWriteBegin)
           | tWriteBegin:
           @WriteProc
            oEmitSourceCoordinate
            [ (tTrapBegin)
            | *:
            @WriteParameter
             ?tTrapBegin (tTrapBegin)
             ?tLiteralAddress (tLiteralAddress)
             @OperandPushVariable
              oOperandPushVariable
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              >>
             ;OperandPushVariable
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mStatic)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tVarParm (tVarParm)
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             [ (tParmEnd)
             | *:
             @OperandForceToStack
              [ oOperandChooseLength (regCX)
              | regCX:
              @OperandForceAddressIntoTemp
               [ oOperandChooseMode (mStatic)
               | mStatic:
               @OperandPushTempWord
                oTempAllocate
                oOperandPushTemp
                oOperandSetValue(zero)
                oOperandSetLength(two)
                >>
               ;OperandPushTempWord
               oOperandSwap
               oEmitDouble(iLoada)
               oOperandPop
               ] or >
               oOperandSetLength(two)
               >>
              ;OperandForceAddressIntoTemp
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mTemp)
               | mTemp:
               oTempFree
               ] or >
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tLiteralInteger)
              | tLiteralInteger:
              oOperandPushInteger
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mManifest)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             ?tTrap (tTrap)
             oOperandPushTrap
             oEmitSingle(iCall)
             oOperandPop
             oOperandPushMode(mStackReg)
             oOperandSetLength(two)
             oOperandPushMode(mManifest)
             oOperandSetLength(two)
             oOperandSetValue(twelve)
             oEmitDouble(iAdd)
             oOperandPop
             oOperandPop
             >>
            ;WriteParameter
            }
            [ (tWriteEnd)
            | tWriteEnd:
            ] or >
            >>
           ;WriteProc
           ] or >
           }
           [ (tTrapBegin)
           | tTrapBegin:
           @TrapStmt
            oEmitSourceCoordinate
            [ (tLiteralAddress)
            | tLiteralAddress:
            @OperandPushVariable
             oOperandPushVariable
             [ (tVarParm)
             | *:
             [ (tVarParm)
             | *:
             [ (tVarParm)
             | *:
             >>
            ;OperandPushVariable
            oOperandPushCopy
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStatic)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            oOperandPop
            ?tVarParm (tVarParm)
            ?tParmEnd (tParmEnd)
            [ (tTrap)
            | tTrap:
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStatic)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushTrap
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(four)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            ] or >
            ] or >
            >>
           ;TrapStmt
           ] or >
           }
           [ (tTrapBegin)
           | tTrapBegin:
           @TrapStmt
            oEmitSourceCoordinate
            [ (tLiteralAddress)
            | tLiteralAddress:
            @OperandPushVariable
             oOperandPushVariable
             [ (tVarParm)
             | *:
             [ (tVarParm)
             | *:
             [ (tVarParm)
             | *:
             >>
            ;OperandPushVariable
            oOperandPushCopy
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStatic)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            oOperandPop
            ?tVarParm (tVarParm)
            ?tParmEnd (tParmEnd)
            [ (tTrap)
            | tTrap:
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStatic)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushTrap
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(four)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            ] or >
            ] or >
            >>
           ;TrapStmt
           ] or >
           }
           [ (tIfMerge)
           | *:
           ] or >
           >>
          ;Block
          >>
         ;Statements
         [ (tIfMerge)
         | tIfMerge:
         oEmitUnconditionalForwardBranch
         oFixAndFreeShuntList
         oOperandPop
         oFixPushLastAddress
         oEmitMergeSourceCoordinate
         @Statements
          @Block
           [ (tWriteBegin)
           | tWriteBegin:
           @WriteProc
            oEmitSourceCoordinate
            [ (tTrapBegin)
            | *:
            @WriteParameter
             ?tTrapBegin (tTrapBegin)
             ?tLiteralAddress (tLiteralAddress)
             @OperandPushVariable
              oOperandPushVariable
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              [ (tVarParm)
              | *:
              >>
             ;OperandPushVariable
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mStatic)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tVarParm (tVarParm)
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tSkipString)
              | tSkipString:
              oEmitNone(iData)
              ?tStringData (tStringData)
              oEmitString
              oEmitNone(iText)
              ] or >
              }
              [ (tLiteralAddress)
              | tLiteralAddress:
              @OperandPushVariable
               oOperandPushVariable
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | *:
               [ (tFetchChar)
               | tFetchChar:
               oOperandSetLength(regCX)
               ] or >
               >>
              ;OperandPushVariable
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             [ (tParmEnd)
             | *:
             @OperandForceToStack
              [ oOperandChooseLength (regCX)
              | regCX:
              @OperandForceAddressIntoTemp
               [ oOperandChooseMode (mStatic)
               | mStatic:
               @OperandPushTempWord
                oTempAllocate
                oOperandPushTemp
                oOperandSetValue(zero)
                oOperandSetLength(two)
                >>
               ;OperandPushTempWord
               oOperandSwap
               oEmitDouble(iLoada)
               oOperandPop
               ] or >
               oOperandSetLength(two)
               >>
              ;OperandForceAddressIntoTemp
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mTemp)
               | mTemp:
               oTempFree
               ] or >
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             @OperandPushExpression
              [ (tLiteralInteger)
              | tLiteralInteger:
              oOperandPushInteger
              ] or >
              }
              [ (tParmEnd)
              | *:
              ] or >
              >>
             ;OperandPushExpression
             @OperandForceToStack
              [ oOperandChooseLength (two)
              | two:
              ] or >
              oEmitSingle(iPush)
              @OperandPopAndFreeTemp
               [ oOperandChooseMode (mManifest)
               | *:
               oOperandPop
               >>
              ;OperandPopAndFreeTemp
              oOperandPushMode(mStack)
              >>
             ;OperandForceToStack
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStack)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             ?tParmEnd (tParmEnd)
             ?tTrap (tTrap)
             oOperandPushTrap
             oEmitSingle(iCall)
             oOperandPop
             oOperandPushMode(mStackReg)
             oOperandSetLength(two)
             oOperandPushMode(mManifest)
             oOperandSetLength(two)
             oOperandSetValue(twelve)
             oEmitDouble(iAdd)
             oOperandPop
             oOperandPop
             >>
            ;WriteParameter
            }
            [ (tWriteEnd)
            | tWriteEnd:
            ] or >
            >>
           ;WriteProc
           ] or >
           }
           [ (tTrapBegin)
           | tTrapBegin:
           @TrapStmt
            oEmitSourceCoordinate
            [ (tLiteralAddress)
            | tLiteralAddress:
            @OperandPushVariable
             oOperandPushVariable
             [ (tVarParm)
             | *:
             [ (tVarParm)
             | *:
             [ (tVarParm)
             | *:
             >>
            ;OperandPushVariable
            oOperandPushCopy
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStatic)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            oOperandPop
            ?tVarParm (tVarParm)
            ?tParmEnd (tParmEnd)
            [ (tTrap)
            | tTrap:
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStatic)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushTrap
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(four)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            ] or >
            ] or >
            >>
           ;TrapStmt
           ] or >
           }
           [ (tTrapBegin)
           | tTrapBegin:
           @TrapStmt
            oEmitSourceCoordinate
            [ (tLiteralAddress)
            | tLiteralAddress:
            @OperandPushVariable
             oOperandPushVariable
             [ (tVarParm)
             | *:
             [ (tVarParm)
             | *:
             [ (tVarParm)
             | *:
             >>
            ;OperandPushVariable
            oOperandPushCopy
            @OperandForceToStack
             [ oOperandChooseLength (two)
             | two:
             ] or >
             oEmitSingle(iPush)
             @OperandPopAndFreeTemp
              [ oOperandChooseMode (mStatic)
              | *:
              oOperandPop
              >>
             ;OperandPopAndFreeTemp
             oOperandPushMode(mStack)
             >>
            ;OperandForceToStack
            oOperandPop
            ?tVarParm (tVarParm)
            ?tParmEnd (tParmEnd)
            [ (tTrap)
            | tTrap:
            @OperandPopAndFreeTemp
             [ oOperandChooseMode (mStatic)
             | *:
             oOperandPop
             >>
            ;OperandPopAndFreeTemp
            oOperandPushTrap
            oEmitSingle(iCall)
            oOperandPop
            oOperandPushMode(mStackReg)
            oOperandSetLength(two)
            oOperandPushMode(mManifest)
            oOperandSetLength(two)
            oOperandSetValue(four)
            oEmitDouble(iAdd)
            oOperandPop
            oOperandPop
            ] or >
            ] or >
            >>
           ;TrapStmt
           ] or >
           }
           [ (tIfEnd)
           | *:
           ] or >
           >>
          ;Block
          >>
         ;Statements
         oFixForwardBranch
         oFixPopAddress
         ?tIfEnd (tIfEnd)
         ] or >
         >>
        ;IfStmt
        ] or >
        }
        [ (tIfEnd)
        | *:
        ] or >
        >>
       ;Block
       >>
      ;Statements
      oFixForwardBranch
      oFixPopAddress
      ?tIfEnd (tIfEnd)
      ] or >
      >>
     ;IfStmt
     ] or >
     }
     [ (tTrapBegin)
     | tTrapBegin:
     @TrapStmt
      oEmitSourceCoordinate
      [ (tLiteralAddress)
      | tLiteralAddress:
      @OperandPushVariable
       oOperandPushVariable
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       [ (tVarParm)
       | *:
       >>
      ;OperandPushVariable
      oOperandPushCopy
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mStatic)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      oOperandPop
      ?tVarParm (tVarParm)
      ?tParmEnd (tParmEnd)
      [ (tTrap)
      | tTrap:
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStatic)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushTrap
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(four)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      ] or >
      ] or >
      >>
     ;TrapStmt
     ] or >
     }
     [ (tRepeatControl)
     | *:
     ] or >
     >>
    ;Block
    >>
   ;Statements
   ?tRepeatControl (tRepeatControl)
   @OperandPushBooleanControlExpression
    @OperandPushExpression
     [ (tLiteralAddress)
     | tLiteralAddress:
     @OperandPushVariable
      oOperandPushVariable
      [ (tFetchChar)
      | *:
      [ (tFetchChar)
      | *:
      [ (tFetchChar)
      | tFetchChar:
      oOperandSetLength(regCX)
      ] or >
      >>
     ;OperandPushVariable
     ] or >
     }
     [ (tSkipString)
     | tSkipString:
     oEmitNone(iData)
     ?tStringData (tStringData)
     oEmitString
     oEmitNone(iText)
     ] or >
     }
     [ (tLiteralAddress)
     | tLiteralAddress:
     @OperandPushVariable
      oOperandPushVariable
      [ (tFetchChar)
      | *:
      [ (tFetchChar)
      | *:
      [ (tFetchChar)
      | tFetchChar:
      oOperandSetLength(regCX)
      ] or >
      >>
     ;OperandPushVariable
     ] or >
     }
     [ (tStringEQ)
     | tStringEQ:
     @OperandStringEqualPop
      @SaveTempRegsToStack
       oOperandPushMode(mTemp)
       oOperandSetLength(two)
       oOperandSetRegnum(one)
       oEmitSingle(iPush)
       oOperandSetRegnum(two)
       oEmitSingle(iPush)
       oOperandSetRegnum(regCX)
       oEmitSingle(iPush)
       oOperandSetRegnum(four)
       oEmitSingle(iPush)
       oOperandPop
       >>
      ;SaveTempRegsToStack
      @OperandForceAddressIntoTemp
       [ oOperandChooseMode (mStatic)
       | mStatic:
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       oEmitDouble(iLoada)
       oOperandPop
       ] or >
       oOperandSetLength(two)
       >>
      ;OperandForceAddressIntoTemp
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      @OperandForceAddressIntoTemp
       [ oOperandChooseMode (mStatic)
       | mStatic:
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       oEmitDouble(iLoada)
       oOperandPop
       ] or >
       oOperandSetLength(two)
       >>
      ;OperandForceAddressIntoTemp
      @OperandForceToStack
       [ oOperandChooseLength (two)
       | two:
       ] or >
       oEmitSingle(iPush)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushMode(mStack)
       >>
      ;OperandForceToStack
      @OperandPopAndFreeTemp
       [ oOperandChooseMode (mStack)
       | *:
       oOperandPop
       >>
      ;OperandPopAndFreeTemp
      oOperandPushMode(mTrap)
      oOperandSetValue(trStringEqual)
      oOperandSetLength(two)
      oEmitSingle(iCall)
      oOperandPop
      oOperandPushMode(mStackReg)
      oOperandSetLength(two)
      oOperandPushMode(mManifest)
      oOperandSetLength(two)
      oOperandSetValue(eight)
      oEmitDouble(iAdd)
      oOperandPop
      oOperandPop
      oOperandPushMode(mScratchReg1)
      oOperandSetLength(two)
      oOperandPushMode(mResultReg)
      oOperandSetLength(two)
      oEmitDouble(iMov)
      oOperandPop
      @RestoreTempRegsFromStack
       oOperandPushMode(mTemp)
       oOperandSetLength(two)
       oOperandSetRegnum(four)
       oEmitSingle(iPop)
       oOperandSetRegnum(regCX)
       oEmitSingle(iPop)
       oOperandSetRegnum(two)
       oEmitSingle(iPop)
       oOperandSetRegnum(one)
       oEmitSingle(iPop)
       oOperandPop
       >>
      ;RestoreTempRegsFromStack
      @OperandForceIntoTemp
       [ oOperandChooseMode (mScratchReg1)
       | *:
       [ oOperandChooseLength (two)
       | two:
       @OperandPushTempWord
        oTempAllocate
        oOperandPushTemp
        oOperandSetValue(zero)
        oOperandSetLength(two)
        >>
       ;OperandPushTempWord
       oOperandSwap
       oEmitDouble(iMov)
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mScratchReg1)
        | *:
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandSetMode(mTemp)
       ] or >
       >>
      ;OperandForceIntoTemp
      oOperandSetLength(one)
      >>
     ;OperandStringEqualPop
     ] or >
     }
     [ (tNot)
     | tNot:
     @OperandNot
      @OperandForceToJumpCondition
       [ oOperandIsJumpCondition (no)
       | *:
       [ oOperandChooseManifestValue ()
       | *:
       @EmitTst
        [ oOperandChooseLength (one)
        | one:
        oOperandPushMode(mManifest)
        oOperandSetValue(zero)
        oOperandSetLength(one)
        ] or >
        @EmitCmp
         oOperandSwap
         [ oOperandChooseMode (mTemp)
         | *:
         oOperandSwap
         @OperandLeftOrRightIsTemp
          [ oOperandChooseMode (mManifest)
          | *:
          oOperandSwap
          [ oOperandChooseMode (mTemp)
          | mTemp:
          oOperandSwap
          >>yes
         ;OperandLeftOrRightIsTemp
         [@OperandLeftOrRightIsTemp (yes)
         | yes:
         oEmitDouble(iCmp)
         ] or >
         >>
        ;EmitCmp
        oOperandPop
        >>
       ;EmitTst
       @OperandPopAndFreeTemp
        [ oOperandChooseMode (mTemp)
        | mTemp:
        oTempFree
        ] or >
        oOperandPop
        >>
       ;OperandPopAndFreeTemp
       oOperandPushJumpCondition(iJne)
       >>
      ;OperandForceToJumpCondition
      @OperandComplementJumpCondition
       [ oOperandChooseJumpCondition (iJne)
       | *:
       oOperandComplementJumpCondition
       >>
      ;OperandComplementJumpCondition
      >>
     ;OperandNot
     ] or >
     }
     [ (tNot)
     | tNot:
     @OperandNot
      @OperandForceToJumpCondition
       [ oOperandIsJumpCondition (yes)
       | yes:
       ] or >
       >>
      ;OperandForceToJumpCondition
      @OperandComplementJumpCondition
       [ oOperandChooseJumpCondition (iJeq)
       | *:
       oOperandComplementJumpCondition
       >>
      ;OperandComplementJumpCondition
      >>
     ;OperandNot
     ] or >
     }
     [ (tRepeatTest)
     | *:
     ] or >
     >>
    ;OperandPushExpression
    @OperandForceToJumpCondition
     [ oOperandIsJumpCondition (yes)
     | yes:
     ] or >
     >>
    ;OperandForceToJumpCondition
    >>
   ;OperandPushBooleanControlExpression
   ?tRepeatTest (tRepeatTest)
   [ oOperandChooseJumpCondition (iJne)
   | *:
   @OperandInfixOr
    @OperandForceToJumpCondition
     [ oOperandIsJumpCondition (yes)
     | yes:
     ] or >
     >>
    ;OperandForceToJumpCondition
    [ oOperandChooseJumpCondition (iJne)
    | *:
    oEmitConditionalForwardBranch
    oFixAndFreeFalseBranches
    oFixPushLastAddress
    oOperandMergeShuntsWithAddress
    oFixPopAddress
    >>
   ;OperandInfixOr
   oEmitUnconditionalBackwardBranch
   oFixPopAddress
   oFixAndFreeShuntList
   oOperandPop
   >>
  ;RepeatStmt
  ] or >
  }
  [ (tTrapBegin)
  | tTrapBegin:
  @TrapStmt
   oEmitSourceCoordinate
   [ (tTrap)
   | *:
   ?tTrap (tTrap)
   oOperandPushTrap
   oEmitSingle(iCall)
   oOperandPop
   >>
  ;TrapStmt
  ] or >
  }
  [ (tEndOfFile)
  | *:
  ] or >
  >>
 ;Block
 @EmitProgramEpilogue
  oEmitNone(iLeave)
  oEmitNone(iReturn)
  >>
 ;EmitProgramEpilogue
 >>
;Program
