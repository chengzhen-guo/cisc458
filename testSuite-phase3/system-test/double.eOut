@Program
 ?sProgram (sProgram)
 oSymbolStkPush(syProcedure)
 oSymbolTblPushScope
 oCountPush(three)
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdInput)
  | stdInput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(one)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 1
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdOutput)
  | stdOutput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(two)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 2
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 4
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sParmEnd)
 | sParmEnd:
 ] or >
 oCountPop
 @Block
  ?sBegin (sBegin)
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sInitialValue)
    | *:
    >>
   ;PublicDefinition
   [ (sInitialValue)
   | sInitialValue:
   .tInitialValue
   @Expression
    @Operand
     [ (sStringLiteral)
     | sStringLiteral:
     oSymbolStkPush(syExpression)
     @StringLiteral
      .tSkipString
      oFixPushForwardBranch
      oEmitNullAddress
      % value emitted -32767
      .tStringData
      oValuePushStringLength
      oEmitValue
      % value emitted 0
      oValuePop
      oValuePushCodeAddress
      oValueNegate
      oEmitString
      % value emitted 0
      oFixPopForwardBranch
      oTypeStkPush(tpChar)
      oTypeStkLinkToStandardType(stdChar)
      >>
     ;StringLiteral
     .tLiteralAddress
     oEmitValue
     % value emitted -23
     .tFetchChar
     oValuePop
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   .tInitEnd
   @TypeTblEnterIfNew
    [ oTypeStkChooseTypeReference (yes)
    | *:
    >>
   ;TypeTblEnterIfNew
   oSymbolStkPop
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpChar)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   .tLiteralAddress
   oValuePushSymbol
   oEmitValue
   % value emitted 8
   oValuePop
   [ oTypeStkChooseKind (tpChar)
   | *:
   @EmitStore
    [ oTypeStkChooseKind (tpChar)
    | tpChar:
    .tStoreChar
    ] or >
    >>
   ;EmitStore
   ] or >
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 55
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 65
        % value emitted 110
        % value emitted 121
        % value emitted 116
        % value emitted 104
        % value emitted 105
        % value emitted 110
        % value emitted 103
        % value emitted 32
        % value emitted 121
        % value emitted 111
        % value emitted 117
        % value emitted 32
        % value emitted 99
        % value emitted 97
        % value emitted 110
        % value emitted 32
        % value emitted 115
        % value emitted 97
        % value emitted 121
        % value emitted 44
        % value emitted 32
        % value emitted 73
        % value emitted 32
        % value emitted 99
        % value emitted 97
        % value emitted 110
        % value emitted 32
        % value emitted 115
        % value emitted 97
        % value emitted 121
        % value emitted 32
        % value emitted 116
        % value emitted 119
        % value emitted 105
        % value emitted 99
        % value emitted 101
        % value emitted 32
        % value emitted 40
        % value emitted 101
        % value emitted 110
        % value emitted 100
        % value emitted 32
        % value emitted 119
        % value emitted 105
        % value emitted 116
        % value emitted 104
        % value emitted 32
        % value emitted 39
        % value emitted 98
        % value emitted 121
        % value emitted 101
        % value emitted 39
        % value emitted 41
        % value emitted 58
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -43
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sRepeatStmt)
  | sRepeatStmt:
  @RepeatStmt
   .tRepeatBegin
   oFixPushTargetAddress
   [ (sBegin)
   | *:
   @Statement
    oSymbolTblPushScope
    @Block
     ?sBegin (sBegin)
     [ (sCallStmt)
     | sCallStmt:
     @CallStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syProcedure)
      | *:
      [ oSymbolStkChooseKind (syProcedure)
      | syProcedure:
      [ oSymbolStkChooseStandardRoutine (rtRead)
      | rtRead:
      .tReadBegin
      @ReadProcedure
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       oTypeStkPushSymbol
       [ oTypeStkChooseKind (tpChar)
       | *:
       oSymbolStkPushStandardVariable(stdInput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       oSymbolStkPop
       oTypeStkPop
       .tTrapBegin
       .tLiteralAddress
       oEmitValue
       % value emitted 0
       .tVarParm
       .tParmEnd
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 8
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       .tVarParm
       .tParmEnd
       @ReadText
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tTrap
        oEmitTrapKind(trReadString)
        % value emitted 108
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;ReadText
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       oValuePop
       ] or >
       .tReadEnd
       >>
      ;ReadProcedure
      ] or >
      ] or >
      oSymbolStkPop
      >>
     ;CallStmt
     ] or >
     }
     [ (sCallStmt)
     | sCallStmt:
     @CallStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syProcedure)
      | *:
      [ oSymbolStkChooseKind (syProcedure)
      | syProcedure:
      [ oSymbolStkChooseStandardRoutine (rtWrite)
      | rtWrite:
      .tWriteBegin
      @WriteProcedure
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       oTypeStkPushSymbol
       [ oTypeStkChooseKind (tpChar)
       | *:
       oTypeStkPop
       oSymbolStkPushStandardVariable(stdOutput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       oSymbolStkPop
       .tTrapBegin
       .tLiteralAddress
       oEmitValue
       % value emitted 4
       .tVarParm
       .tParmEnd
       oValuePop
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 8
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sStringLiteral)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       @VariableOperand
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tFetchChar
        ] or >
        >>
       ;VariableOperand
       ] or >
       @Expression
        @Operand
         [ (sStringLiteral)
         | sStringLiteral:
         oSymbolStkPush(syExpression)
         @StringLiteral
          .tSkipString
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          .tStringData
          oValuePushStringLength
          oEmitValue
          % value emitted 1
          oValuePop
          oValuePushCodeAddress
          oValueNegate
          oEmitString
          % value emitted 32
          % value emitted 0
          oFixPopForwardBranch
          oTypeStkPush(tpChar)
          oTypeStkLinkToStandardType(stdChar)
          >>
         ;StringLiteral
         .tLiteralAddress
         oEmitValue
         % value emitted -147
         .tFetchChar
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sConcatenate)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sConcatenate)
         | sConcatenate:
         .tConcatenate
         oTypeStkPush(tpChar)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sIdentifier)
        | *:
        }
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 8
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sConcatenate)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpChar)
          | tpChar:
          .tFetchChar
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sConcatenate)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sConcatenate)
         | sConcatenate:
         .tConcatenate
         oTypeStkPush(tpChar)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tParmEnd
       @WriteText
        [ (sParmEnd)
        | *:
        [ oTypeStkChooseKind (tpChar)
        | *:
        oValuePush(zero)
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        oValuePop
        .tParmEnd
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tTrap
        oEmitTrapKind(trWriteString)
        % value emitted 109
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;WriteText
       @WriteStandardExpnList
        oSymbolStkPushStandardVariable(stdOutput)
        [ oSymbolStkChooseKind (syVariable)
        | *:
        oValuePushSymbol
        oSymbolStkPop
        [ (sParmEnd)
        | sParmEnd:
        ] or >
        oValuePop
        >>
       ;WriteStandardExpnList
       ] or >
       .tWriteEnd
       >>
      ;WriteProcedure
      ] or >
      ] or >
      oSymbolStkPop
      >>
     ;CallStmt
     ] or >
     }
     [ (sCallStmt)
     | sCallStmt:
     @CallStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syProcedure)
      | *:
      [ oSymbolStkChooseKind (syProcedure)
      | syProcedure:
      [ oSymbolStkChooseStandardRoutine (rtWriteln)
      | rtWriteln:
      .tTrapBegin
      @WritelnProcedure
       [ (sParmEnd)
       | sParmEnd:
       oSymbolStkPushStandardVariable(stdOutput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       .tLiteralAddress
       oEmitValue
       % value emitted 4
       oValuePop
       oSymbolStkPop
       .tVarParm
       .tParmEnd
       ] or >
       >>
      ;WritelnProcedure
      .tTrap
      oEmitTrapKind(trWriteln)
      % value emitted 6
      ] or >
      ] or >
      oSymbolStkPop
      >>
     ;CallStmt
     ] or >
     }
     [ (sCallStmt)
     | sCallStmt:
     @CallStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syProcedure)
      | *:
      [ oSymbolStkChooseKind (syProcedure)
      | syProcedure:
      [ oSymbolStkChooseStandardRoutine (rtReadln)
      | rtReadln:
      .tTrapBegin
      @ReadlnProcedure
       [ (sParmEnd)
       | sParmEnd:
       oSymbolStkPushStandardVariable(stdInput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       .tLiteralAddress
       oEmitValue
       % value emitted 0
       oValuePop
       oSymbolStkPop
       .tVarParm
       .tParmEnd
       ] or >
       >>
      ;ReadlnProcedure
      .tTrap
      oEmitTrapKind(trReadln)
      % value emitted 4
      ] or >
      ] or >
      oSymbolStkPop
      >>
     ;CallStmt
     ] or >
     }
     [ (sEnd)
     | *:
     ] or >
     ?sEnd (sEnd)
     >>
    ;Block
    oSymbolTblPopScope
    >>
   ;Statement
   }
   [ (sRepeatEnd)
   | sRepeatEnd:
   ] or >
   .tRepeatControl
   @BooleanControlExpression
    @Expression
     @Operand
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syVariable)
      | *:
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      @Variable
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 8
       oValuePop
       ] or >
       oTypeStkPushSymbol
       @VariableExtension
        [ (sStringLiteral)
        | *:
        >>
       ;VariableExtension
       >>
      ;Variable
      @VariableOperand
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tFetchChar
       ] or >
       >>
      ;VariableOperand
      ] or >
      ] or >
      >>
     ;Operand
     @UnaryOperator
      [ (sStringLiteral)
      | *:
      >>
     ;UnaryOperator
     @BinaryOperator
      [ (sStringLiteral)
      | *:
      >>
     ;BinaryOperator
     [ (sStringLiteral)
     | *:
     }
     @Operand
      [ (sStringLiteral)
      | sStringLiteral:
      oSymbolStkPush(syExpression)
      @StringLiteral
       .tSkipString
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       .tStringData
       oValuePushStringLength
       oEmitValue
       % value emitted 3
       oValuePop
       oValuePushCodeAddress
       oValueNegate
       oEmitString
       % value emitted 98
       % value emitted 121
       % value emitted 101
       % value emitted 0
       oFixPopForwardBranch
       oTypeStkPush(tpChar)
       oTypeStkLinkToStandardType(stdChar)
       >>
      ;StringLiteral
      .tLiteralAddress
      oEmitValue
      % value emitted -192
      .tFetchChar
      oValuePop
      ] or >
      >>
     ;Operand
     @UnaryOperator
      [ (sNE)
      | *:
      >>
     ;UnaryOperator
     @BinaryOperator
      [ (sNE)
      | sNE:
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tStringEQ
      .tNot
      ] or >
      @CompareEqualityOperandTypes
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       oTypeStkPop
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       ] or >
       ] or >
       oTypeStkPop
       oTypeStkPush(tpBoolean)
       oSymbolStkPop
       oSymbolStkSetKind(syExpression)
       >>
      ;CompareEqualityOperandTypes
      ] or >
      oSymbolStkSetKind(syExpression)
      >>
     ;BinaryOperator
     [ (sNot)
     | *:
     }
     @Operand
      [ (sNot)
      | *:
      >>
     ;Operand
     @UnaryOperator
      [ (sNot)
      | sNot:
      .tNot
      oTypeStkPush(tpBoolean)
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpBoolean)
       | tpBoolean:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpBoolean)
       | tpBoolean:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      oTypeStkPop
      ] or >
      oSymbolStkSetKind(syExpression)
      >>
     ;UnaryOperator
     @BinaryOperator
      [ (sExpnEnd)
      | *:
      >>
     ;BinaryOperator
     [ (sExpnEnd)
     | sExpnEnd:
     ] or >
     >>
    ;Expression
    [ oTypeStkChooseKind (tpBoolean)
    | tpBoolean:
    ] or >
    oSymbolStkPop
    oTypeStkPop
    >>
   ;BooleanControlExpression
   .tRepeatTest
   oFixPopTargetAddress
   % value emitted 119
   >>
  ;RepeatStmt
  ] or >
  }
  [ (sEnd)
  | *:
  ] or >
  ?sEnd (sEnd)
  >>
 ;Block
 [ oSymbolTblLookupExternal (no)
 | *:
 oSymbolTblPopScope
 oSymbolStkPop
 .tTrapBegin
 .tTrap
 oEmitTrapKind(trHalt)
 % value emitted 0
 >>
;Program
