@Program
 ?sProgram (sProgram)
 oSymbolStkPush(syProcedure)
 oSymbolTblPushScope
 oCountPush(three)
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdInput)
  | stdInput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(one)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 1
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdOutput)
  | stdOutput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(two)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 2
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 4
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sParmEnd)
 | sParmEnd:
 ] or >
 oCountPop
 @Block
  ?sBegin (sBegin)
  [ (sConst)
  | sConst:
  @ConstantDefinitions
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syConstant)
   @PublicDefinition
    [ (sInteger)
    | *:
    >>
   ;PublicDefinition
   @ConstantValue
    [ (sInteger)
    | sInteger:
    oTypeStkPush(tpInteger)
    oTypeStkLinkToStandardType(stdInteger)
    oValuePushInteger
    [ (sConst)
    | *:
    ] or >
    >>
   ;ConstantValue
   oSymbolStkEnterTypeReference
   oTypeStkPop
   oSymbolStkEnterValue
   oValuePop
   oSymbolTblEnter
   oSymbolStkPop
   ] or >
   }
   [ (sConst)
   | *:
   ] or >
   >>
  ;ConstantDefinitions
  ] or >
  }
  [ (sConst)
  | sConst:
  @ConstantDefinitions
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syConstant)
   @PublicDefinition
    [ (sInteger)
    | *:
    >>
   ;PublicDefinition
   @ConstantValue
    [ (sInteger)
    | sInteger:
    oTypeStkPush(tpInteger)
    oTypeStkLinkToStandardType(stdInteger)
    oValuePushInteger
    [ (sVar)
    | *:
    ] or >
    >>
   ;ConstantValue
   oSymbolStkEnterTypeReference
   oTypeStkPop
   oSymbolStkEnterValue
   oValuePop
   oSymbolTblEnter
   oSymbolStkPop
   ] or >
   }
   [ (sVar)
   | *:
   ] or >
   >>
  ;ConstantDefinitions
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     oTypeStkPushSymbol
     ] or >
     oSymbolStkPop
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sArray)
    | *:
    >>
   ;PublicDefinition
   [ (sArray)
   | *:
   @TypeBody
    [ (sArray)
    | sArray:
    oTypeStkPush(tpArray)
    @IndexType
     oValuePush(one)
     @ConstantValue
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syConstant)
      | *:
      [ oSymbolStkChooseKind (syConstant)
      | syConstant:
      oValuePushSymbol
      ] or >
      oTypeStkPushSymbol
      [ (sLike)
      | *:
      oSymbolStkPop
      ] or >
      >>
     ;ConstantValue
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oValuePushTypeStkLowerBound
     oValuePushTypeStkUpperBound
     ] or >
     oTypeStkPop
     oTypeStkEnterBounds
     [ oTypeStkVerifyBounds (yes)
     | yes:
     oValuePop
     ] or >
     oValuePop
     oValuePop
     >>
    ;IndexType
    @ComponentType
     @SimpleType
      ?sLike (sLike)
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      oTypeStkPushSymbol
      ] or >
      oSymbolStkPop
      ] or >
      >>
     ;SimpleType
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     oTypeStkEnterComponentReference
     oTypeStkPop
     >>
    ;ComponentType
    oValuePop
    ] or >
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (no)
     | no:
     oTypeTblEnter
     ] or >
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpArray)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpArray)
     | tpArray:
     .tArrayDescriptor
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     .tLiteralInteger
     oValuePushTypeStkLowerBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 16
     .tStoreInteger
     oAllocateDescriptor
     .tLiteralInteger
     oValuePushTypeStkUpperBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 20
     .tStoreInteger
     oAllocateDescriptor
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sArray)
    | *:
    >>
   ;PublicDefinition
   [ (sArray)
   | *:
   @TypeBody
    [ (sArray)
    | sArray:
    oTypeStkPush(tpArray)
    @IndexType
     oValuePush(one)
     @ConstantValue
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syConstant)
      | *:
      [ oSymbolStkChooseKind (syConstant)
      | syConstant:
      oValuePushSymbol
      ] or >
      oTypeStkPushSymbol
      [ (sLike)
      | *:
      oSymbolStkPop
      ] or >
      >>
     ;ConstantValue
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oValuePushTypeStkLowerBound
     oValuePushTypeStkUpperBound
     ] or >
     oTypeStkPop
     oTypeStkEnterBounds
     [ oTypeStkVerifyBounds (yes)
     | yes:
     oValuePop
     ] or >
     oValuePop
     oValuePop
     >>
    ;IndexType
    @ComponentType
     @SimpleType
      ?sLike (sLike)
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      oTypeStkPushSymbol
      ] or >
      oSymbolStkPop
      ] or >
      >>
     ;SimpleType
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     oTypeStkEnterComponentReference
     oTypeStkPop
     >>
    ;ComponentType
    oValuePop
    ] or >
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (no)
     | no:
     oTypeTblEnter
     ] or >
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpArray)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpArray)
     | tpArray:
     .tArrayDescriptor
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     .tLiteralInteger
     oValuePushTypeStkLowerBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 28
     .tStoreInteger
     oAllocateDescriptor
     .tLiteralInteger
     oValuePushTypeStkUpperBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 32
     .tStoreInteger
     oAllocateDescriptor
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sArray)
    | *:
    >>
   ;PublicDefinition
   [ (sArray)
   | *:
   @TypeBody
    [ (sArray)
    | sArray:
    oTypeStkPush(tpArray)
    @IndexType
     oValuePush(one)
     @ConstantValue
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syConstant)
      | *:
      [ oSymbolStkChooseKind (syConstant)
      | syConstant:
      oValuePushSymbol
      ] or >
      oTypeStkPushSymbol
      [ (sLike)
      | *:
      oSymbolStkPop
      ] or >
      >>
     ;ConstantValue
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oValuePushTypeStkLowerBound
     oValuePushTypeStkUpperBound
     ] or >
     oTypeStkPop
     oTypeStkEnterBounds
     [ oTypeStkVerifyBounds (yes)
     | yes:
     oValuePop
     ] or >
     oValuePop
     oValuePop
     >>
    ;IndexType
    @ComponentType
     @SimpleType
      ?sLike (sLike)
      [ (sInteger)
      | sInteger:
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      ] or >
      >>
     ;SimpleType
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     oTypeStkEnterComponentReference
     oTypeStkPop
     >>
    ;ComponentType
    oValuePop
    ] or >
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (no)
     | no:
     oTypeTblEnter
     ] or >
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpArray)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpArray)
     | tpArray:
     .tArrayDescriptor
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     .tLiteralInteger
     oValuePushTypeStkLowerBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 40
     .tStoreInteger
     oAllocateDescriptor
     .tLiteralInteger
     oValuePushTypeStkUpperBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 44
     .tStoreInteger
     oAllocateDescriptor
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   @PublicDefinition
    [ (sIdentifier)
    | *:
    >>
   ;PublicDefinition
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sIdentifier)
    | *:
    oCountIncrement
    ?sIdentifier (sIdentifier)
    oSymbolStkPushLocalIdentifier
    [ oSymbolStkChooseKind (syUndefined)
    | syUndefined:
    ] or >
    [ (sLike)
    | *:
    oSymbolStkSetKind(syVariable)
    @ProcedureParameterType
     @SimpleType
      ?sLike (sLike)
      [ (sInteger)
      | sInteger:
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      ] or >
      >>
     ;SimpleType
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     [ oTypeStkChooseKind (tpInteger)
     | *:
     ] or >
     oSymbolStkEnterTypeReference
     @AllocateVar
      [ oSymbolStkChooseKind (syVariable)
      | *:
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oAllocateAlignOnWord
      oSymbolStkEnterDataAddress
      oAllocateVariable
      ] or >
      >>
     ;AllocateVar
     oSymbolTblEnter
     >>
    ;ProcedureParameterType
    }
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (one)
     | *:
     .tLiteralAddress
     oValuePushSymbol
     oEmitValue
     % value emitted 56
     oValuePop
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @EmitStore
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tStoreInteger
      ] or >
      >>
     ;EmitStore
     ] or >
     oSymbolStkPop
     oTypeStkPop
     oCountDecrement
     }
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 40
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 52
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sExpnEnd)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tSubscriptInteger
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 56
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       @VariableOperand
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tFetchInteger
        ] or >
        >>
       ;VariableOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 28
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 52
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sExpnEnd)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tSubscriptInteger
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syConstant)
       | *:
       [ oSymbolStkChooseKind (syConstant)
       | syConstant:
       @ConstantOperand
        oTypeStkPushSymbol
        oValuePushSymbol
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        ] or >
        oValuePop
        >>
       ;ConstantOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 16
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 52
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sExpnEnd)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tSubscriptInteger
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syConstant)
       | *:
       [ oSymbolStkChooseKind (syConstant)
       | syConstant:
       @ConstantOperand
        oTypeStkPushSymbol
        oValuePushSymbol
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        ] or >
        oValuePop
        >>
       ;ConstantOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sIfStmt)
    | sIfStmt:
    @IfStmt
     .tIfBegin
     @BooleanControlExpression
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 12
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sIdentifier)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sIdentifier)
        | *:
        >>
       ;BinaryOperator
       [ (sIdentifier)
       | *:
       }
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syConstant)
        | *:
        [ oSymbolStkChooseKind (syConstant)
        | syConstant:
        @ConstantOperand
         oTypeStkPushSymbol
         oValuePushSymbol
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tLiteralInteger
         oEmitValue
         % value emitted 0
         ] or >
         oValuePop
         >>
        ;ConstantOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sEq)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sEq)
        | sEq:
        [ oTypeStkChooseKind (tpInteger)
        | *:
        .tEQ
        @CompareEqualityOperandTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkPop
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         oTypeStkPop
         oTypeStkPush(tpBoolean)
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareEqualityOperandTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;BooleanControlExpression
     ?sThen (sThen)
     .tIfThen
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 12
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 52
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sExpnEnd)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tAssignInteger
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     [ (sElse)
     | sElse:
     .tIfMerge
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oFixSwap
     oFixPopForwardBranch
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sVar)
       | sVar:
       @VariableDeclarations
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushLocalIdentifier
        [ oSymbolStkChooseKind (syUndefined)
        | syUndefined:
        ] or >
        @PublicDefinition
         [ (sInitialValue)
         | *:
         >>
        ;PublicDefinition
        [ (sInitialValue)
        | sInitialValue:
        .tInitialValue
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 12
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sExpnEnd)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @TypeTblEnterIfNew
         [ oTypeStkChooseTypeReference (yes)
         | *:
         >>
        ;TypeTblEnterIfNew
        .tInitEnd
        .tLiteralAddress
        @EmitStore
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tStoreInteger
         ] or >
         >>
        ;EmitStore
        oSymbolStkPop
        ] or >
        @EnterVariableAttributes
         [ oSymbolStkChooseKind (syUndefined)
         | *:
         oSymbolStkSetKind(syVariable)
         [ oTypeStkChooseKind (tpInteger)
         | *:
         @AllocateVar
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          oAllocateAlignOnWord
          oSymbolStkEnterDataAddress
          oAllocateVariable
          ] or >
          >>
         ;AllocateVar
         oSymbolStkEnterTypeReference
         oSymbolTblEnter
         >>
        ;EnterVariableAttributes
        oTypeStkPop
        oSymbolStkPop
        ] or >
        >>
       ;VariableDeclarations
       ] or >
       }
       [ (sRepeatStmt)
       | sRepeatStmt:
       @RepeatStmt
        .tRepeatBegin
        oFixPushTargetAddress
        [ (sBegin)
        | *:
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sIfStmt)
          | sIfStmt:
          @IfStmt
           .tIfBegin
           @BooleanControlExpression
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 56
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sIdentifier)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sIdentifier)
              | *:
              >>
             ;BinaryOperator
             [ (sIdentifier)
             | *:
             }
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 40
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sSubscript)
                | sSubscript:
                .tSubscriptBegin
                @Expression
                 @Operand
                  [ (sIdentifier)
                  | sIdentifier:
                  oSymbolStkPushIdentifier
                  [ oSymbolStkChooseKind (syVariable)
                  | *:
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  @Variable
                   [ oSymbolStkChooseKind (syVariable)
                   | syVariable:
                   .tLiteralAddress
                   oValuePushSymbol
                   oEmitValue
                   % value emitted 60
                   oValuePop
                   ] or >
                   oTypeStkPushSymbol
                   @VariableExtension
                    [ (sExpnEnd)
                    | *:
                    >>
                   ;VariableExtension
                   >>
                  ;Variable
                  @VariableOperand
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   .tFetchInteger
                   ] or >
                   >>
                  ;VariableOperand
                  ] or >
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                oSymbolStkPop
                oTypeStkPop
                [ oTypeStkChooseKind (tpArray)
                | tpArray:
                oTypeStkPushComponent
                oTypeStkSwap
                oTypeStkPop
                ] or >
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tSubscriptInteger
                ] or >
                ] or >
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sLT)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sLT)
              | sLT:
              .tLT
              @CompareRelationalOperandTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkPop
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               oTypeStkPop
               oTypeStkPush(tpBoolean)
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareRelationalOperandTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            >>
           ;BooleanControlExpression
           ?sThen (sThen)
           .tIfThen
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sIfStmt)
             | sIfStmt:
             @IfStmt
              .tIfBegin
              @BooleanControlExpression
               @Expression
                @Operand
                 [ (sIdentifier)
                 | sIdentifier:
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syVariable)
                 | *:
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 @Variable
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  .tLiteralAddress
                  oValuePushSymbol
                  oEmitValue
                  % value emitted 16
                  oValuePop
                  ] or >
                  oTypeStkPushSymbol
                  @VariableExtension
                   [ (sSubscript)
                   | sSubscript:
                   .tSubscriptBegin
                   @Expression
                    @Operand
                     [ (sIdentifier)
                     | sIdentifier:
                     oSymbolStkPushIdentifier
                     [ oSymbolStkChooseKind (syVariable)
                     | *:
                     [ oSymbolStkChooseKind (syVariable)
                     | syVariable:
                     @Variable
                      [ oSymbolStkChooseKind (syVariable)
                      | syVariable:
                      .tLiteralAddress
                      oValuePushSymbol
                      oEmitValue
                      % value emitted 60
                      oValuePop
                      ] or >
                      oTypeStkPushSymbol
                      @VariableExtension
                       [ (sExpnEnd)
                       | *:
                       >>
                      ;VariableExtension
                      >>
                     ;Variable
                     @VariableOperand
                      [ oTypeStkChooseKind (tpInteger)
                      | tpInteger:
                      .tFetchInteger
                      ] or >
                      >>
                     ;VariableOperand
                     ] or >
                     ] or >
                     >>
                    ;Operand
                    @UnaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;UnaryOperator
                    @BinaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;BinaryOperator
                    [ (sExpnEnd)
                    | sExpnEnd:
                    ] or >
                    >>
                   ;Expression
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   ] or >
                   oSymbolStkPop
                   oTypeStkPop
                   [ oTypeStkChooseKind (tpArray)
                   | tpArray:
                   oTypeStkPushComponent
                   oTypeStkSwap
                   oTypeStkPop
                   ] or >
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   .tSubscriptInteger
                   ] or >
                   ] or >
                   >>
                  ;VariableExtension
                  >>
                 ;Variable
                 @VariableOperand
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tFetchInteger
                  ] or >
                  >>
                 ;VariableOperand
                 ] or >
                 ] or >
                 >>
                ;Operand
                @UnaryOperator
                 [ (sIdentifier)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sIdentifier)
                 | *:
                 >>
                ;BinaryOperator
                [ (sIdentifier)
                | *:
                }
                @Operand
                 [ (sIdentifier)
                 | sIdentifier:
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syConstant)
                 | *:
                 [ oSymbolStkChooseKind (syConstant)
                 | syConstant:
                 @ConstantOperand
                  oTypeStkPushSymbol
                  oValuePushSymbol
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tLiteralInteger
                  oEmitValue
                  % value emitted 0
                  ] or >
                  oValuePop
                  >>
                 ;ConstantOperand
                 ] or >
                 ] or >
                 >>
                ;Operand
                @UnaryOperator
                 [ (sEq)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sEq)
                 | sEq:
                 [ oTypeStkChooseKind (tpInteger)
                 | *:
                 .tEQ
                 @CompareEqualityOperandTypes
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  oTypeStkPop
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  ] or >
                  oTypeStkPop
                  oTypeStkPush(tpBoolean)
                  oSymbolStkPop
                  oSymbolStkSetKind(syExpression)
                  >>
                 ;CompareEqualityOperandTypes
                 ] or >
                 oSymbolStkSetKind(syExpression)
                 >>
                ;BinaryOperator
                [ (sExpnEnd)
                | sExpnEnd:
                ] or >
                >>
               ;Expression
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               ] or >
               oSymbolStkPop
               oTypeStkPop
               >>
              ;BooleanControlExpression
              ?sThen (sThen)
              .tIfThen
              oFixPushForwardBranch
              oEmitNullAddress
              % value emitted -32767
              @Statement
               oSymbolTblPushScope
               @Block
                ?sBegin (sBegin)
                [ (sAssignmentStmt)
                | sAssignmentStmt:
                @AssignmentStmt
                 ?sIdentifier (sIdentifier)
                 oSymbolStkPushIdentifier
                 .tAssignBegin
                 @Variable
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  .tLiteralAddress
                  oValuePushSymbol
                  oEmitValue
                  % value emitted 16
                  oValuePop
                  ] or >
                  oTypeStkPushSymbol
                  @VariableExtension
                   [ (sSubscript)
                   | sSubscript:
                   .tSubscriptBegin
                   @Expression
                    @Operand
                     [ (sIdentifier)
                     | sIdentifier:
                     oSymbolStkPushIdentifier
                     [ oSymbolStkChooseKind (syVariable)
                     | *:
                     [ oSymbolStkChooseKind (syVariable)
                     | syVariable:
                     @Variable
                      [ oSymbolStkChooseKind (syVariable)
                      | syVariable:
                      .tLiteralAddress
                      oValuePushSymbol
                      oEmitValue
                      % value emitted 60
                      oValuePop
                      ] or >
                      oTypeStkPushSymbol
                      @VariableExtension
                       [ (sExpnEnd)
                       | *:
                       >>
                      ;VariableExtension
                      >>
                     ;Variable
                     @VariableOperand
                      [ oTypeStkChooseKind (tpInteger)
                      | tpInteger:
                      .tFetchInteger
                      ] or >
                      >>
                     ;VariableOperand
                     ] or >
                     ] or >
                     >>
                    ;Operand
                    @UnaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;UnaryOperator
                    @BinaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;BinaryOperator
                    [ (sExpnEnd)
                    | sExpnEnd:
                    ] or >
                    >>
                   ;Expression
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   ] or >
                   oSymbolStkPop
                   oTypeStkPop
                   [ oTypeStkChooseKind (tpArray)
                   | tpArray:
                   oTypeStkPushComponent
                   oTypeStkSwap
                   oTypeStkPop
                   ] or >
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   .tSubscriptInteger
                   ] or >
                   ] or >
                   >>
                  ;VariableExtension
                  >>
                 ;Variable
                 [ oTypeStkChooseKind (tpInteger)
                 | *:
                 @Expression
                  @Operand
                   [ (sIdentifier)
                   | sIdentifier:
                   oSymbolStkPushIdentifier
                   [ oSymbolStkChooseKind (syVariable)
                   | *:
                   [ oSymbolStkChooseKind (syVariable)
                   | syVariable:
                   @Variable
                    [ oSymbolStkChooseKind (syVariable)
                    | syVariable:
                    .tLiteralAddress
                    oValuePushSymbol
                    oEmitValue
                    % value emitted 52
                    oValuePop
                    ] or >
                    oTypeStkPushSymbol
                    @VariableExtension
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;VariableExtension
                    >>
                   ;Variable
                   @VariableOperand
                    [ oTypeStkChooseKind (tpInteger)
                    | tpInteger:
                    .tFetchInteger
                    ] or >
                    >>
                   ;VariableOperand
                   ] or >
                   ] or >
                   >>
                  ;Operand
                  @UnaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;UnaryOperator
                  @BinaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;BinaryOperator
                  [ (sExpnEnd)
                  | sExpnEnd:
                  ] or >
                  >>
                 ;Expression
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 @EmitAssign
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tAssignInteger
                  ] or >
                  >>
                 ;EmitAssign
                 oTypeStkPop
                 oSymbolStkPop
                 oTypeStkPop
                 oSymbolStkPop
                 >>
                ;AssignmentStmt
                ] or >
                }
                [ (sAssignmentStmt)
                | sAssignmentStmt:
                @AssignmentStmt
                 ?sIdentifier (sIdentifier)
                 oSymbolStkPushIdentifier
                 .tAssignBegin
                 @Variable
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  .tLiteralAddress
                  oValuePushSymbol
                  oEmitValue
                  % value emitted 60
                  oValuePop
                  ] or >
                  oTypeStkPushSymbol
                  @VariableExtension
                   [ (sIdentifier)
                   | *:
                   >>
                  ;VariableExtension
                  >>
                 ;Variable
                 [ oTypeStkChooseKind (tpInteger)
                 | *:
                 @Expression
                  @Operand
                   [ (sIdentifier)
                   | sIdentifier:
                   oSymbolStkPushIdentifier
                   [ oSymbolStkChooseKind (syVariable)
                   | *:
                   [ oSymbolStkChooseKind (syVariable)
                   | syVariable:
                   @Variable
                    [ oSymbolStkChooseKind (syVariable)
                    | syVariable:
                    .tLiteralAddress
                    oValuePushSymbol
                    oEmitValue
                    % value emitted 52
                    oValuePop
                    ] or >
                    oTypeStkPushSymbol
                    @VariableExtension
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;VariableExtension
                    >>
                   ;Variable
                   @VariableOperand
                    [ oTypeStkChooseKind (tpInteger)
                    | tpInteger:
                    .tFetchInteger
                    ] or >
                    >>
                   ;VariableOperand
                   ] or >
                   ] or >
                   >>
                  ;Operand
                  @UnaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;UnaryOperator
                  @BinaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;BinaryOperator
                  [ (sExpnEnd)
                  | sExpnEnd:
                  ] or >
                  >>
                 ;Expression
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 @EmitAssign
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tAssignInteger
                  ] or >
                  >>
                 ;EmitAssign
                 oTypeStkPop
                 oSymbolStkPop
                 oTypeStkPop
                 oSymbolStkPop
                 >>
                ;AssignmentStmt
                ] or >
                }
                [ (sEnd)
                | *:
                ] or >
                ?sEnd (sEnd)
                >>
               ;Block
               oSymbolTblPopScope
               >>
              ;Statement
              [ (sElse)
              | sElse:
              .tIfMerge
              oFixPushForwardBranch
              oEmitNullAddress
              % value emitted -32767
              oFixSwap
              oFixPopForwardBranch
              @Statement
               oSymbolTblPushScope
               @Block
                ?sBegin (sBegin)
                [ (sAssignmentStmt)
                | sAssignmentStmt:
                @AssignmentStmt
                 ?sIdentifier (sIdentifier)
                 oSymbolStkPushIdentifier
                 .tAssignBegin
                 @Variable
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  .tLiteralAddress
                  oValuePushSymbol
                  oEmitValue
                  % value emitted 60
                  oValuePop
                  ] or >
                  oTypeStkPushSymbol
                  @VariableExtension
                   [ (sIdentifier)
                   | *:
                   >>
                  ;VariableExtension
                  >>
                 ;Variable
                 [ oTypeStkChooseKind (tpInteger)
                 | *:
                 @Expression
                  @Operand
                   [ (sIdentifier)
                   | sIdentifier:
                   oSymbolStkPushIdentifier
                   [ oSymbolStkChooseKind (syVariable)
                   | *:
                   [ oSymbolStkChooseKind (syVariable)
                   | syVariable:
                   @Variable
                    [ oSymbolStkChooseKind (syVariable)
                    | syVariable:
                    .tLiteralAddress
                    oValuePushSymbol
                    oEmitValue
                    % value emitted 16
                    oValuePop
                    ] or >
                    oTypeStkPushSymbol
                    @VariableExtension
                     [ (sSubscript)
                     | sSubscript:
                     .tSubscriptBegin
                     @Expression
                      @Operand
                       [ (sIdentifier)
                       | sIdentifier:
                       oSymbolStkPushIdentifier
                       [ oSymbolStkChooseKind (syVariable)
                       | *:
                       [ oSymbolStkChooseKind (syVariable)
                       | syVariable:
                       @Variable
                        [ oSymbolStkChooseKind (syVariable)
                        | syVariable:
                        .tLiteralAddress
                        oValuePushSymbol
                        oEmitValue
                        % value emitted 60
                        oValuePop
                        ] or >
                        oTypeStkPushSymbol
                        @VariableExtension
                         [ (sExpnEnd)
                         | *:
                         >>
                        ;VariableExtension
                        >>
                       ;Variable
                       @VariableOperand
                        [ oTypeStkChooseKind (tpInteger)
                        | tpInteger:
                        .tFetchInteger
                        ] or >
                        >>
                       ;VariableOperand
                       ] or >
                       ] or >
                       >>
                      ;Operand
                      @UnaryOperator
                       [ (sExpnEnd)
                       | *:
                       >>
                      ;UnaryOperator
                      @BinaryOperator
                       [ (sExpnEnd)
                       | *:
                       >>
                      ;BinaryOperator
                      [ (sExpnEnd)
                      | sExpnEnd:
                      ] or >
                      >>
                     ;Expression
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     ] or >
                     oSymbolStkPop
                     oTypeStkPop
                     [ oTypeStkChooseKind (tpArray)
                     | tpArray:
                     oTypeStkPushComponent
                     oTypeStkSwap
                     oTypeStkPop
                     ] or >
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     .tSubscriptInteger
                     ] or >
                     ] or >
                     >>
                    ;VariableExtension
                    >>
                   ;Variable
                   @VariableOperand
                    [ oTypeStkChooseKind (tpInteger)
                    | tpInteger:
                    .tFetchInteger
                    ] or >
                    >>
                   ;VariableOperand
                   ] or >
                   ] or >
                   >>
                  ;Operand
                  @UnaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;UnaryOperator
                  @BinaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;BinaryOperator
                  [ (sExpnEnd)
                  | sExpnEnd:
                  ] or >
                  >>
                 ;Expression
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 @EmitAssign
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tAssignInteger
                  ] or >
                  >>
                 ;EmitAssign
                 oTypeStkPop
                 oSymbolStkPop
                 oTypeStkPop
                 oSymbolStkPop
                 >>
                ;AssignmentStmt
                ] or >
                }
                [ (sEnd)
                | *:
                ] or >
                ?sEnd (sEnd)
                >>
               ;Block
               oSymbolTblPopScope
               >>
              ;Statement
              ] or >
              .tIfEnd
              oFixPopForwardBranch
              >>
             ;IfStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           [ (sElse)
           | sElse:
           .tIfMerge
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           oFixSwap
           oFixPopForwardBranch
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sIfStmt)
             | sIfStmt:
             @IfStmt
              .tIfBegin
              @BooleanControlExpression
               @Expression
                @Operand
                 [ (sIdentifier)
                 | sIdentifier:
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syVariable)
                 | *:
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 @Variable
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  .tLiteralAddress
                  oValuePushSymbol
                  oEmitValue
                  % value emitted 56
                  oValuePop
                  ] or >
                  oTypeStkPushSymbol
                  @VariableExtension
                   [ (sIdentifier)
                   | *:
                   >>
                  ;VariableExtension
                  >>
                 ;Variable
                 @VariableOperand
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tFetchInteger
                  ] or >
                  >>
                 ;VariableOperand
                 ] or >
                 ] or >
                 >>
                ;Operand
                @UnaryOperator
                 [ (sIdentifier)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sIdentifier)
                 | *:
                 >>
                ;BinaryOperator
                [ (sIdentifier)
                | *:
                }
                @Operand
                 [ (sIdentifier)
                 | sIdentifier:
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syVariable)
                 | *:
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 @Variable
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  .tLiteralAddress
                  oValuePushSymbol
                  oEmitValue
                  % value emitted 40
                  oValuePop
                  ] or >
                  oTypeStkPushSymbol
                  @VariableExtension
                   [ (sSubscript)
                   | sSubscript:
                   .tSubscriptBegin
                   @Expression
                    @Operand
                     [ (sIdentifier)
                     | sIdentifier:
                     oSymbolStkPushIdentifier
                     [ oSymbolStkChooseKind (syVariable)
                     | *:
                     [ oSymbolStkChooseKind (syVariable)
                     | syVariable:
                     @Variable
                      [ oSymbolStkChooseKind (syVariable)
                      | syVariable:
                      .tLiteralAddress
                      oValuePushSymbol
                      oEmitValue
                      % value emitted 60
                      oValuePop
                      ] or >
                      oTypeStkPushSymbol
                      @VariableExtension
                       [ (sExpnEnd)
                       | *:
                       >>
                      ;VariableExtension
                      >>
                     ;Variable
                     @VariableOperand
                      [ oTypeStkChooseKind (tpInteger)
                      | tpInteger:
                      .tFetchInteger
                      ] or >
                      >>
                     ;VariableOperand
                     ] or >
                     ] or >
                     >>
                    ;Operand
                    @UnaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;UnaryOperator
                    @BinaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;BinaryOperator
                    [ (sExpnEnd)
                    | sExpnEnd:
                    ] or >
                    >>
                   ;Expression
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   ] or >
                   oSymbolStkPop
                   oTypeStkPop
                   [ oTypeStkChooseKind (tpArray)
                   | tpArray:
                   oTypeStkPushComponent
                   oTypeStkSwap
                   oTypeStkPop
                   ] or >
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   .tSubscriptInteger
                   ] or >
                   ] or >
                   >>
                  ;VariableExtension
                  >>
                 ;Variable
                 @VariableOperand
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tFetchInteger
                  ] or >
                  >>
                 ;VariableOperand
                 ] or >
                 ] or >
                 >>
                ;Operand
                @UnaryOperator
                 [ (sGT)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sGT)
                 | sGT:
                 .tGT
                 @CompareRelationalOperandTypes
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  oTypeStkPop
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  ] or >
                  oTypeStkPop
                  oTypeStkPush(tpBoolean)
                  oSymbolStkPop
                  oSymbolStkSetKind(syExpression)
                  >>
                 ;CompareRelationalOperandTypes
                 ] or >
                 oSymbolStkSetKind(syExpression)
                 >>
                ;BinaryOperator
                [ (sExpnEnd)
                | sExpnEnd:
                ] or >
                >>
               ;Expression
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               ] or >
               oSymbolStkPop
               oTypeStkPop
               >>
              ;BooleanControlExpression
              ?sThen (sThen)
              .tIfThen
              oFixPushForwardBranch
              oEmitNullAddress
              % value emitted -32767
              @Statement
               oSymbolTblPushScope
               @Block
                ?sBegin (sBegin)
                [ (sIfStmt)
                | sIfStmt:
                @IfStmt
                 .tIfBegin
                 @BooleanControlExpression
                  @Expression
                   @Operand
                    [ (sIdentifier)
                    | sIdentifier:
                    oSymbolStkPushIdentifier
                    [ oSymbolStkChooseKind (syVariable)
                    | *:
                    [ oSymbolStkChooseKind (syVariable)
                    | syVariable:
                    @Variable
                     [ oSymbolStkChooseKind (syVariable)
                     | syVariable:
                     .tLiteralAddress
                     oValuePushSymbol
                     oEmitValue
                     % value emitted 28
                     oValuePop
                     ] or >
                     oTypeStkPushSymbol
                     @VariableExtension
                      [ (sSubscript)
                      | sSubscript:
                      .tSubscriptBegin
                      @Expression
                       @Operand
                        [ (sIdentifier)
                        | sIdentifier:
                        oSymbolStkPushIdentifier
                        [ oSymbolStkChooseKind (syVariable)
                        | *:
                        [ oSymbolStkChooseKind (syVariable)
                        | syVariable:
                        @Variable
                         [ oSymbolStkChooseKind (syVariable)
                         | syVariable:
                         .tLiteralAddress
                         oValuePushSymbol
                         oEmitValue
                         % value emitted 60
                         oValuePop
                         ] or >
                         oTypeStkPushSymbol
                         @VariableExtension
                          [ (sExpnEnd)
                          | *:
                          >>
                         ;VariableExtension
                         >>
                        ;Variable
                        @VariableOperand
                         [ oTypeStkChooseKind (tpInteger)
                         | tpInteger:
                         .tFetchInteger
                         ] or >
                         >>
                        ;VariableOperand
                        ] or >
                        ] or >
                        >>
                       ;Operand
                       @UnaryOperator
                        [ (sExpnEnd)
                        | *:
                        >>
                       ;UnaryOperator
                       @BinaryOperator
                        [ (sExpnEnd)
                        | *:
                        >>
                       ;BinaryOperator
                       [ (sExpnEnd)
                       | sExpnEnd:
                       ] or >
                       >>
                      ;Expression
                      [ oTypeStkChooseKind (tpInteger)
                      | tpInteger:
                      ] or >
                      oSymbolStkPop
                      oTypeStkPop
                      [ oTypeStkChooseKind (tpArray)
                      | tpArray:
                      oTypeStkPushComponent
                      oTypeStkSwap
                      oTypeStkPop
                      ] or >
                      [ oTypeStkChooseKind (tpInteger)
                      | tpInteger:
                      .tSubscriptInteger
                      ] or >
                      ] or >
                      >>
                     ;VariableExtension
                     >>
                    ;Variable
                    @VariableOperand
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     .tFetchInteger
                     ] or >
                     >>
                    ;VariableOperand
                    ] or >
                    ] or >
                    >>
                   ;Operand
                   @UnaryOperator
                    [ (sIdentifier)
                    | *:
                    >>
                   ;UnaryOperator
                   @BinaryOperator
                    [ (sIdentifier)
                    | *:
                    >>
                   ;BinaryOperator
                   [ (sIdentifier)
                   | *:
                   }
                   @Operand
                    [ (sIdentifier)
                    | sIdentifier:
                    oSymbolStkPushIdentifier
                    [ oSymbolStkChooseKind (syConstant)
                    | *:
                    [ oSymbolStkChooseKind (syConstant)
                    | syConstant:
                    @ConstantOperand
                     oTypeStkPushSymbol
                     oValuePushSymbol
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     .tLiteralInteger
                     oEmitValue
                     % value emitted 0
                     ] or >
                     oValuePop
                     >>
                    ;ConstantOperand
                    ] or >
                    ] or >
                    >>
                   ;Operand
                   @UnaryOperator
                    [ (sEq)
                    | *:
                    >>
                   ;UnaryOperator
                   @BinaryOperator
                    [ (sEq)
                    | sEq:
                    [ oTypeStkChooseKind (tpInteger)
                    | *:
                    .tEQ
                    @CompareEqualityOperandTypes
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     oTypeStkPop
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     ] or >
                     ] or >
                     oTypeStkPop
                     oTypeStkPush(tpBoolean)
                     oSymbolStkPop
                     oSymbolStkSetKind(syExpression)
                     >>
                    ;CompareEqualityOperandTypes
                    ] or >
                    oSymbolStkSetKind(syExpression)
                    >>
                   ;BinaryOperator
                   [ (sExpnEnd)
                   | sExpnEnd:
                   ] or >
                   >>
                  ;Expression
                  [ oTypeStkChooseKind (tpBoolean)
                  | tpBoolean:
                  ] or >
                  oSymbolStkPop
                  oTypeStkPop
                  >>
                 ;BooleanControlExpression
                 ?sThen (sThen)
                 .tIfThen
                 oFixPushForwardBranch
                 oEmitNullAddress
                 % value emitted -32767
                 @Statement
                  oSymbolTblPushScope
                  @Block
                   ?sBegin (sBegin)
                   [ (sAssignmentStmt)
                   | sAssignmentStmt:
                   @AssignmentStmt
                    ?sIdentifier (sIdentifier)
                    oSymbolStkPushIdentifier
                    .tAssignBegin
                    @Variable
                     [ oSymbolStkChooseKind (syVariable)
                     | syVariable:
                     .tLiteralAddress
                     oValuePushSymbol
                     oEmitValue
                     % value emitted 28
                     oValuePop
                     ] or >
                     oTypeStkPushSymbol
                     @VariableExtension
                      [ (sSubscript)
                      | sSubscript:
                      .tSubscriptBegin
                      @Expression
                       @Operand
                        [ (sIdentifier)
                        | sIdentifier:
                        oSymbolStkPushIdentifier
                        [ oSymbolStkChooseKind (syVariable)
                        | *:
                        [ oSymbolStkChooseKind (syVariable)
                        | syVariable:
                        @Variable
                         [ oSymbolStkChooseKind (syVariable)
                         | syVariable:
                         .tLiteralAddress
                         oValuePushSymbol
                         oEmitValue
                         % value emitted 60
                         oValuePop
                         ] or >
                         oTypeStkPushSymbol
                         @VariableExtension
                          [ (sExpnEnd)
                          | *:
                          >>
                         ;VariableExtension
                         >>
                        ;Variable
                        @VariableOperand
                         [ oTypeStkChooseKind (tpInteger)
                         | tpInteger:
                         .tFetchInteger
                         ] or >
                         >>
                        ;VariableOperand
                        ] or >
                        ] or >
                        >>
                       ;Operand
                       @UnaryOperator
                        [ (sExpnEnd)
                        | *:
                        >>
                       ;UnaryOperator
                       @BinaryOperator
                        [ (sExpnEnd)
                        | *:
                        >>
                       ;BinaryOperator
                       [ (sExpnEnd)
                       | sExpnEnd:
                       ] or >
                       >>
                      ;Expression
                      [ oTypeStkChooseKind (tpInteger)
                      | tpInteger:
                      ] or >
                      oSymbolStkPop
                      oTypeStkPop
                      [ oTypeStkChooseKind (tpArray)
                      | tpArray:
                      oTypeStkPushComponent
                      oTypeStkSwap
                      oTypeStkPop
                      ] or >
                      [ oTypeStkChooseKind (tpInteger)
                      | tpInteger:
                      .tSubscriptInteger
                      ] or >
                      ] or >
                      >>
                     ;VariableExtension
                     >>
                    ;Variable
                    [ oTypeStkChooseKind (tpInteger)
                    | *:
                    @Expression
                     @Operand
                      [ (sIdentifier)
                      | sIdentifier:
                      oSymbolStkPushIdentifier
                      [ oSymbolStkChooseKind (syVariable)
                      | *:
                      [ oSymbolStkChooseKind (syVariable)
                      | syVariable:
                      @Variable
                       [ oSymbolStkChooseKind (syVariable)
                       | syVariable:
                       .tLiteralAddress
                       oValuePushSymbol
                       oEmitValue
                       % value emitted 52
                       oValuePop
                       ] or >
                       oTypeStkPushSymbol
                       @VariableExtension
                        [ (sExpnEnd)
                        | *:
                        >>
                       ;VariableExtension
                       >>
                      ;Variable
                      @VariableOperand
                       [ oTypeStkChooseKind (tpInteger)
                       | tpInteger:
                       .tFetchInteger
                       ] or >
                       >>
                      ;VariableOperand
                      ] or >
                      ] or >
                      >>
                     ;Operand
                     @UnaryOperator
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;UnaryOperator
                     @BinaryOperator
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;BinaryOperator
                     [ (sExpnEnd)
                     | sExpnEnd:
                     ] or >
                     >>
                    ;Expression
                    @CompareAndSwapTypes
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     oTypeStkSwap
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     ] or >
                     ] or >
                     >>
                    ;CompareAndSwapTypes
                    @EmitAssign
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     .tAssignInteger
                     ] or >
                     >>
                    ;EmitAssign
                    oTypeStkPop
                    oSymbolStkPop
                    oTypeStkPop
                    oSymbolStkPop
                    >>
                   ;AssignmentStmt
                   ] or >
                   }
                   [ (sAssignmentStmt)
                   | sAssignmentStmt:
                   @AssignmentStmt
                    ?sIdentifier (sIdentifier)
                    oSymbolStkPushIdentifier
                    .tAssignBegin
                    @Variable
                     [ oSymbolStkChooseKind (syVariable)
                     | syVariable:
                     .tLiteralAddress
                     oValuePushSymbol
                     oEmitValue
                     % value emitted 60
                     oValuePop
                     ] or >
                     oTypeStkPushSymbol
                     @VariableExtension
                      [ (sIdentifier)
                      | *:
                      >>
                     ;VariableExtension
                     >>
                    ;Variable
                    [ oTypeStkChooseKind (tpInteger)
                    | *:
                    @Expression
                     @Operand
                      [ (sIdentifier)
                      | sIdentifier:
                      oSymbolStkPushIdentifier
                      [ oSymbolStkChooseKind (syVariable)
                      | *:
                      [ oSymbolStkChooseKind (syVariable)
                      | syVariable:
                      @Variable
                       [ oSymbolStkChooseKind (syVariable)
                       | syVariable:
                       .tLiteralAddress
                       oValuePushSymbol
                       oEmitValue
                       % value emitted 52
                       oValuePop
                       ] or >
                       oTypeStkPushSymbol
                       @VariableExtension
                        [ (sExpnEnd)
                        | *:
                        >>
                       ;VariableExtension
                       >>
                      ;Variable
                      @VariableOperand
                       [ oTypeStkChooseKind (tpInteger)
                       | tpInteger:
                       .tFetchInteger
                       ] or >
                       >>
                      ;VariableOperand
                      ] or >
                      ] or >
                      >>
                     ;Operand
                     @UnaryOperator
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;UnaryOperator
                     @BinaryOperator
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;BinaryOperator
                     [ (sExpnEnd)
                     | sExpnEnd:
                     ] or >
                     >>
                    ;Expression
                    @CompareAndSwapTypes
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     oTypeStkSwap
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     ] or >
                     ] or >
                     >>
                    ;CompareAndSwapTypes
                    @EmitAssign
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     .tAssignInteger
                     ] or >
                     >>
                    ;EmitAssign
                    oTypeStkPop
                    oSymbolStkPop
                    oTypeStkPop
                    oSymbolStkPop
                    >>
                   ;AssignmentStmt
                   ] or >
                   }
                   [ (sEnd)
                   | *:
                   ] or >
                   ?sEnd (sEnd)
                   >>
                  ;Block
                  oSymbolTblPopScope
                  >>
                 ;Statement
                 [ (sElse)
                 | sElse:
                 .tIfMerge
                 oFixPushForwardBranch
                 oEmitNullAddress
                 % value emitted -32767
                 oFixSwap
                 oFixPopForwardBranch
                 @Statement
                  oSymbolTblPushScope
                  @Block
                   ?sBegin (sBegin)
                   [ (sAssignmentStmt)
                   | sAssignmentStmt:
                   @AssignmentStmt
                    ?sIdentifier (sIdentifier)
                    oSymbolStkPushIdentifier
                    .tAssignBegin
                    @Variable
                     [ oSymbolStkChooseKind (syVariable)
                     | syVariable:
                     .tLiteralAddress
                     oValuePushSymbol
                     oEmitValue
                     % value emitted 60
                     oValuePop
                     ] or >
                     oTypeStkPushSymbol
                     @VariableExtension
                      [ (sIdentifier)
                      | *:
                      >>
                     ;VariableExtension
                     >>
                    ;Variable
                    [ oTypeStkChooseKind (tpInteger)
                    | *:
                    @Expression
                     @Operand
                      [ (sIdentifier)
                      | sIdentifier:
                      oSymbolStkPushIdentifier
                      [ oSymbolStkChooseKind (syVariable)
                      | *:
                      [ oSymbolStkChooseKind (syVariable)
                      | syVariable:
                      @Variable
                       [ oSymbolStkChooseKind (syVariable)
                       | syVariable:
                       .tLiteralAddress
                       oValuePushSymbol
                       oEmitValue
                       % value emitted 28
                       oValuePop
                       ] or >
                       oTypeStkPushSymbol
                       @VariableExtension
                        [ (sSubscript)
                        | sSubscript:
                        .tSubscriptBegin
                        @Expression
                         @Operand
                          [ (sIdentifier)
                          | sIdentifier:
                          oSymbolStkPushIdentifier
                          [ oSymbolStkChooseKind (syVariable)
                          | *:
                          [ oSymbolStkChooseKind (syVariable)
                          | syVariable:
                          @Variable
                           [ oSymbolStkChooseKind (syVariable)
                           | syVariable:
                           .tLiteralAddress
                           oValuePushSymbol
                           oEmitValue
                           % value emitted 60
                           oValuePop
                           ] or >
                           oTypeStkPushSymbol
                           @VariableExtension
                            [ (sExpnEnd)
                            | *:
                            >>
                           ;VariableExtension
                           >>
                          ;Variable
                          @VariableOperand
                           [ oTypeStkChooseKind (tpInteger)
                           | tpInteger:
                           .tFetchInteger
                           ] or >
                           >>
                          ;VariableOperand
                          ] or >
                          ] or >
                          >>
                         ;Operand
                         @UnaryOperator
                          [ (sExpnEnd)
                          | *:
                          >>
                         ;UnaryOperator
                         @BinaryOperator
                          [ (sExpnEnd)
                          | *:
                          >>
                         ;BinaryOperator
                         [ (sExpnEnd)
                         | sExpnEnd:
                         ] or >
                         >>
                        ;Expression
                        [ oTypeStkChooseKind (tpInteger)
                        | tpInteger:
                        ] or >
                        oSymbolStkPop
                        oTypeStkPop
                        [ oTypeStkChooseKind (tpArray)
                        | tpArray:
                        oTypeStkPushComponent
                        oTypeStkSwap
                        oTypeStkPop
                        ] or >
                        [ oTypeStkChooseKind (tpInteger)
                        | tpInteger:
                        .tSubscriptInteger
                        ] or >
                        ] or >
                        >>
                       ;VariableExtension
                       >>
                      ;Variable
                      @VariableOperand
                       [ oTypeStkChooseKind (tpInteger)
                       | tpInteger:
                       .tFetchInteger
                       ] or >
                       >>
                      ;VariableOperand
                      ] or >
                      ] or >
                      >>
                     ;Operand
                     @UnaryOperator
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;UnaryOperator
                     @BinaryOperator
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;BinaryOperator
                     [ (sExpnEnd)
                     | sExpnEnd:
                     ] or >
                     >>
                    ;Expression
                    @CompareAndSwapTypes
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     oTypeStkSwap
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     ] or >
                     ] or >
                     >>
                    ;CompareAndSwapTypes
                    @EmitAssign
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     .tAssignInteger
                     ] or >
                     >>
                    ;EmitAssign
                    oTypeStkPop
                    oSymbolStkPop
                    oTypeStkPop
                    oSymbolStkPop
                    >>
                   ;AssignmentStmt
                   ] or >
                   }
                   [ (sEnd)
                   | *:
                   ] or >
                   ?sEnd (sEnd)
                   >>
                  ;Block
                  oSymbolTblPopScope
                  >>
                 ;Statement
                 ] or >
                 .tIfEnd
                 oFixPopForwardBranch
                 >>
                ;IfStmt
                ] or >
                }
                [ (sEnd)
                | *:
                ] or >
                ?sEnd (sEnd)
                >>
               ;Block
               oSymbolTblPopScope
               >>
              ;Statement
              [ (sEnd)
              | *:
              .tIfEnd
              oFixPopForwardBranch
              >>
             ;IfStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           ] or >
           .tIfEnd
           oFixPopForwardBranch
           >>
          ;IfStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        }
        [ (sRepeatEnd)
        | sRepeatEnd:
        ] or >
        .tRepeatControl
        @BooleanControlExpression
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 40
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sSubscript)
             | sSubscript:
             .tSubscriptBegin
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syVariable)
               | *:
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 60
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sExpnEnd)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               @VariableOperand
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tFetchInteger
                ] or >
                >>
               ;VariableOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             ] or >
             oSymbolStkPop
             oTypeStkPop
             [ oTypeStkChooseKind (tpArray)
             | tpArray:
             oTypeStkPushComponent
             oTypeStkSwap
             oTypeStkPop
             ] or >
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tSubscriptInteger
             ] or >
             ] or >
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sIdentifier)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sIdentifier)
           | *:
           >>
          ;BinaryOperator
          [ (sIdentifier)
          | *:
          }
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 56
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sNE)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sNE)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sNE)
           | sNE:
           [ oTypeStkChooseKind (tpInteger)
           | *:
           .tNE
           @CompareEqualityOperandTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkPop
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            oTypeStkPop
            oTypeStkPush(tpBoolean)
            oSymbolStkPop
            oSymbolStkSetKind(syExpression)
            >>
           ;CompareEqualityOperandTypes
           ] or >
           oSymbolStkSetKind(syExpression)
           >>
          ;BinaryOperator
          [ (sNot)
          | *:
          }
          @Operand
           [ (sNot)
           | *:
           >>
          ;Operand
          @UnaryOperator
           [ (sNot)
           | sNot:
           .tNot
           oTypeStkPush(tpBoolean)
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           ] or >
           oSymbolStkSetKind(syExpression)
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         >>
        ;BooleanControlExpression
        .tRepeatTest
        oFixPopTargetAddress
        % value emitted 137
        >>
       ;RepeatStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     ] or >
     .tIfEnd
     oFixPopForwardBranch
     >>
    ;IfStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 52
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sIdentifier)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 52
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       @VariableOperand
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tFetchInteger
        ] or >
        >>
       ;VariableOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sInteger)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sInteger)
       | *:
       >>
      ;BinaryOperator
      [ (sInteger)
      | *:
      }
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 1
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sAdd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sAdd)
       | sAdd:
       .tAdd
       oTypeStkPush(tpInteger)
       @CompareOperandAndResultTypes
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        oTypeStkPop
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        oTypeStkPop
        oSymbolStkPop
        oSymbolStkSetKind(syExpression)
        >>
       ;CompareOperandAndResultTypes
       ] or >
       oSymbolStkSetKind(syExpression)
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   @PublicDefinition
    [ (sParmEnd)
    | *:
    >>
   ;PublicDefinition
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sVar)
    | sVar:
    @VariableDeclarations
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sArray)
      | *:
      >>
     ;PublicDefinition
     [ (sArray)
     | *:
     @TypeBody
      [ (sArray)
      | sArray:
      oTypeStkPush(tpArray)
      @IndexType
       oValuePush(one)
       @ConstantValue
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syConstant)
        | *:
        [ oSymbolStkChooseKind (syConstant)
        | syConstant:
        oValuePushSymbol
        ] or >
        oTypeStkPushSymbol
        [ (sLike)
        | *:
        oSymbolStkPop
        ] or >
        >>
       ;ConstantValue
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oValuePushTypeStkLowerBound
       oValuePushTypeStkUpperBound
       ] or >
       oTypeStkPop
       oTypeStkEnterBounds
       [ oTypeStkVerifyBounds (yes)
       | yes:
       oValuePop
       ] or >
       oValuePop
       oValuePop
       >>
      ;IndexType
      @ComponentType
       @SimpleType
        ?sLike (sLike)
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        oTypeStkPushSymbol
        ] or >
        oSymbolStkPop
        ] or >
        >>
       ;SimpleType
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @TypeTblEnterIfNew
        [ oTypeStkChooseTypeReference (yes)
        | *:
        >>
       ;TypeTblEnterIfNew
       oTypeStkEnterComponentReference
       oTypeStkPop
       >>
      ;ComponentType
      oValuePop
      ] or >
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (no)
       | no:
       oTypeTblEnter
       ] or >
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpArray)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       .tArrayDescriptor
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       .tLiteralInteger
       oValuePushTypeStkLowerBound
       oEmitValue
       % value emitted 0
       oValuePop
       .tLiteralAddress
       oEmitDataAddress
       % value emitted 64
       .tStoreInteger
       oAllocateDescriptor
       .tLiteralInteger
       oValuePushTypeStkUpperBound
       oEmitValue
       % value emitted 0
       oValuePop
       .tLiteralAddress
       oEmitDataAddress
       % value emitted 68
       .tStoreInteger
       oAllocateDescriptor
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     ] or >
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sVar)
    | sVar:
    @VariableDeclarations
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sInitialValue)
      | *:
      >>
     ;PublicDefinition
     [ (sInitialValue)
     | sInitialValue:
     .tInitialValue
     @Expression
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 0
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     .tInitEnd
     .tLiteralAddress
     @EmitStore
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tStoreInteger
      ] or >
      >>
     ;EmitStore
     oSymbolStkPop
     ] or >
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     ] or >
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sVar)
    | sVar:
    @VariableDeclarations
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sInitialValue)
      | *:
      >>
     ;PublicDefinition
     [ (sInitialValue)
     | sInitialValue:
     .tInitialValue
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 12
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       @VariableOperand
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tFetchInteger
        ] or >
        >>
       ;VariableOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     .tInitEnd
     .tLiteralAddress
     @EmitStore
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tStoreInteger
      ] or >
      >>
     ;EmitStore
     oSymbolStkPop
     ] or >
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     ] or >
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sVar)
    | sVar:
    @VariableDeclarations
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sInitialValue)
      | *:
      >>
     ;PublicDefinition
     [ (sInitialValue)
     | sInitialValue:
     .tInitialValue
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syConstant)
       | *:
       [ oSymbolStkChooseKind (syConstant)
       | syConstant:
       @ConstantOperand
        oTypeStkPushSymbol
        oValuePushSymbol
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        .tLiteralBoolean
        oEmitValue
        % value emitted 0
        ] or >
        oValuePop
        >>
       ;ConstantOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     .tInitEnd
     .tLiteralAddress
     @EmitStore
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      .tStoreBoolean
      ] or >
      >>
     ;EmitStore
     oSymbolStkPop
     ] or >
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpBoolean)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpBoolean)
       | tpBoolean:
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     ] or >
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sRepeatStmt)
    | sRepeatStmt:
    @RepeatStmt
     .tRepeatBegin
     oFixPushTargetAddress
     [ (sBegin)
     | *:
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sIfStmt)
       | sIfStmt:
       @IfStmt
        .tIfBegin
        @BooleanControlExpression
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 80
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sIdentifier)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sIdentifier)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sIdentifier)
           | *:
           >>
          ;BinaryOperator
          [ (sIdentifier)
          | *:
          }
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syConstant)
           | *:
           [ oSymbolStkChooseKind (syConstant)
           | syConstant:
           @ConstantOperand
            oTypeStkPushSymbol
            oValuePushSymbol
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tLiteralInteger
            oEmitValue
            % value emitted 0
            ] or >
            oValuePop
            >>
           ;ConstantOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sNE)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sNE)
           | sNE:
           [ oTypeStkChooseKind (tpInteger)
           | *:
           .tNE
           @CompareEqualityOperandTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkPop
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            oTypeStkPop
            oTypeStkPush(tpBoolean)
            oSymbolStkPop
            oSymbolStkSetKind(syExpression)
            >>
           ;CompareEqualityOperandTypes
           ] or >
           oSymbolStkSetKind(syExpression)
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         >>
        ;BooleanControlExpression
        ?sThen (sThen)
        .tIfThen
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sAssignmentStmt)
          | sAssignmentStmt:
          @AssignmentStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           .tAssignBegin
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 76
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sIdentifier)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           [ oTypeStkChooseKind (tpInteger)
           | *:
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 76
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sInteger)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sInteger)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInteger)
             | *:
             >>
            ;BinaryOperator
            [ (sInteger)
            | *:
            }
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 1
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sAdd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sAdd)
             | sAdd:
             .tAdd
             oTypeStkPush(tpInteger)
             @CompareOperandAndResultTypes
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareOperandAndResultTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           @EmitAssign
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tAssignInteger
            ] or >
            >>
           ;EmitAssign
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           >>
          ;AssignmentStmt
          ] or >
          }
          [ (sAssignmentStmt)
          | sAssignmentStmt:
          @AssignmentStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           .tAssignBegin
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 64
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sSubscript)
             | sSubscript:
             .tSubscriptBegin
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syVariable)
               | *:
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 76
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sExpnEnd)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               @VariableOperand
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tFetchInteger
                ] or >
                >>
               ;VariableOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             ] or >
             oSymbolStkPop
             oTypeStkPop
             [ oTypeStkChooseKind (tpArray)
             | tpArray:
             oTypeStkPushComponent
             oTypeStkSwap
             oTypeStkPop
             ] or >
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tSubscriptInteger
             ] or >
             ] or >
             >>
            ;VariableExtension
            >>
           ;Variable
           [ oTypeStkChooseKind (tpInteger)
           | *:
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 80
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sExpnEnd)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           @EmitAssign
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tAssignInteger
            ] or >
            >>
           ;EmitAssign
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           >>
          ;AssignmentStmt
          ] or >
          }
          [ (sAssignmentStmt)
          | sAssignmentStmt:
          @AssignmentStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           .tAssignBegin
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 80
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sIdentifier)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           [ oTypeStkChooseKind (tpInteger)
           | *:
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 16
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sSubscript)
               | sSubscript:
               .tSubscriptBegin
               @Expression
                @Operand
                 [ (sIdentifier)
                 | sIdentifier:
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syVariable)
                 | *:
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 @Variable
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  .tLiteralAddress
                  oValuePushSymbol
                  oEmitValue
                  % value emitted 80
                  oValuePop
                  ] or >
                  oTypeStkPushSymbol
                  @VariableExtension
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;VariableExtension
                  >>
                 ;Variable
                 @VariableOperand
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tFetchInteger
                  ] or >
                  >>
                 ;VariableOperand
                 ] or >
                 ] or >
                 >>
                ;Operand
                @UnaryOperator
                 [ (sExpnEnd)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sExpnEnd)
                 | *:
                 >>
                ;BinaryOperator
                [ (sExpnEnd)
                | sExpnEnd:
                ] or >
                >>
               ;Expression
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               oSymbolStkPop
               oTypeStkPop
               [ oTypeStkChooseKind (tpArray)
               | tpArray:
               oTypeStkPushComponent
               oTypeStkSwap
               oTypeStkPop
               ] or >
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tSubscriptInteger
               ] or >
               ] or >
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           @EmitAssign
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tAssignInteger
            ] or >
            >>
           ;EmitAssign
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           >>
          ;AssignmentStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        [ (sElse)
        | sElse:
        .tIfMerge
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        oFixSwap
        oFixPopForwardBranch
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sIfStmt)
          | sIfStmt:
          @IfStmt
           .tIfBegin
           @BooleanControlExpression
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 76
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sInteger)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sInteger)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sInteger)
              | *:
              >>
             ;BinaryOperator
             [ (sInteger)
             | *:
             }
             @Operand
              [ (sInteger)
              | sInteger:
              oValuePushInteger
              oSymbolStkPush(syExpression)
              oTypeStkPush(tpInteger)
              oTypeStkLinkToStandardType(stdInteger)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sGT)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sGT)
              | sGT:
              .tGT
              @CompareRelationalOperandTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkPop
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               oTypeStkPop
               oTypeStkPush(tpBoolean)
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareRelationalOperandTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            >>
           ;BooleanControlExpression
           ?sThen (sThen)
           .tIfThen
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sAssignmentStmt)
             | sAssignmentStmt:
             @AssignmentStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              .tAssignBegin
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 80
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              [ oTypeStkChooseKind (tpInteger)
              | *:
              @Expression
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syVariable)
                | *:
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 64
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sSubscript)
                  | sSubscript:
                  .tSubscriptBegin
                  @Expression
                   @Operand
                    [ (sIdentifier)
                    | sIdentifier:
                    oSymbolStkPushIdentifier
                    [ oSymbolStkChooseKind (syVariable)
                    | *:
                    [ oSymbolStkChooseKind (syVariable)
                    | syVariable:
                    @Variable
                     [ oSymbolStkChooseKind (syVariable)
                     | syVariable:
                     .tLiteralAddress
                     oValuePushSymbol
                     oEmitValue
                     % value emitted 76
                     oValuePop
                     ] or >
                     oTypeStkPushSymbol
                     @VariableExtension
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;VariableExtension
                     >>
                    ;Variable
                    @VariableOperand
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     .tFetchInteger
                     ] or >
                     >>
                    ;VariableOperand
                    ] or >
                    ] or >
                    >>
                   ;Operand
                   @UnaryOperator
                    [ (sExpnEnd)
                    | *:
                    >>
                   ;UnaryOperator
                   @BinaryOperator
                    [ (sExpnEnd)
                    | *:
                    >>
                   ;BinaryOperator
                   [ (sExpnEnd)
                   | sExpnEnd:
                   ] or >
                   >>
                  ;Expression
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  oSymbolStkPop
                  oTypeStkPop
                  [ oTypeStkChooseKind (tpArray)
                  | tpArray:
                  oTypeStkPushComponent
                  oTypeStkSwap
                  oTypeStkPop
                  ] or >
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tSubscriptInteger
                  ] or >
                  ] or >
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                @VariableOperand
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 .tFetchInteger
                 ] or >
                 >>
                ;VariableOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              @EmitAssign
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tAssignInteger
               ] or >
               >>
              ;EmitAssign
              oTypeStkPop
              oSymbolStkPop
              oTypeStkPop
              oSymbolStkPop
              >>
             ;AssignmentStmt
             ] or >
             }
             [ (sAssignmentStmt)
             | sAssignmentStmt:
             @AssignmentStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              .tAssignBegin
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 76
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              [ oTypeStkChooseKind (tpInteger)
              | *:
              @Expression
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syVariable)
                | *:
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 76
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sInteger)
                  | *:
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                @VariableOperand
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 .tFetchInteger
                 ] or >
                 >>
                ;VariableOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sInteger)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sInteger)
                | *:
                >>
               ;BinaryOperator
               [ (sInteger)
               | *:
               }
               @Operand
                [ (sInteger)
                | sInteger:
                oValuePushInteger
                oSymbolStkPush(syExpression)
                oTypeStkPush(tpInteger)
                oTypeStkLinkToStandardType(stdInteger)
                .tLiteralInteger
                oEmitValue
                % value emitted 1
                oValuePop
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sSubtract)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sSubtract)
                | sSubtract:
                .tSubtract
                oTypeStkPush(tpInteger)
                @CompareOperandAndResultTypes
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 oTypeStkPop
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 oTypeStkPop
                 oSymbolStkPop
                 oSymbolStkSetKind(syExpression)
                 >>
                ;CompareOperandAndResultTypes
                ] or >
                oSymbolStkSetKind(syExpression)
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              @EmitAssign
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tAssignInteger
               ] or >
               >>
              ;EmitAssign
              oTypeStkPop
              oSymbolStkPop
              oTypeStkPop
              oSymbolStkPop
              >>
             ;AssignmentStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWrite)
              | rtWrite:
              .tWriteBegin
              @WriteProcedure
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               oTypeStkPushSymbol
               [ oTypeStkChooseKind (tpArray)
               | *:
               oTypeStkPop
               oSymbolStkPushStandardVariable(stdOutput)
               [ oSymbolStkChooseKind (syVariable)
               | *:
               oValuePushSymbol
               oSymbolStkPop
               .tTrapBegin
               .tLiteralAddress
               oEmitValue
               % value emitted 4
               .tVarParm
               .tParmEnd
               oValuePop
               [ oSymbolStkChooseKind (syVariable)
               | *:
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 40
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sSubscript)
                 | sSubscript:
                 .tSubscriptBegin
                 @Expression
                  @Operand
                   [ (sIdentifier)
                   | sIdentifier:
                   oSymbolStkPushIdentifier
                   [ oSymbolStkChooseKind (syVariable)
                   | *:
                   [ oSymbolStkChooseKind (syVariable)
                   | syVariable:
                   @Variable
                    [ oSymbolStkChooseKind (syVariable)
                    | syVariable:
                    .tLiteralAddress
                    oValuePushSymbol
                    oEmitValue
                    % value emitted 80
                    oValuePop
                    ] or >
                    oTypeStkPushSymbol
                    @VariableExtension
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;VariableExtension
                    >>
                   ;Variable
                   @VariableOperand
                    [ oTypeStkChooseKind (tpInteger)
                    | tpInteger:
                    .tFetchInteger
                    ] or >
                    >>
                   ;VariableOperand
                   ] or >
                   ] or >
                   >>
                  ;Operand
                  @UnaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;UnaryOperator
                  @BinaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;BinaryOperator
                  [ (sExpnEnd)
                  | sExpnEnd:
                  ] or >
                  >>
                 ;Expression
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 [ oTypeStkChooseKind (tpArray)
                 | tpArray:
                 oTypeStkPushComponent
                 oTypeStkSwap
                 oTypeStkPop
                 ] or >
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 .tSubscriptInteger
                 ] or >
                 ] or >
                 >>
                ;VariableExtension
                >>
               ;Variable
               @VariableOperand
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tFetchInteger
                ] or >
                >>
               ;VariableOperand
               ] or >
               @Expression
                @Operand
                 [ (sExpnEnd)
                 | *:
                 >>
                ;Operand
                @UnaryOperator
                 [ (sExpnEnd)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sExpnEnd)
                 | *:
                 >>
                ;BinaryOperator
                [ (sExpnEnd)
                | sExpnEnd:
                ] or >
                >>
               ;Expression
               .tParmEnd
               @WriteText
                [ (sFieldWidth)
                | sFieldWidth:
                @Expression
                 @Operand
                  [ (sInteger)
                  | sInteger:
                  oValuePushInteger
                  oSymbolStkPush(syExpression)
                  oTypeStkPush(tpInteger)
                  oTypeStkLinkToStandardType(stdInteger)
                  .tLiteralInteger
                  oEmitValue
                  % value emitted 1
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                oSymbolStkPop
                oTypeStkPop
                ] or >
                .tParmEnd
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tTrap
                oEmitTrapKind(trWriteInteger)
                % value emitted 8
                ] or >
                oSymbolStkPop
                oTypeStkPop
                >>
               ;WriteText
               @WriteStandardExpnList
                oSymbolStkPushStandardVariable(stdOutput)
                [ oSymbolStkChooseKind (syVariable)
                | *:
                oValuePushSymbol
                oSymbolStkPop
                [ (sStringLiteral)
                | *:
                .tTrapBegin
                .tLiteralAddress
                oEmitValue
                % value emitted 4
                .tVarParm
                .tParmEnd
                @Expression
                 @Operand
                  [ (sStringLiteral)
                  | sStringLiteral:
                  oSymbolStkPush(syExpression)
                  @StringLiteral
                   oValuePushStringLength
                   .tSkipString
                   oFixPushForwardBranch
                   oEmitNullAddress
                   % value emitted -32767
                   .tStringData
                   oEmitValue
                   % value emitted 1
                   oValuePop
                   oValuePushCodeAddress
                   oValueNegate
                   oEmitString
                   % value emitted 32
                   % value emitted 0
                   oFixPopForwardBranch
                   oTypeStkPush(tpChar)
                   oTypeStkLinkToStandardType(stdChar)
                   oValuePush(one)
                   oValuePushStringLength
                   oTypeStkEnterBounds
                   oValuePop
                   oValuePop
                   oTypeTblEnter
                   >>
                  ;StringLiteral
                  [ oTypeStkChooseKind (tpChar)
                  | tpChar:
                  .tLiteralAddress
                  oEmitValue
                  % value emitted -492
                  .tFetchChar
                  ] or >
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                .tParmEnd
                @WriteText
                 [ (sParmEnd)
                 | *:
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 oValuePushTypeStkUpperBound
                 ] or >
                 .tLiteralInteger
                 oEmitValue
                 % value emitted 1
                 oValuePop
                 .tParmEnd
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tTrap
                 oEmitTrapKind(trWriteString)
                 % value emitted 109
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 >>
                ;WriteText
                }
                [ (sParmEnd)
                | sParmEnd:
                ] or >
                oValuePop
                >>
               ;WriteStandardExpnList
               ] or >
               .tWriteEnd
               >>
              ;WriteProcedure
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sAssignmentStmt)
             | sAssignmentStmt:
             @AssignmentStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              .tAssignBegin
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 80
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              [ oTypeStkChooseKind (tpInteger)
              | *:
              @Expression
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syVariable)
                | *:
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 28
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sSubscript)
                  | sSubscript:
                  .tSubscriptBegin
                  @Expression
                   @Operand
                    [ (sIdentifier)
                    | sIdentifier:
                    oSymbolStkPushIdentifier
                    [ oSymbolStkChooseKind (syVariable)
                    | *:
                    [ oSymbolStkChooseKind (syVariable)
                    | syVariable:
                    @Variable
                     [ oSymbolStkChooseKind (syVariable)
                     | syVariable:
                     .tLiteralAddress
                     oValuePushSymbol
                     oEmitValue
                     % value emitted 80
                     oValuePop
                     ] or >
                     oTypeStkPushSymbol
                     @VariableExtension
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;VariableExtension
                     >>
                    ;Variable
                    @VariableOperand
                     [ oTypeStkChooseKind (tpInteger)
                     | tpInteger:
                     .tFetchInteger
                     ] or >
                     >>
                    ;VariableOperand
                    ] or >
                    ] or >
                    >>
                   ;Operand
                   @UnaryOperator
                    [ (sExpnEnd)
                    | *:
                    >>
                   ;UnaryOperator
                   @BinaryOperator
                    [ (sExpnEnd)
                    | *:
                    >>
                   ;BinaryOperator
                   [ (sExpnEnd)
                   | sExpnEnd:
                   ] or >
                   >>
                  ;Expression
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  oSymbolStkPop
                  oTypeStkPop
                  [ oTypeStkChooseKind (tpArray)
                  | tpArray:
                  oTypeStkPushComponent
                  oTypeStkSwap
                  oTypeStkPop
                  ] or >
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tSubscriptInteger
                  ] or >
                  ] or >
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                @VariableOperand
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 .tFetchInteger
                 ] or >
                 >>
                ;VariableOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              @EmitAssign
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tAssignInteger
               ] or >
               >>
              ;EmitAssign
              oTypeStkPop
              oSymbolStkPop
              oTypeStkPop
              oSymbolStkPop
              >>
             ;AssignmentStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           [ (sElse)
           | sElse:
           .tIfMerge
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           oFixSwap
           oFixPopForwardBranch
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sAssignmentStmt)
             | sAssignmentStmt:
             @AssignmentStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              .tAssignBegin
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 84
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              [ oTypeStkChooseKind (tpBoolean)
              | *:
              @Expression
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syConstant)
                | *:
                [ oSymbolStkChooseKind (syConstant)
                | syConstant:
                @ConstantOperand
                 oTypeStkPushSymbol
                 oValuePushSymbol
                 [ oTypeStkChooseKind (tpBoolean)
                 | tpBoolean:
                 .tLiteralBoolean
                 oEmitValue
                 % value emitted 1
                 ] or >
                 oValuePop
                 >>
                ;ConstantOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              @EmitAssign
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               .tAssignBoolean
               ] or >
               >>
              ;EmitAssign
              oTypeStkPop
              oSymbolStkPop
              oTypeStkPop
              oSymbolStkPop
              >>
             ;AssignmentStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           ] or >
           .tIfEnd
           oFixPopForwardBranch
           >>
          ;IfStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        ] or >
        .tIfEnd
        oFixPopForwardBranch
        >>
       ;IfStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     }
     [ (sRepeatEnd)
     | sRepeatEnd:
     ] or >
     .tRepeatControl
     @BooleanControlExpression
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 84
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sNot)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         .tFetchBoolean
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sNot)
        | sNot:
        .tNot
        oTypeStkPush(tpBoolean)
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        oTypeStkPop
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sNot)
        | *:
        >>
       ;BinaryOperator
       [ (sNot)
       | *:
       }
       @Operand
        [ (sNot)
        | *:
        >>
       ;Operand
       @UnaryOperator
        [ (sNot)
        | sNot:
        .tNot
        oTypeStkPush(tpBoolean)
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        oTypeStkPop
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;BooleanControlExpression
     .tRepeatTest
     oFixPopTargetAddress
     % value emitted 373
     >>
    ;RepeatStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWriteln)
     | rtWriteln:
     .tTrapBegin
     @WritelnProcedure
      [ (sParmEnd)
      | sParmEnd:
      oSymbolStkPushStandardVariable(stdOutput)
      [ oSymbolStkChooseKind (syVariable)
      | *:
      oValuePushSymbol
      .tLiteralAddress
      oEmitValue
      % value emitted 4
      oValuePop
      oSymbolStkPop
      .tVarParm
      .tParmEnd
      ] or >
      >>
     ;WritelnProcedure
     .tTrap
     oEmitTrapKind(trWriteln)
     % value emitted 6
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sAssignmentStmt)
  | sAssignmentStmt:
  @AssignmentStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   .tAssignBegin
   @Variable
    [ oSymbolStkChooseKind (syVariable)
    | syVariable:
    .tLiteralAddress
    oValuePushSymbol
    oEmitValue
    % value emitted 92
    oValuePop
    ] or >
    oTypeStkPushSymbol
    @VariableExtension
     [ (sInteger)
     | *:
     >>
    ;VariableExtension
    >>
   ;Variable
   [ oTypeStkChooseKind (tpInteger)
   | *:
   @Expression
    @Operand
     [ (sInteger)
     | sInteger:
     oValuePushInteger
     oSymbolStkPush(syExpression)
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     .tLiteralInteger
     oEmitValue
     % value emitted 1
     oValuePop
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   @CompareAndSwapTypes
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    oTypeStkSwap
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    ] or >
    ] or >
    >>
   ;CompareAndSwapTypes
   @EmitAssign
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    .tAssignInteger
    ] or >
    >>
   ;EmitAssign
   oTypeStkPop
   oSymbolStkPop
   oTypeStkPop
   oSymbolStkPop
   >>
  ;AssignmentStmt
  ] or >
  }
  [ (sWhileStmt)
  | sWhileStmt:
  @WhileStmt
   .tWhileBegin
   oFixPushTargetAddress
   @BooleanControlExpression
    @Expression
     @Operand
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syVariable)
      | *:
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      @Variable
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 92
       oValuePop
       ] or >
       oTypeStkPushSymbol
       @VariableExtension
        [ (sIdentifier)
        | *:
        >>
       ;VariableExtension
       >>
      ;Variable
      @VariableOperand
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tFetchInteger
       ] or >
       >>
      ;VariableOperand
      ] or >
      ] or >
      >>
     ;Operand
     @UnaryOperator
      [ (sIdentifier)
      | *:
      >>
     ;UnaryOperator
     @BinaryOperator
      [ (sIdentifier)
      | *:
      >>
     ;BinaryOperator
     [ (sIdentifier)
     | *:
     }
     @Operand
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syConstant)
      | *:
      [ oSymbolStkChooseKind (syConstant)
      | syConstant:
      @ConstantOperand
       oTypeStkPushSymbol
       oValuePushSymbol
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tLiteralInteger
       oEmitValue
       % value emitted 100
       ] or >
       oValuePop
       >>
      ;ConstantOperand
      ] or >
      ] or >
      >>
     ;Operand
     @UnaryOperator
      [ (sLE)
      | *:
      >>
     ;UnaryOperator
     @BinaryOperator
      [ (sLE)
      | sLE:
      .tLE
      @CompareRelationalOperandTypes
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oTypeStkPop
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       ] or >
       oTypeStkPop
       oTypeStkPush(tpBoolean)
       oSymbolStkPop
       oSymbolStkSetKind(syExpression)
       >>
      ;CompareRelationalOperandTypes
      ] or >
      oSymbolStkSetKind(syExpression)
      >>
     ;BinaryOperator
     [ (sExpnEnd)
     | sExpnEnd:
     ] or >
     >>
    ;Expression
    [ oTypeStkChooseKind (tpBoolean)
    | tpBoolean:
    ] or >
    oSymbolStkPop
    oTypeStkPop
    >>
   ;BooleanControlExpression
   .tWhileTest
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oFixSwap
   @Statement
    oSymbolTblPushScope
    @Block
     ?sBegin (sBegin)
     [ (sNullStmt)
     | sNullStmt:
     ] or >
     }
     [ (sAssignmentStmt)
     | sAssignmentStmt:
     @AssignmentStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      .tAssignBegin
      @Variable
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 40
       oValuePop
       ] or >
       oTypeStkPushSymbol
       @VariableExtension
        [ (sSubscript)
        | sSubscript:
        .tSubscriptBegin
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 92
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sExpnEnd)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        [ oTypeStkChooseKind (tpArray)
        | tpArray:
        oTypeStkPushComponent
        oTypeStkSwap
        oTypeStkPop
        ] or >
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tSubscriptInteger
        ] or >
        ] or >
        >>
       ;VariableExtension
       >>
      ;Variable
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @Expression
       @Operand
        [ (sInteger)
        | sInteger:
        oValuePushInteger
        oSymbolStkPush(syExpression)
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        oValuePop
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      @EmitAssign
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tAssignInteger
       ] or >
       >>
      ;EmitAssign
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      >>
     ;AssignmentStmt
     ] or >
     }
     [ (sAssignmentStmt)
     | sAssignmentStmt:
     @AssignmentStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      .tAssignBegin
      @Variable
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 16
       oValuePop
       ] or >
       oTypeStkPushSymbol
       @VariableExtension
        [ (sSubscript)
        | sSubscript:
        .tSubscriptBegin
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 92
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sExpnEnd)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        [ oTypeStkChooseKind (tpArray)
        | tpArray:
        oTypeStkPushComponent
        oTypeStkSwap
        oTypeStkPop
        ] or >
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tSubscriptInteger
        ] or >
        ] or >
        >>
       ;VariableExtension
       >>
      ;Variable
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syConstant)
        | *:
        [ oSymbolStkChooseKind (syConstant)
        | syConstant:
        @ConstantOperand
         oTypeStkPushSymbol
         oValuePushSymbol
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tLiteralInteger
         oEmitValue
         % value emitted 0
         ] or >
         oValuePop
         >>
        ;ConstantOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      @EmitAssign
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tAssignInteger
       ] or >
       >>
      ;EmitAssign
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      >>
     ;AssignmentStmt
     ] or >
     }
     [ (sAssignmentStmt)
     | sAssignmentStmt:
     @AssignmentStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      .tAssignBegin
      @Variable
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 28
       oValuePop
       ] or >
       oTypeStkPushSymbol
       @VariableExtension
        [ (sSubscript)
        | sSubscript:
        .tSubscriptBegin
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 92
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sExpnEnd)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        [ oTypeStkChooseKind (tpArray)
        | tpArray:
        oTypeStkPushComponent
        oTypeStkSwap
        oTypeStkPop
        ] or >
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tSubscriptInteger
        ] or >
        ] or >
        >>
       ;VariableExtension
       >>
      ;Variable
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syConstant)
        | *:
        [ oSymbolStkChooseKind (syConstant)
        | syConstant:
        @ConstantOperand
         oTypeStkPushSymbol
         oValuePushSymbol
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tLiteralInteger
         oEmitValue
         % value emitted 0
         ] or >
         oValuePop
         >>
        ;ConstantOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      @EmitAssign
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tAssignInteger
       ] or >
       >>
      ;EmitAssign
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      >>
     ;AssignmentStmt
     ] or >
     }
     [ (sAssignmentStmt)
     | sAssignmentStmt:
     @AssignmentStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      .tAssignBegin
      @Variable
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 92
       oValuePop
       ] or >
       oTypeStkPushSymbol
       @VariableExtension
        [ (sIdentifier)
        | *:
        >>
       ;VariableExtension
       >>
      ;Variable
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 92
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sInteger)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sInteger)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sInteger)
        | *:
        >>
       ;BinaryOperator
       [ (sInteger)
       | *:
       }
       @Operand
        [ (sInteger)
        | sInteger:
        oValuePushInteger
        oSymbolStkPush(syExpression)
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        .tLiteralInteger
        oEmitValue
        % value emitted 1
        oValuePop
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sAdd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sAdd)
        | sAdd:
        .tAdd
        oTypeStkPush(tpInteger)
        @CompareOperandAndResultTypes
         @CompareAndSwapTypes
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          oTypeStkSwap
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          ] or >
          ] or >
          >>
         ;CompareAndSwapTypes
         oTypeStkPop
         @CompareAndSwapTypes
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          oTypeStkSwap
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          ] or >
          ] or >
          >>
         ;CompareAndSwapTypes
         oTypeStkPop
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareOperandAndResultTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      @EmitAssign
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tAssignInteger
       ] or >
       >>
      ;EmitAssign
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      >>
     ;AssignmentStmt
     ] or >
     }
     [ (sEnd)
     | *:
     ] or >
     ?sEnd (sEnd)
     >>
    ;Block
    oSymbolTblPopScope
    >>
   ;Statement
   .tWhileEnd
   oFixPopTargetAddress
   % value emitted 567
   oFixPopForwardBranch
   >>
  ;WhileStmt
  ] or >
  }
  [ (sAssignmentStmt)
  | sAssignmentStmt:
  @AssignmentStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   .tAssignBegin
   @Variable
    [ oSymbolStkChooseKind (syVariable)
    | syVariable:
    .tLiteralAddress
    oValuePushSymbol
    oEmitValue
    % value emitted 52
    oValuePop
    ] or >
    oTypeStkPushSymbol
    @VariableExtension
     [ (sInteger)
     | *:
     >>
    ;VariableExtension
    >>
   ;Variable
   [ oTypeStkChooseKind (tpInteger)
   | *:
   @Expression
    @Operand
     [ (sInteger)
     | sInteger:
     oValuePushInteger
     oSymbolStkPush(syExpression)
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     .tLiteralInteger
     oEmitValue
     % value emitted 1
     oValuePop
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   @CompareAndSwapTypes
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    oTypeStkSwap
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    ] or >
    ] or >
    >>
   ;CompareAndSwapTypes
   @EmitAssign
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    .tAssignInteger
    ] or >
    >>
   ;EmitAssign
   oTypeStkPop
   oSymbolStkPop
   oTypeStkPop
   oSymbolStkPop
   >>
  ;AssignmentStmt
  ] or >
  }
  [ (sAssignmentStmt)
  | sAssignmentStmt:
  @AssignmentStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   .tAssignBegin
   @Variable
    [ oSymbolStkChooseKind (syVariable)
    | syVariable:
    .tLiteralAddress
    oValuePushSymbol
    oEmitValue
    % value emitted 12
    oValuePop
    ] or >
    oTypeStkPushSymbol
    @VariableExtension
     [ (sIdentifier)
     | *:
     >>
    ;VariableExtension
    >>
   ;Variable
   [ oTypeStkChooseKind (tpInteger)
   | *:
   @Expression
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syConstant)
     | *:
     [ oSymbolStkChooseKind (syConstant)
     | syConstant:
     @ConstantOperand
      oTypeStkPushSymbol
      oValuePushSymbol
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      ] or >
      oValuePop
      >>
     ;ConstantOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   @CompareAndSwapTypes
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    oTypeStkSwap
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    ] or >
    ] or >
    >>
   ;CompareAndSwapTypes
   @EmitAssign
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    .tAssignInteger
    ] or >
    >>
   ;EmitAssign
   oTypeStkPop
   oSymbolStkPop
   oTypeStkPop
   oSymbolStkPop
   >>
  ;AssignmentStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        oValuePushStringLength
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oEmitValue
        % value emitted 44
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 84
        % value emitted 121
        % value emitted 112
        % value emitted 101
        % value emitted 32
        % value emitted 105
        % value emitted 110
        % value emitted 32
        % value emitted 115
        % value emitted 111
        % value emitted 109
        % value emitted 101
        % value emitted 32
        % value emitted 105
        % value emitted 110
        % value emitted 116
        % value emitted 101
        % value emitted 103
        % value emitted 101
        % value emitted 114
        % value emitted 115
        % value emitted 44
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 101
        % value emitted 97
        % value emitted 115
        % value emitted 101
        % value emitted 44
        % value emitted 32
        % value emitted 101
        % value emitted 110
        % value emitted 100
        % value emitted 105
        % value emitted 110
        % value emitted 103
        % value emitted 32
        % value emitted 119
        % value emitted 105
        % value emitted 116
        % value emitted 104
        % value emitted 32
        % value emitted 48
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        oValuePush(one)
        oValuePushStringLength
        oTypeStkEnterBounds
        oValuePop
        oValuePop
        oTypeTblEnter
        >>
       ;StringLiteral
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tLiteralAddress
       oEmitValue
       % value emitted -658
       .tFetchChar
       ] or >
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oValuePushTypeStkUpperBound
      ] or >
      .tLiteralInteger
      oEmitValue
      % value emitted 44
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sRepeatStmt)
  | sRepeatStmt:
  @RepeatStmt
   .tRepeatBegin
   oFixPushTargetAddress
   [ (sBegin)
   | *:
   @Statement
    oSymbolTblPushScope
    @Block
     ?sBegin (sBegin)
     [ (sCallStmt)
     | sCallStmt:
     @CallStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syProcedure)
      | *:
      [ oSymbolStkChooseKind (syProcedure)
      | syProcedure:
      [ oSymbolStkChooseStandardRoutine (rtRead)
      | rtRead:
      .tReadBegin
      @ReadProcedure
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       oTypeStkPushSymbol
       [ oTypeStkChooseKind (tpInteger)
       | *:
       oSymbolStkPushStandardVariable(stdInput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       oSymbolStkPop
       oTypeStkPop
       .tTrapBegin
       .tLiteralAddress
       oEmitValue
       % value emitted 0
       .tVarParm
       .tParmEnd
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 88
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       .tVarParm
       .tParmEnd
       @ReadText
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tTrap
        oEmitTrapKind(trReadInteger)
        % value emitted 10
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;ReadText
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       oValuePop
       ] or >
       .tReadEnd
       >>
      ;ReadProcedure
      ] or >
      ] or >
      oSymbolStkPop
      >>
     ;CallStmt
     ] or >
     }
     [ (sIfStmt)
     | sIfStmt:
     @IfStmt
      .tIfBegin
      @BooleanControlExpression
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 88
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sInteger)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sInteger)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sInteger)
         | *:
         >>
        ;BinaryOperator
        [ (sInteger)
        | *:
        }
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 0
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sNE)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sNE)
         | sNE:
         [ oTypeStkChooseKind (tpInteger)
         | *:
         .tNE
         @CompareEqualityOperandTypes
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          oTypeStkPop
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          ] or >
          ] or >
          oTypeStkPop
          oTypeStkPush(tpBoolean)
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareEqualityOperandTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpBoolean)
       | tpBoolean:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       >>
      ;BooleanControlExpression
      ?sThen (sThen)
      .tIfThen
      oFixPushForwardBranch
      oEmitNullAddress
      % value emitted -32767
      @Statement
       oSymbolTblPushScope
       @Block
        ?sBegin (sBegin)
        [ (sCallStmt)
        | sCallStmt:
        @CallStmt
         ?sIdentifier (sIdentifier)
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syProcedure)
         | *:
         [ oSymbolStkChooseKind (syProcedure)
         | syProcedure:
         [ oSymbolStkChooseStandardRoutine (rtNull)
         | *:
         .tCallBegin
         oTypeStkPushSymbol
         [ oTypeStkChooseRecursionFlag (no)
         | *:
         @ActualParameters
          oCountPush(zero)
          [ (sIdentifier)
          | *:
          [ oTypeStkCompareParameterCount (no)
          | *:
          oCountIncrement
          oSymbolStkPushFormalParameter
          oTypeStkPushSymbol
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 88
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sExpnEnd)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          ] or >
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          .tParmEnd
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          [ oTypeStkCompareParameterCount (yes)
          | yes:
          ] or >
          oCountPop
          >>
         ;ActualParameters
         .tCallEnd
         oValuePushSymbol
         oEmitValue
         % value emitted 59
         oValuePop
         oTypeStkPop
         ] or >
         oSymbolStkPop
         >>
        ;CallStmt
        ] or >
        }
        [ (sEnd)
        | *:
        ] or >
        ?sEnd (sEnd)
        >>
       ;Block
       oSymbolTblPopScope
       >>
      ;Statement
      [ (sEnd)
      | *:
      .tIfEnd
      oFixPopForwardBranch
      >>
     ;IfStmt
     ] or >
     }
     [ (sEnd)
     | *:
     ] or >
     ?sEnd (sEnd)
     >>
    ;Block
    oSymbolTblPopScope
    >>
   ;Statement
   }
   [ (sRepeatEnd)
   | sRepeatEnd:
   ] or >
   .tRepeatControl
   @BooleanControlExpression
    @Expression
     @Operand
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syVariable)
      | *:
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      @Variable
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 88
       oValuePop
       ] or >
       oTypeStkPushSymbol
       @VariableExtension
        [ (sInteger)
        | *:
        >>
       ;VariableExtension
       >>
      ;Variable
      @VariableOperand
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       .tFetchInteger
       ] or >
       >>
      ;VariableOperand
      ] or >
      ] or >
      >>
     ;Operand
     @UnaryOperator
      [ (sInteger)
      | *:
      >>
     ;UnaryOperator
     @BinaryOperator
      [ (sInteger)
      | *:
      >>
     ;BinaryOperator
     [ (sInteger)
     | *:
     }
     @Operand
      [ (sInteger)
      | sInteger:
      oValuePushInteger
      oSymbolStkPush(syExpression)
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      ] or >
      >>
     ;Operand
     @UnaryOperator
      [ (sNE)
      | *:
      >>
     ;UnaryOperator
     @BinaryOperator
      [ (sNE)
      | sNE:
      [ oTypeStkChooseKind (tpInteger)
      | *:
      .tNE
      @CompareEqualityOperandTypes
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oTypeStkPop
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       ] or >
       oTypeStkPop
       oTypeStkPush(tpBoolean)
       oSymbolStkPop
       oSymbolStkSetKind(syExpression)
       >>
      ;CompareEqualityOperandTypes
      ] or >
      oSymbolStkSetKind(syExpression)
      >>
     ;BinaryOperator
     [ (sNot)
     | *:
     }
     @Operand
      [ (sNot)
      | *:
      >>
     ;Operand
     @UnaryOperator
      [ (sNot)
      | sNot:
      .tNot
      oTypeStkPush(tpBoolean)
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpBoolean)
       | tpBoolean:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpBoolean)
       | tpBoolean:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      oTypeStkPop
      ] or >
      oSymbolStkSetKind(syExpression)
      >>
     ;UnaryOperator
     @BinaryOperator
      [ (sExpnEnd)
      | *:
      >>
     ;BinaryOperator
     [ (sExpnEnd)
     | sExpnEnd:
     ] or >
     >>
    ;Expression
    [ oTypeStkChooseKind (tpBoolean)
    | tpBoolean:
    ] or >
    oSymbolStkPop
    oTypeStkPop
    >>
   ;BooleanControlExpression
   .tRepeatTest
   oFixPopTargetAddress
   % value emitted 725
   >>
  ;RepeatStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtNull)
   | *:
   .tCallBegin
   oTypeStkPushSymbol
   [ oTypeStkChooseRecursionFlag (no)
   | *:
   @ActualParameters
    oCountPush(zero)
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    [ oTypeStkCompareParameterCount (yes)
    | yes:
    ] or >
    oCountPop
    >>
   ;ActualParameters
   .tCallEnd
   oValuePushSymbol
   oEmitValue
   % value emitted 331
   oValuePop
   oTypeStkPop
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sEnd)
  | *:
  ] or >
  ?sEnd (sEnd)
  >>
 ;Block
 [ oSymbolTblLookupExternal (no)
 | *:
 oSymbolTblPopScope
 oSymbolStkPop
 .tTrapBegin
 .tTrap
 oEmitTrapKind(trHalt)
 % value emitted 0
 >>
;Program
