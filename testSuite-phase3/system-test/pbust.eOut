@Program
 ?sProgram (sProgram)
 oSymbolStkPush(syProcedure)
 oSymbolTblPushScope
 oCountPush(three)
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdInput)
  | stdInput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(one)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 1
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdOutput)
  | stdOutput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(two)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 2
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 4
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sParmEnd)
 | sParmEnd:
 ] or >
 oCountPop
 @Block
  ?sBegin (sBegin)
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sArray)
    | *:
    >>
   ;PublicDefinition
   [ (sArray)
   | *:
   @TypeBody
    [ (sArray)
    | sArray:
    oTypeStkPush(tpArray)
    @IndexType
     oValuePush(one)
     @ConstantValue
      [ (sInteger)
      | sInteger:
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      oValuePushInteger
      [ (sLike)
      | *:
      ] or >
      >>
     ;ConstantValue
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oValuePushTypeStkLowerBound
     oValuePushTypeStkUpperBound
     ] or >
     oTypeStkPop
     oTypeStkEnterBounds
     [ oTypeStkVerifyBounds (yes)
     | yes:
     oValuePop
     ] or >
     oValuePop
     oValuePop
     >>
    ;IndexType
    @ComponentType
     @SimpleType
      ?sLike (sLike)
      [ (sInteger)
      | sInteger:
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      ] or >
      >>
     ;SimpleType
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     oTypeStkEnterComponentReference
     oTypeStkPop
     >>
    ;ComponentType
    oValuePop
    ] or >
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (no)
     | no:
     oTypeTblEnter
     ] or >
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpArray)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpArray)
     | tpArray:
     .tArrayDescriptor
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     .tLiteralInteger
     oValuePushTypeStkLowerBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 8
     .tStoreInteger
     oAllocateDescriptor
     .tLiteralInteger
     oValuePushTypeStkUpperBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 12
     .tStoreInteger
     oAllocateDescriptor
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     oTypeStkPushSymbol
     ] or >
     oSymbolStkPop
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpArray)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpArray)
     | tpArray:
     .tArrayDescriptor
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     .tLiteralInteger
     oValuePushTypeStkLowerBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 20
     .tStoreInteger
     oAllocateDescriptor
     .tLiteralInteger
     oValuePushTypeStkUpperBound
     oEmitValue
     % value emitted 0
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 24
     .tStoreInteger
     oAllocateDescriptor
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syConstant)
     | syConstant:
     oTypeStkPushSymbol
     ] or >
     oSymbolStkPop
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpBoolean)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpBoolean)
     | tpBoolean:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syConstant)
     | syConstant:
     oTypeStkPushSymbol
     ] or >
     oSymbolStkPop
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpBoolean)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpBoolean)
     | tpBoolean:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sStringLiteral)
     | sStringLiteral:
     oTypeStkPush(tpChar)
     oTypeStkLinkToStandardType(stdChar)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpChar)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   [ (sIdentifier)
   | sIdentifier:
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   ] or >
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sPackage)
  | sPackage:
  @PackageDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syPackage)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @Block
    ?sBegin (sBegin)
    [ (sVar)
    | sVar:
    @VariableDeclarations
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sLike)
      | *:
      >>
     ;PublicDefinition
     [ (sLike)
     | *:
     @TypeBody
      [ (sLike)
      | *:
      @SimpleType
       ?sLike (sLike)
       [ (sInteger)
       | sInteger:
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       ] or >
       >>
      ;SimpleType
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (yes)
       | *:
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     ] or >
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sVar)
    | sVar:
    @VariableDeclarations
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sLike)
      | *:
      >>
     ;PublicDefinition
     [ (sLike)
     | *:
     @TypeBody
      [ (sLike)
      | *:
      @SimpleType
       ?sLike (sLike)
       [ (sInteger)
       | sInteger:
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       ] or >
       >>
      ;SimpleType
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (yes)
       | *:
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     ] or >
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sParmEnd)
      | *:
      >>
     ;PublicDefinition
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 324
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 13277
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 328
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 17
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sPublic)
      | sPublic:
      oSymbolStkSetPublicFlag
      ] or >
      >>
     ;PublicDefinition
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      oCountIncrement
      ?sIdentifier (sIdentifier)
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      [ (sVar)
      | sVar:
      oSymbolStkSetKind(syVarParameter)
      ] or >
      @ProcedureParameterType
       @SimpleType
        ?sLike (sLike)
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syVarParameter)
       | *:
       oSymbolStkEnterTypeReference
       @AllocateVar
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        oAllocateAlignOnWord
        oSymbolStkEnterDataAddress
        oAllocateVarParameter
        ] or >
        >>
       ;AllocateVar
       oSymbolTblEnter
       >>
      ;ProcedureParameterType
      }
      [ (sIdentifier)
      | *:
      oCountIncrement
      ?sIdentifier (sIdentifier)
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      [ (sLike)
      | *:
      oSymbolStkSetKind(syVariable)
      @ProcedureParameterType
       @SimpleType
        ?sLike (sLike)
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       [ oTypeStkChooseKind (tpInteger)
       | *:
       ] or >
       oSymbolStkEnterTypeReference
       @AllocateVar
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oAllocateAlignOnWord
        oSymbolStkEnterDataAddress
        oAllocateVariable
        ] or >
        >>
       ;AllocateVar
       oSymbolTblEnter
       >>
      ;ProcedureParameterType
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (two)
       | *:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 336
       oValuePop
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @EmitStore
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tStoreInteger
        ] or >
        >>
       ;EmitStore
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oCountDecrement
       }
       [ oCountChoose (one)
       | *:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 332
       oValuePop
       [ oSymbolStkChooseKind (syVarParameter)
       | syVarParameter:
       .tStoreAddress
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oCountDecrement
       }
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sIfStmt)
      | sIfStmt:
      @IfStmt
       .tIfBegin
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 328
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 17
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sEq)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sEq)
          | sEq:
          [ oTypeStkChooseKind (tpInteger)
          | *:
          .tEQ
          @CompareEqualityOperandTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkPop
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           oTypeStkPop
           oTypeStkPush(tpBoolean)
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareEqualityOperandTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       ?sThen (sThen)
       .tIfThen
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 328
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 19
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       [ (sElse)
       | sElse:
       .tIfMerge
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       oFixSwap
       oFixPopForwardBranch
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 328
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 17
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       ] or >
       .tIfEnd
       oFixPopForwardBranch
       >>
      ;IfStmt
      ] or >
      }
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 324
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sIdentifier)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 324
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sIdentifier)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;BinaryOperator
        [ (sIdentifier)
        | *:
        }
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 328
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sMultiply)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sMultiply)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sMultiply)
         | sMultiply:
         .tMultiply
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sInteger)
        | *:
        }
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 10000
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sModulus)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sModulus)
         | sModulus:
         .tModulus
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 332
        oValuePop
        .tFetchAddress
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sIdentifier)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 324
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sIdentifier)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;BinaryOperator
        [ (sIdentifier)
        | *:
        }
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 336
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sModulus)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sModulus)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sModulus)
         | sModulus:
         .tModulus
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sInteger)
        | *:
        }
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sAdd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sAdd)
         | sAdd:
         .tAdd
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 46
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblMergePublicScope
   >>
  ;PackageDefinition
  ] or >
  }
  [ (sPackage)
  | sPackage:
  @PackageDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syPackage)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @Block
    ?sBegin (sBegin)
    [ (sVar)
    | sVar:
    @VariableDeclarations
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sArray)
      | *:
      >>
     ;PublicDefinition
     [ (sArray)
     | *:
     @TypeBody
      [ (sArray)
      | sArray:
      oTypeStkPush(tpArray)
      @IndexType
       oValuePush(one)
       @ConstantValue
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        oValuePushInteger
        [ (sLike)
        | *:
        ] or >
        >>
       ;ConstantValue
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oValuePushTypeStkLowerBound
       oValuePushTypeStkUpperBound
       ] or >
       oTypeStkPop
       oTypeStkEnterBounds
       [ oTypeStkVerifyBounds (yes)
       | yes:
       oValuePop
       ] or >
       oValuePop
       oValuePop
       >>
      ;IndexType
      @ComponentType
       @SimpleType
        ?sLike (sLike)
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        ] or >
        >>
       ;SimpleType
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @TypeTblEnterIfNew
        [ oTypeStkChooseTypeReference (yes)
        | *:
        >>
       ;TypeTblEnterIfNew
       oTypeStkEnterComponentReference
       oTypeStkPop
       >>
      ;ComponentType
      oValuePop
      ] or >
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (no)
       | no:
       oTypeTblEnter
       ] or >
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpArray)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       .tArrayDescriptor
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       .tLiteralInteger
       oValuePushTypeStkLowerBound
       oEmitValue
       % value emitted 0
       oValuePop
       .tLiteralAddress
       oEmitDataAddress
       % value emitted 340
       .tStoreInteger
       oAllocateDescriptor
       .tLiteralInteger
       oValuePushTypeStkUpperBound
       oEmitValue
       % value emitted 0
       oValuePop
       .tLiteralAddress
       oEmitDataAddress
       % value emitted 344
       .tStoreInteger
       oAllocateDescriptor
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     ] or >
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sVar)
    | sVar:
    @VariableDeclarations
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sLike)
      | *:
      >>
     ;PublicDefinition
     [ (sLike)
     | *:
     @TypeBody
      [ (sLike)
      | *:
      @SimpleType
       ?sLike (sLike)
       [ (sInteger)
       | sInteger:
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       ] or >
       >>
      ;SimpleType
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (yes)
       | *:
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     ] or >
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sPublic)
      | sPublic:
      oSymbolStkSetPublicFlag
      ] or >
      >>
     ;PublicDefinition
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sVar)
      | sVar:
      @VariableDeclarations
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushLocalIdentifier
       [ oSymbolStkChooseKind (syUndefined)
       | syUndefined:
       ] or >
       @PublicDefinition
        [ (sArray)
        | *:
        >>
       ;PublicDefinition
       [ (sArray)
       | *:
       @TypeBody
        [ (sArray)
        | sArray:
        oTypeStkPush(tpArray)
        @IndexType
         oValuePush(one)
         @ConstantValue
          [ (sInteger)
          | sInteger:
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          oValuePushInteger
          [ (sLike)
          | *:
          ] or >
          >>
         ;ConstantValue
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oValuePushTypeStkLowerBound
         oValuePushTypeStkUpperBound
         ] or >
         oTypeStkPop
         oTypeStkEnterBounds
         [ oTypeStkVerifyBounds (yes)
         | yes:
         oValuePop
         ] or >
         oValuePop
         oValuePop
         >>
        ;IndexType
        @ComponentType
         @SimpleType
          ?sLike (sLike)
          [ (sInteger)
          | sInteger:
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          ] or >
          >>
         ;SimpleType
         [ oTypeStkChooseKind (tpInteger)
         | *:
         @TypeTblEnterIfNew
          [ oTypeStkChooseTypeReference (yes)
          | *:
          >>
         ;TypeTblEnterIfNew
         oTypeStkEnterComponentReference
         oTypeStkPop
         >>
        ;ComponentType
        oValuePop
        ] or >
        @TypeTblEnterIfNew
         [ oTypeStkChooseTypeReference (no)
         | no:
         oTypeTblEnter
         ] or >
         >>
        ;TypeTblEnterIfNew
        >>
       ;TypeBody
       @EnterVariableAttributes
        [ oSymbolStkChooseKind (syUndefined)
        | *:
        oSymbolStkSetKind(syVariable)
        [ oTypeStkChooseKind (tpArray)
        | *:
        @AllocateVar
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oTypeStkChooseKind (tpArray)
         | tpArray:
         .tArrayDescriptor
         oAllocateAlignOnWord
         oSymbolStkEnterDataAddress
         .tLiteralInteger
         oValuePushTypeStkLowerBound
         oEmitValue
         % value emitted 0
         oValuePop
         .tLiteralAddress
         oEmitDataAddress
         % value emitted 356
         .tStoreInteger
         oAllocateDescriptor
         .tLiteralInteger
         oValuePushTypeStkUpperBound
         oEmitValue
         % value emitted 0
         oValuePop
         .tLiteralAddress
         oEmitDataAddress
         % value emitted 360
         .tStoreInteger
         oAllocateDescriptor
         oAllocateVariable
         ] or >
         >>
        ;AllocateVar
        oSymbolStkEnterTypeReference
        oSymbolTblEnter
        >>
       ;EnterVariableAttributes
       oTypeStkPop
       oSymbolStkPop
       ] or >
       >>
      ;VariableDeclarations
      ] or >
      }
      [ (sVar)
      | sVar:
      @VariableDeclarations
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushLocalIdentifier
       [ oSymbolStkChooseKind (syUndefined)
       | syUndefined:
       ] or >
       @PublicDefinition
        [ (sInitialValue)
        | *:
        >>
       ;PublicDefinition
       [ (sInitialValue)
       | sInitialValue:
       .tInitialValue
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @TypeTblEnterIfNew
        [ oTypeStkChooseTypeReference (yes)
        | *:
        >>
       ;TypeTblEnterIfNew
       .tInitEnd
       .tLiteralAddress
       @EmitStore
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tStoreInteger
        ] or >
        >>
       ;EmitStore
       oSymbolStkPop
       ] or >
       @EnterVariableAttributes
        [ oSymbolStkChooseKind (syUndefined)
        | *:
        oSymbolStkSetKind(syVariable)
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @AllocateVar
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oAllocateAlignOnWord
         oSymbolStkEnterDataAddress
         oAllocateVariable
         ] or >
         >>
        ;AllocateVar
        oSymbolStkEnterTypeReference
        oSymbolTblEnter
        >>
       ;EnterVariableAttributes
       oTypeStkPop
       oSymbolStkPop
       ] or >
       >>
      ;VariableDeclarations
      ] or >
      }
      [ (sRepeatStmt)
      | sRepeatStmt:
      @RepeatStmt
       .tRepeatBegin
       oFixPushTargetAddress
       [ (sBegin)
       | *:
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 356
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sSubscript)
            | sSubscript:
            .tSubscriptBegin
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 368
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sExpnEnd)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            [ oTypeStkChooseKind (tpArray)
            | tpArray:
            oTypeStkPushComponent
            oTypeStkSwap
            oTypeStkPop
            ] or >
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tSubscriptInteger
            ] or >
            ] or >
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 0
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 368
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 368
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sInteger)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sInteger)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sInteger)
            | *:
            >>
           ;BinaryOperator
           [ (sInteger)
           | *:
           }
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 1
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sAdd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sAdd)
            | sAdd:
            .tAdd
            oTypeStkPush(tpInteger)
            @CompareOperandAndResultTypes
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             oSymbolStkPop
             oSymbolStkSetKind(syExpression)
             >>
            ;CompareOperandAndResultTypes
            ] or >
            oSymbolStkSetKind(syExpression)
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       }
       [ (sRepeatEnd)
       | sRepeatEnd:
       ] or >
       .tRepeatControl
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 368
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 13
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sLE)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sLE)
          | sLE:
          .tLE
          @CompareRelationalOperandTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkPop
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           oTypeStkPop
           oTypeStkPush(tpBoolean)
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareRelationalOperandTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sNot)
         | *:
         }
         @Operand
          [ (sNot)
          | *:
          >>
         ;Operand
         @UnaryOperator
          [ (sNot)
          | sNot:
          .tNot
          oTypeStkPush(tpBoolean)
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       .tRepeatTest
       oFixPopTargetAddress
       % value emitted 192
       >>
      ;RepeatStmt
      ] or >
      }
      [ (sVar)
      | sVar:
      @VariableDeclarations
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushLocalIdentifier
       [ oSymbolStkChooseKind (syUndefined)
       | syUndefined:
       ] or >
       @PublicDefinition
        [ (sInitialValue)
        | *:
        >>
       ;PublicDefinition
       [ (sInitialValue)
       | sInitialValue:
       .tInitialValue
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @TypeTblEnterIfNew
        [ oTypeStkChooseTypeReference (yes)
        | *:
        >>
       ;TypeTblEnterIfNew
       .tInitEnd
       .tLiteralAddress
       @EmitStore
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tStoreInteger
        ] or >
        >>
       ;EmitStore
       oSymbolStkPop
       ] or >
       @EnterVariableAttributes
        [ oSymbolStkChooseKind (syUndefined)
        | *:
        oSymbolStkSetKind(syVariable)
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @AllocateVar
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oAllocateAlignOnWord
         oSymbolStkEnterDataAddress
         oAllocateVariable
         ] or >
         >>
        ;AllocateVar
        oSymbolStkEnterTypeReference
        oSymbolTblEnter
        >>
       ;EnterVariableAttributes
       oTypeStkPop
       oSymbolStkPop
       ] or >
       >>
      ;VariableDeclarations
      ] or >
      }
      [ (sRepeatStmt)
      | sRepeatStmt:
      @RepeatStmt
       .tRepeatBegin
       oFixPushTargetAddress
       [ (sBegin)
       | *:
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sVar)
         | sVar:
         @VariableDeclarations
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushLocalIdentifier
          [ oSymbolStkChooseKind (syUndefined)
          | syUndefined:
          ] or >
          @PublicDefinition
           [ (sLike)
           | *:
           >>
          ;PublicDefinition
          [ (sLike)
          | *:
          @TypeBody
           [ (sLike)
           | *:
           @SimpleType
            ?sLike (sLike)
            [ (sInteger)
            | sInteger:
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            ] or >
            >>
           ;SimpleType
           @TypeTblEnterIfNew
            [ oTypeStkChooseTypeReference (yes)
            | *:
            >>
           ;TypeTblEnterIfNew
           >>
          ;TypeBody
          @EnterVariableAttributes
           [ oSymbolStkChooseKind (syUndefined)
           | *:
           oSymbolStkSetKind(syVariable)
           [ oTypeStkChooseKind (tpInteger)
           | *:
           @AllocateVar
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oAllocateAlignOnWord
            oSymbolStkEnterDataAddress
            oAllocateVariable
            ] or >
            >>
           ;AllocateVar
           oSymbolStkEnterTypeReference
           oSymbolTblEnter
           
