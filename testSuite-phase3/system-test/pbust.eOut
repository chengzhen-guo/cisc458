@Program
 ?sProgram (sProgram)
 oSymbolStkPush(syProcedure)
 oSymbolTblPushScope
 oCountPush(three)
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdInput)
  | stdInput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(one)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 1
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdOutput)
  | stdOutput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(two)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 2
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 4
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sParmEnd)
 | sParmEnd:
 ] or >
 oCountPop
 @Block
  ?sBegin (sBegin)
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sArray)
    | *:
    >>
   ;PublicDefinition
   [ (sArray)
   | *:
   @TypeBody
    [ (sArray)
    | sArray:
    oTypeStkPush(tpArray)
    @IndexType
     oValuePush(one)
     @ConstantValue
      [ (sInteger)
      | sInteger:
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      oValuePushInteger
      [ (sLike)
      | *:
      ] or >
      >>
     ;ConstantValue
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     ] or >
     oTypeStkPop
     oTypeStkEnterBounds
     [ oTypeStkVerifyBounds (yes)
     | yes:
     ] or >
     oValuePop
     oValuePop
     >>
    ;IndexType
    [ (sLike)
    | *:
    @ComponentType
     @SimpleType
      ?sLike (sLike)
      [ (sInteger)
      | sInteger:
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      ] or >
      >>
     ;SimpleType
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     oTypeStkEnterComponentReference
     oTypeStkPop
     >>
    ;ComponentType
    ] or >
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (no)
     | no:
     oTypeTblEnter
     ] or >
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpArray)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpArray)
     | tpArray:
     .tArrayDescriptor
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     .tLiteralInteger
     oValuePushTypeStkLowerBound
     oEmitValue
     % value emitted 1
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 8
     .tStoreInteger
     oAllocateDescriptor
     .tLiteralInteger
     oValuePushTypeStkUpperBound
     oEmitValue
     % value emitted 7
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 12
     .tStoreInteger
     oAllocateDescriptor
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     oTypeStkPushSymbol
     ] or >
     oSymbolStkPop
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpArray)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpArray)
     | tpArray:
     .tArrayDescriptor
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     .tLiteralInteger
     oValuePushTypeStkLowerBound
     oEmitValue
     % value emitted 1
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 44
     .tStoreInteger
     oAllocateDescriptor
     .tLiteralInteger
     oValuePushTypeStkUpperBound
     oEmitValue
     % value emitted 7
     oValuePop
     .tLiteralAddress
     oEmitDataAddress
     % value emitted 48
     .tStoreInteger
     oAllocateDescriptor
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syConstant)
     | syConstant:
     oTypeStkPushSymbol
     ] or >
     oSymbolStkPop
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpBoolean)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpBoolean)
     | tpBoolean:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syConstant)
     | syConstant:
     oTypeStkPushSymbol
     ] or >
     oSymbolStkPop
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpBoolean)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpBoolean)
     | tpBoolean:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sStringLiteral)
     | sStringLiteral:
     oTypeStkPush(tpChar)
     oTypeStkLinkToStandardType(stdChar)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpChar)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sInteger)
     | sInteger:
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sPackage)
  | sPackage:
  @PackageDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syPackage)
   oTypeStkPush(tpNull)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @Block
    ?sBegin (sBegin)
    [ (sVar)
    | sVar:
    @VariableDeclarations
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sLike)
      | *:
      >>
     ;PublicDefinition
     [ (sLike)
     | *:
     @TypeBody
      [ (sLike)
      | *:
      @SimpleType
       ?sLike (sLike)
       [ (sInteger)
       | sInteger:
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       ] or >
       >>
      ;SimpleType
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (yes)
       | *:
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sVar)
    | sVar:
    @VariableDeclarations
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sLike)
      | *:
      >>
     ;PublicDefinition
     [ (sLike)
     | *:
     @TypeBody
      [ (sLike)
      | *:
      @SimpleType
       ?sLike (sLike)
       [ (sInteger)
       | sInteger:
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       ] or >
       >>
      ;SimpleType
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (yes)
       | *:
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     @PublicDefinition
      [ (sParmEnd)
      | *:
      >>
     ;PublicDefinition
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 372
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 13277
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 376
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 17
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     @PublicDefinition
      [ (sPublic)
      | sPublic:
      oSymbolStkSetPublicFlag
      ] or >
      >>
     ;PublicDefinition
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      oCountIncrement
      ?sIdentifier (sIdentifier)
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      [ (sVar)
      | sVar:
      oSymbolStkSetKind(syVarParameter)
      ] or >
      @ProcedureParameterType
       @SimpleType
        ?sLike (sLike)
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syVarParameter)
       | *:
       oSymbolStkEnterTypeReference
       @AllocateVar
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        oAllocateAlignOnWord
        oSymbolStkEnterDataAddress
        oAllocateVarParameter
        ] or >
        >>
       ;AllocateVar
       oSymbolTblEnter
       >>
      ;ProcedureParameterType
      }
      [ (sIdentifier)
      | *:
      oCountIncrement
      ?sIdentifier (sIdentifier)
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      [ (sLike)
      | *:
      oSymbolStkSetKind(syVariable)
      @ProcedureParameterType
       @SimpleType
        ?sLike (sLike)
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       [ oTypeStkChooseKind (tpInteger)
       | *:
       ] or >
       oSymbolStkEnterTypeReference
       @AllocateVar
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oAllocateAlignOnWord
        oSymbolStkEnterDataAddress
        oAllocateVariable
        ] or >
        >>
       ;AllocateVar
       oSymbolTblEnter
       >>
      ;ProcedureParameterType
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (two)
       | *:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 384
       oValuePop
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @EmitStore
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tStoreInteger
        ] or >
        >>
       ;EmitStore
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oCountDecrement
       }
       [ oCountChoose (one)
       | *:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 380
       oValuePop
       [ oSymbolStkChooseKind (syVarParameter)
       | syVarParameter:
       .tStoreAddress
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oCountDecrement
       }
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sIfStmt)
      | sIfStmt:
      @IfStmt
       .tIfBegin
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 376
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 17
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sEq)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sEq)
          | sEq:
          [ oTypeStkChooseKind (tpInteger)
          | *:
          .tEQ
          @CompareEqualityOperandTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkPop
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           oTypeStkPop
           oTypeStkPush(tpBoolean)
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareEqualityOperandTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       ?sThen (sThen)
       .tIfThen
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 376
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 19
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       [ (sElse)
       | sElse:
       .tIfMerge
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       oFixSwap
       oFixPopForwardBranch
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 376
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 17
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       ] or >
       .tIfEnd
       oFixPopForwardBranch
       >>
      ;IfStmt
      ] or >
      }
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 372
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sIdentifier)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 372
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sIdentifier)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;BinaryOperator
        [ (sIdentifier)
        | *:
        }
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 376
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sMultiply)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sMultiply)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sMultiply)
         | sMultiply:
         .tMultiply
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sInteger)
        | *:
        }
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 10000
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sModulus)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sModulus)
         | sModulus:
         .tModulus
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 380
        oValuePop
        .tFetchAddress
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sIdentifier)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 372
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sIdentifier)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;BinaryOperator
        [ (sIdentifier)
        | *:
        }
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 384
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sModulus)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sModulus)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sModulus)
         | sModulus:
         .tModulus
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sInteger)
        | *:
        }
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sAdd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sAdd)
         | sAdd:
         .tAdd
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 46
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblMergePublicScope
   >>
  ;PackageDefinition
  ] or >
  }
  [ (sPackage)
  | sPackage:
  @PackageDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syPackage)
   oTypeStkPush(tpNull)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @Block
    ?sBegin (sBegin)
    [ (sVar)
    | sVar:
    @VariableDeclarations
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sArray)
      | *:
      >>
     ;PublicDefinition
     [ (sArray)
     | *:
     @TypeBody
      [ (sArray)
      | sArray:
      oTypeStkPush(tpArray)
      @IndexType
       oValuePush(one)
       @ConstantValue
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        oValuePushInteger
        [ (sLike)
        | *:
        ] or >
        >>
       ;ConstantValue
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oTypeStkPop
       oTypeStkEnterBounds
       [ oTypeStkVerifyBounds (yes)
       | yes:
       ] or >
       oValuePop
       oValuePop
       >>
      ;IndexType
      [ (sLike)
      | *:
      @ComponentType
       @SimpleType
        ?sLike (sLike)
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        ] or >
        >>
       ;SimpleType
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @TypeTblEnterIfNew
        [ oTypeStkChooseTypeReference (yes)
        | *:
        >>
       ;TypeTblEnterIfNew
       oTypeStkEnterComponentReference
       oTypeStkPop
       >>
      ;ComponentType
      ] or >
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (no)
       | no:
       oTypeTblEnter
       ] or >
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpArray)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       .tArrayDescriptor
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       .tLiteralInteger
       oValuePushTypeStkLowerBound
       oEmitValue
       % value emitted 1
       oValuePop
       .tLiteralAddress
       oEmitDataAddress
       % value emitted 388
       .tStoreInteger
       oAllocateDescriptor
       .tLiteralInteger
       oValuePushTypeStkUpperBound
       oEmitValue
       % value emitted 52
       oValuePop
       .tLiteralAddress
       oEmitDataAddress
       % value emitted 392
       .tStoreInteger
       oAllocateDescriptor
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sVar)
    | sVar:
    @VariableDeclarations
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sLike)
      | *:
      >>
     ;PublicDefinition
     [ (sLike)
     | *:
     @TypeBody
      [ (sLike)
      | *:
      @SimpleType
       ?sLike (sLike)
       [ (sInteger)
       | sInteger:
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       ] or >
       >>
      ;SimpleType
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (yes)
       | *:
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     @PublicDefinition
      [ (sPublic)
      | sPublic:
      oSymbolStkSetPublicFlag
      ] or >
      >>
     ;PublicDefinition
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sVar)
      | sVar:
      @VariableDeclarations
       ?sIdentifier (sIdentifier)
       oSymbolStkPushLocalIdentifier
       [ oSymbolStkChooseKind (syUndefined)
       | syUndefined:
       ] or >
       @PublicDefinition
        [ (sArray)
        | *:
        >>
       ;PublicDefinition
       [ (sArray)
       | *:
       @TypeBody
        [ (sArray)
        | sArray:
        oTypeStkPush(tpArray)
        @IndexType
         oValuePush(one)
         @ConstantValue
          [ (sInteger)
          | sInteger:
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          oValuePushInteger
          [ (sLike)
          | *:
          ] or >
          >>
         ;ConstantValue
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         oTypeStkPop
         oTypeStkEnterBounds
         [ oTypeStkVerifyBounds (yes)
         | yes:
         ] or >
         oValuePop
         oValuePop
         >>
        ;IndexType
        [ (sLike)
        | *:
        @ComponentType
         @SimpleType
          ?sLike (sLike)
          [ (sInteger)
          | sInteger:
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          ] or >
          >>
         ;SimpleType
         [ oTypeStkChooseKind (tpInteger)
         | *:
         @TypeTblEnterIfNew
          [ oTypeStkChooseTypeReference (yes)
          | *:
          >>
         ;TypeTblEnterIfNew
         oTypeStkEnterComponentReference
         oTypeStkPop
         >>
        ;ComponentType
        ] or >
        @TypeTblEnterIfNew
         [ oTypeStkChooseTypeReference (no)
         | no:
         oTypeTblEnter
         ] or >
         >>
        ;TypeTblEnterIfNew
        >>
       ;TypeBody
       @EnterVariableAttributes
        [ oSymbolStkChooseKind (syUndefined)
        | *:
        oSymbolStkSetKind(syVariable)
        [ oTypeStkChooseKind (tpArray)
        | *:
        @AllocateVar
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oTypeStkChooseKind (tpArray)
         | tpArray:
         .tArrayDescriptor
         oAllocateAlignOnWord
         oSymbolStkEnterDataAddress
         .tLiteralInteger
         oValuePushTypeStkLowerBound
         oEmitValue
         % value emitted 1
         oValuePop
         .tLiteralAddress
         oEmitDataAddress
         % value emitted 608
         .tStoreInteger
         oAllocateDescriptor
         .tLiteralInteger
         oValuePushTypeStkUpperBound
         oEmitValue
         % value emitted 13
         oValuePop
         .tLiteralAddress
         oEmitDataAddress
         % value emitted 612
         .tStoreInteger
         oAllocateDescriptor
         oAllocateVariable
         ] or >
         >>
        ;AllocateVar
        oSymbolStkEnterTypeReference
        oSymbolTblEnter
        >>
       ;EnterVariableAttributes
       oTypeStkPop
       oSymbolStkPop
       >>
      ;VariableDeclarations
      ] or >
      }
      [ (sVar)
      | sVar:
      @VariableDeclarations
       ?sIdentifier (sIdentifier)
       oSymbolStkPushLocalIdentifier
       [ oSymbolStkChooseKind (syUndefined)
       | syUndefined:
       ] or >
       @PublicDefinition
        [ (sInitialValue)
        | *:
        >>
       ;PublicDefinition
       [ (sInitialValue)
       | sInitialValue:
       .tInitialValue
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tInitEnd
       @TypeTblEnterIfNew
        [ oTypeStkChooseTypeReference (yes)
        | *:
        >>
       ;TypeTblEnterIfNew
       oSymbolStkPop
       @EnterVariableAttributes
        [ oSymbolStkChooseKind (syUndefined)
        | *:
        oSymbolStkSetKind(syVariable)
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @AllocateVar
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oAllocateAlignOnWord
         oSymbolStkEnterDataAddress
         oAllocateVariable
         ] or >
         >>
        ;AllocateVar
        oSymbolStkEnterTypeReference
        oSymbolTblEnter
        >>
       ;EnterVariableAttributes
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 668
       oValuePop
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @EmitStore
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tStoreInteger
        ] or >
        >>
       ;EmitStore
       ] or >
       oTypeStkPop
       oSymbolStkPop
       >>
      ;VariableDeclarations
      ] or >
      }
      [ (sRepeatStmt)
      | sRepeatStmt:
      @RepeatStmt
       .tRepeatBegin
       oFixPushTargetAddress
       [ (sBegin)
       | *:
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 608
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sSubscript)
            | sSubscript:
            .tSubscriptBegin
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 668
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sExpnEnd)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            [ oTypeStkChooseKind (tpArray)
            | tpArray:
            oTypeStkPushComponent
            oTypeStkSwap
            oTypeStkPop
            ] or >
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tSubscriptInteger
            ] or >
            ] or >
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 0
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 668
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 668
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sInteger)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sInteger)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sInteger)
            | *:
            >>
           ;BinaryOperator
           [ (sInteger)
           | *:
           }
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 1
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sAdd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sAdd)
            | sAdd:
            .tAdd
            oTypeStkPush(tpInteger)
            @CompareOperandAndResultTypes
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             oSymbolStkPop
             oSymbolStkSetKind(syExpression)
             >>
            ;CompareOperandAndResultTypes
            ] or >
            oSymbolStkSetKind(syExpression)
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       }
       [ (sRepeatEnd)
       | sRepeatEnd:
       ] or >
       .tRepeatControl
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 668
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 13
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sLE)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sLE)
          | sLE:
          .tLE
          @CompareRelationalOperandTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkPop
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           oTypeStkPop
           oTypeStkPush(tpBoolean)
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareRelationalOperandTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sNot)
         | *:
         }
         @Operand
          [ (sNot)
          | *:
          >>
         ;Operand
         @UnaryOperator
          [ (sNot)
          | sNot:
          .tNot
          oTypeStkPush(tpBoolean)
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       .tRepeatTest
       oFixPopTargetAddress
       % value emitted 193
       >>
      ;RepeatStmt
      ] or >
      }
      [ (sVar)
      | sVar:
      @VariableDeclarations
       ?sIdentifier (sIdentifier)
       oSymbolStkPushLocalIdentifier
       [ oSymbolStkChooseKind (syUndefined)
       | syUndefined:
       ] or >
       @PublicDefinition
        [ (sInitialValue)
        | *:
        >>
       ;PublicDefinition
       [ (sInitialValue)
       | sInitialValue:
       .tInitialValue
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tInitEnd
       @TypeTblEnterIfNew
        [ oTypeStkChooseTypeReference (yes)
        | *:
        >>
       ;TypeTblEnterIfNew
       oSymbolStkPop
       @EnterVariableAttributes
        [ oSymbolStkChooseKind (syUndefined)
        | *:
        oSymbolStkSetKind(syVariable)
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @AllocateVar
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oAllocateAlignOnWord
         oSymbolStkEnterDataAddress
         oAllocateVariable
         ] or >
         >>
        ;AllocateVar
        oSymbolStkEnterTypeReference
        oSymbolTblEnter
        >>
       ;EnterVariableAttributes
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 672
       oValuePop
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @EmitStore
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tStoreInteger
        ] or >
        >>
       ;EmitStore
       ] or >
       oTypeStkPop
       oSymbolStkPop
       >>
      ;VariableDeclarations
      ] or >
      }
      [ (sRepeatStmt)
      | sRepeatStmt:
      @RepeatStmt
       .tRepeatBegin
       oFixPushTargetAddress
       [ (sBegin)
       | *:
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sVar)
         | sVar:
         @VariableDeclarations
          ?sIdentifier (sIdentifier)
          oSymbolStkPushLocalIdentifier
          [ oSymbolStkChooseKind (syUndefined)
          | syUndefined:
          ] or >
          @PublicDefinition
           [ (sLike)
           | *:
           >>
          ;PublicDefinition
          [ (sLike)
          | *:
          @TypeBody
           [ (sLike)
           | *:
           @SimpleType
            ?sLike (sLike)
            [ (sInteger)
            | sInteger:
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            ] or >
            >>
           ;SimpleType
           @TypeTblEnterIfNew
            [ oTypeStkChooseTypeReference (yes)
            | *:
            >>
           ;TypeTblEnterIfNew
           >>
          ;TypeBody
          @EnterVariableAttributes
           [ oSymbolStkChooseKind (syUndefined)
           | *:
           oSymbolStkSetKind(syVariable)
           [ oTypeStkChooseKind (tpInteger)
           | *:
           @AllocateVar
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oAllocateAlignOnWord
            oSymbolStkEnterDataAddress
            oAllocateVariable
            ] or >
            >>
           ;AllocateVar
           oSymbolStkEnterTypeReference
           oSymbolTblEnter
           >>
          ;EnterVariableAttributes
          oTypeStkPop
          oSymbolStkPop
          >>
         ;VariableDeclarations
         ] or >
         }
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtNull)
          | *:
          .tCallBegin
          oTypeStkPushSymbol
          [ oTypeStkChooseRecursionFlag (no)
          | *:
          @ActualParameters
           oCountPush(zero)
           [ (sIdentifier)
           | *:
           [ oTypeStkCompareParameterCount (no)
           | *:
           oCountIncrement
           oSymbolStkPushFormalParameter
           oTypeStkPushSymbol
           [ oSymbolStkChooseKind (syVarParameter)
           | syVarParameter:
           @VarActual
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 676
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sExpnEnd)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            .tVarParm
            [ oTypeStkCompareNames (yes)
            | yes:
            ] or >
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            ] or >
            >>
           ;VarActual
           ] or >
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           .tParmEnd
           }
           [ (sInteger)
           | *:
           [ oTypeStkCompareParameterCount (no)
           | *:
           oCountIncrement
           oSymbolStkPushFormalParameter
           oTypeStkPushSymbol
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Expression
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 13
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           ] or >
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           .tParmEnd
           }
           [ (sParmEnd)
           | sParmEnd:
           ] or >
           [ oTypeStkCompareParameterCount (yes)
           | yes:
           ] or >
           oCountPop
           >>
          ;ActualParameters
          .tCallEnd
          oValuePushSymbol
          oEmitValue
          % value emitted 70
          oValuePop
          oTypeStkPop
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sWhileStmt)
         | sWhileStmt:
         @WhileStmt
          .tWhileBegin
          oFixPushTargetAddress
          @BooleanControlExpression
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 608
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sSubscript)
               | sSubscript:
               .tSubscriptBegin
               @Expression
                @Operand
                 [ (sIdentifier)
                 | sIdentifier:
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syVariable)
                 | *:
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 @Variable
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  .tLiteralAddress
                  oValuePushSymbol
                  oEmitValue
                  % value emitted 676
                  oValuePop
                  ] or >
                  oTypeStkPushSymbol
                  @VariableExtension
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;VariableExtension
                  >>
                 ;Variable
                 @VariableOperand
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  .tFetchInteger
                  ] or >
                  >>
                 ;VariableOperand
                 ] or >
                 ] or >
                 >>
                ;Operand
                @UnaryOperator
                 [ (sExpnEnd)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sExpnEnd)
                 | *:
                 >>
                ;BinaryOperator
                [ (sExpnEnd)
                | sExpnEnd:
                ] or >
                >>
               ;Expression
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               oSymbolStkPop
               oTypeStkPop
               [ oTypeStkChooseKind (tpArray)
               | tpArray:
               oTypeStkPushComponent
               oTypeStkSwap
               oTypeStkPop
               ] or >
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tSubscriptInteger
               ] or >
               ] or >
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sInteger)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInteger)
             | *:
             >>
            ;BinaryOperator
            [ (sInteger)
            | *:
            }
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 4
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sEq)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sEq)
             | sEq:
             [ oTypeStkChooseKind (tpInteger)
             | *:
             .tEQ
             @CompareEqualityOperandTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkPop
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              oTypeStkPop
              oTypeStkPush(tpBoolean)
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareEqualityOperandTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;BooleanControlExpression
          .tWhileTest
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          oFixSwap
          @Statement
           oSymbolTblPushScope
           @Block
            ?sBegin (sBegin)
            [ (sNullStmt)
            | sNullStmt:
            ] or >
            }
            [ (sCallStmt)
            | sCallStmt:
            @CallStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syProcedure)
             | *:
             [ oSymbolStkChooseKind (syProcedure)
             | syProcedure:
             [ oSymbolStkChooseStandardRoutine (rtNull)
             | *:
             .tCallBegin
             oTypeStkPushSymbol
             [ oTypeStkChooseRecursionFlag (no)
             | *:
             @ActualParameters
              oCountPush(zero)
              [ (sIdentifier)
              | *:
              [ oTypeStkCompareParameterCount (no)
              | *:
              oCountIncrement
              oSymbolStkPushFormalParameter
              oTypeStkPushSymbol
              [ oSymbolStkChooseKind (syVarParameter)
              | syVarParameter:
              @VarActual
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 676
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sExpnEnd)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               .tVarParm
               [ oTypeStkCompareNames (yes)
               | yes:
               ] or >
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               ] or >
               >>
              ;VarActual
              ] or >
              oSymbolStkPop
              oTypeStkPop
              oSymbolStkPop
              oTypeStkPop
              .tParmEnd
              }
              [ (sInteger)
              | *:
              [ oTypeStkCompareParameterCount (no)
              | *:
              oCountIncrement
              oSymbolStkPushFormalParameter
              oTypeStkPushSymbol
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Expression
               @Operand
                [ (sInteger)
                | sInteger:
                oValuePushInteger
                oSymbolStkPush(syExpression)
                oTypeStkPush(tpInteger)
                oTypeStkLinkToStandardType(stdInteger)
                .tLiteralInteger
                oEmitValue
                % value emitted 13
                oValuePop
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              ] or >
              oSymbolStkPop
              oTypeStkPop
              oSymbolStkPop
              oTypeStkPop
              .tParmEnd
              }
              [ (sParmEnd)
              | sParmEnd:
              ] or >
              [ oTypeStkCompareParameterCount (yes)
              | yes:
              ] or >
              oCountPop
              >>
             ;ActualParameters
             .tCallEnd
             oValuePushSymbol
             oEmitValue
             % value emitted 70
             oValuePop
             oTypeStkPop
             ] or >
             oSymbolStkPop
             >>
            ;CallStmt
            ] or >
            }
            [ (sEnd)
            | *:
            ] or >
            ?sEnd (sEnd)
            >>
           ;Block
           oSymbolTblPopScope
           >>
          ;Statement
          .tWhileEnd
          oFixPopTargetAddress
          % value emitted 255
          oFixPopForwardBranch
          >>
         ;WhileStmt
         ] or >
         }
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 388
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sSubscript)
            | sSubscript:
            .tSubscriptBegin
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 672
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sExpnEnd)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            [ oTypeStkChooseKind (tpArray)
            | tpArray:
            oTypeStkPushComponent
            oTypeStkSwap
            oTypeStkPop
            ] or >
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tSubscriptInteger
            ] or >
            ] or >
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 676
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sExpnEnd)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 608
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sSubscript)
            | sSubscript:
            .tSubscriptBegin
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 676
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sExpnEnd)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            [ oTypeStkChooseKind (tpArray)
            | tpArray:
            oTypeStkPushComponent
            oTypeStkSwap
            oTypeStkPop
            ] or >
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tSubscriptInteger
            ] or >
            ] or >
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 608
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sSubscript)
              | sSubscript:
              .tSubscriptBegin
              @Expression
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syVariable)
                | *:
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 676
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                @VariableOperand
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 .tFetchInteger
                 ] or >
                 >>
                ;VariableOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              oSymbolStkPop
              oTypeStkPop
              [ oTypeStkChooseKind (tpArray)
              | tpArray:
              oTypeStkPushComponent
              oTypeStkSwap
              oTypeStkPop
              ] or >
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tSubscriptInteger
              ] or >
              ] or >
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sInteger)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sInteger)
            | *:
            >>
           ;BinaryOperator
           [ (sInteger)
           | *:
           }
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 1
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sAdd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sAdd)
            | sAdd:
            .tAdd
            oTypeStkPush(tpInteger)
            @CompareOperandAndResultTypes
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             oSymbolStkPop
             oSymbolStkSetKind(syExpression)
             >>
            ;CompareOperandAndResultTypes
            ] or >
            oSymbolStkSetKind(syExpression)
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 672
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 672
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sInteger)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sInteger)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sInteger)
            | *:
            >>
           ;BinaryOperator
           [ (sInteger)
           | *:
           }
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 1
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sAdd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sAdd)
            | sAdd:
            .tAdd
            oTypeStkPush(tpInteger)
            @CompareOperandAndResultTypes
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             oSymbolStkPop
             oSymbolStkSetKind(syExpression)
             >>
            ;CompareOperandAndResultTypes
            ] or >
            oSymbolStkSetKind(syExpression)
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       }
       [ (sRepeatEnd)
       | sRepeatEnd:
       ] or >
       .tRepeatControl
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 672
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 52
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sLE)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sLE)
          | sLE:
          .tLE
          @CompareRelationalOperandTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkPop
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           oTypeStkPop
           oTypeStkPush(tpBoolean)
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareRelationalOperandTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sNot)
         | *:
         }
         @Operand
          [ (sNot)
          | *:
          >>
         ;Operand
         @UnaryOperator
          [ (sNot)
          | sNot:
          .tNot
          oTypeStkPush(tpBoolean)
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       .tRepeatTest
       oFixPopTargetAddress
       % value emitted 240
       >>
      ;RepeatStmt
      ] or >
      }
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 604
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 0
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     @PublicDefinition
      [ (sPublic)
      | sPublic:
      oSymbolStkSetPublicFlag
      ] or >
      >>
     ;PublicDefinition
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      oCountIncrement
      ?sIdentifier (sIdentifier)
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      [ (sVar)
      | sVar:
      oSymbolStkSetKind(syVarParameter)
      ] or >
      @ProcedureParameterType
       @SimpleType
        ?sLike (sLike)
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syVarParameter)
       | *:
       oSymbolStkEnterTypeReference
       @AllocateVar
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        oAllocateAlignOnWord
        oSymbolStkEnterDataAddress
        oAllocateVarParameter
        ] or >
        >>
       ;AllocateVar
       oSymbolTblEnter
       >>
      ;ProcedureParameterType
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (one)
       | *:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 680
       oValuePop
       [ oSymbolStkChooseKind (syVarParameter)
       | syVarParameter:
       .tStoreAddress
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oCountDecrement
       }
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 604
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sIdentifier)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 604
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sInteger)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sInteger)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sInteger)
         | *:
         >>
        ;BinaryOperator
        [ (sInteger)
        | *:
        }
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sAdd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sAdd)
         | sAdd:
         .tAdd
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 680
        oValuePop
        .tFetchAddress
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sIdentifier)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 388
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sSubscript)
           | sSubscript:
           .tSubscriptBegin
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 604
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sExpnEnd)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           [ oTypeStkChooseKind (tpArray)
           | tpArray:
           oTypeStkPushComponent
           oTypeStkSwap
           oTypeStkPop
           ] or >
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tSubscriptInteger
           ] or >
           ] or >
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     @PublicDefinition
      [ (sPublic)
      | sPublic:
      oSymbolStkSetPublicFlag
      ] or >
      >>
     ;PublicDefinition
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      oCountIncrement
      ?sIdentifier (sIdentifier)
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      [ (sVar)
      | sVar:
      oSymbolStkSetKind(syVarParameter)
      ] or >
      @ProcedureParameterType
       @SimpleType
        ?sLike (sLike)
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syVarParameter)
       | *:
       oSymbolStkEnterTypeReference
       @AllocateVar
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        oAllocateAlignOnWord
        oSymbolStkEnterDataAddress
        oAllocateVarParameter
        ] or >
        >>
       ;AllocateVar
       oSymbolTblEnter
       >>
      ;ProcedureParameterType
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (one)
       | *:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 684
       oValuePop
       [ oSymbolStkChooseKind (syVarParameter)
       | syVarParameter:
       .tStoreAddress
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oCountDecrement
       }
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 684
        oValuePop
        .tFetchAddress
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 52
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sIdentifier)
         | *:
         >>
        ;BinaryOperator
        [ (sIdentifier)
        | *:
        }
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 604
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sSubtract)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sSubtract)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sSubtract)
         | sSubtract:
         .tSubtract
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sInteger)
        | *:
        }
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sAdd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sAdd)
         | sAdd:
         .tAdd
         oTypeStkPush(tpInteger)
         @CompareOperandAndResultTypes
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          oSymbolStkPop
          oSymbolStkSetKind(syExpression)
          >>
         ;CompareOperandAndResultTypes
         ] or >
         oSymbolStkSetKind(syExpression)
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblMergePublicScope
   >>
  ;PackageDefinition
  ] or >
  }
  [ (sPackage)
  | sPackage:
  @PackageDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syPackage)
   oTypeStkPush(tpNull)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @Block
    ?sBegin (sBegin)
    [ (sVar)
    | sVar:
    @VariableDeclarations
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sArray)
      | *:
      >>
     ;PublicDefinition
     [ (sArray)
     | *:
     @TypeBody
      [ (sArray)
      | sArray:
      oTypeStkPush(tpArray)
      @IndexType
       oValuePush(one)
       @ConstantValue
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        oValuePushInteger
        [ (sLike)
        | *:
        ] or >
        >>
       ;ConstantValue
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oTypeStkPop
       oTypeStkEnterBounds
       [ oTypeStkVerifyBounds (yes)
       | yes:
       ] or >
       oValuePop
       oValuePop
       >>
      ;IndexType
      [ (sLike)
      | *:
      @ComponentType
       @SimpleType
        ?sLike (sLike)
        [ (sStringLiteral)
        | sStringLiteral:
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        ] or >
        >>
       ;SimpleType
       [ oTypeStkChooseKind (tpChar)
       | *:
       @TypeTblEnterIfNew
        [ oTypeStkChooseTypeReference (yes)
        | *:
        >>
       ;TypeTblEnterIfNew
       oTypeStkEnterComponentReference
       oTypeStkPop
       >>
      ;ComponentType
      ] or >
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (no)
       | no:
       oTypeTblEnter
       ] or >
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpArray)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       .tArrayDescriptor
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       .tLiteralInteger
       oValuePushTypeStkLowerBound
       oEmitValue
       % value emitted 1
       oValuePop
       .tLiteralAddress
       oEmitDataAddress
       % value emitted 688
       .tStoreInteger
       oAllocateDescriptor
       .tLiteralInteger
       oValuePushTypeStkUpperBound
       oEmitValue
       % value emitted 13
       oValuePop
       .tLiteralAddress
       oEmitDataAddress
       % value emitted 692
       .tStoreInteger
       oAllocateDescriptor
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     @PublicDefinition
      [ (sPublic)
      | sPublic:
      oSymbolStkSetPublicFlag
      ] or >
      >>
     ;PublicDefinition
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      oCountIncrement
      ?sIdentifier (sIdentifier)
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      [ (sLike)
      | *:
      oSymbolStkSetKind(syVariable)
      @ProcedureParameterType
       @SimpleType
        ?sLike (sLike)
        [ (sInteger)
        | sInteger:
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       [ oTypeStkChooseKind (tpInteger)
       | *:
       ] or >
       oSymbolStkEnterTypeReference
       @AllocateVar
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oAllocateAlignOnWord
        oSymbolStkEnterDataAddress
        oAllocateVariable
        ] or >
        >>
       ;AllocateVar
       oSymbolTblEnter
       >>
      ;ProcedureParameterType
      }
      [ (sIdentifier)
      | *:
      oCountIncrement
      ?sIdentifier (sIdentifier)
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      [ (sVar)
      | sVar:
      oSymbolStkSetKind(syVarParameter)
      ] or >
      @ProcedureParameterType
       @SimpleType
        ?sLike (sLike)
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        oTypeStkPushSymbol
        ] or >
        oSymbolStkPop
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syVarParameter)
       | *:
       oSymbolStkEnterTypeReference
       @AllocateVar
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        oAllocateAlignOnWord
        oSymbolStkEnterDataAddress
        oAllocateVarParameter
        ] or >
        >>
       ;AllocateVar
       oSymbolTblEnter
       >>
      ;ProcedureParameterType
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (two)
       | *:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 4028
       oValuePop
       [ oSymbolStkChooseKind (syVarParameter)
       | syVarParameter:
       .tStoreAddress
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oCountDecrement
       }
       [ oCountChoose (one)
       | *:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 4024
       oValuePop
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @EmitStore
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tStoreInteger
        ] or >
        >>
       ;EmitStore
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oCountDecrement
       }
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sVar)
      | sVar:
      @VariableDeclarations
       ?sIdentifier (sIdentifier)
       oSymbolStkPushLocalIdentifier
       [ oSymbolStkChooseKind (syUndefined)
       | syUndefined:
       ] or >
       @PublicDefinition
        [ (sInitialValue)
        | *:
        >>
       ;PublicDefinition
       [ (sInitialValue)
       | sInitialValue:
       .tInitialValue
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tInitEnd
       @TypeTblEnterIfNew
        [ oTypeStkChooseTypeReference (yes)
        | *:
        >>
       ;TypeTblEnterIfNew
       oSymbolStkPop
       @EnterVariableAttributes
        [ oSymbolStkChooseKind (syUndefined)
        | *:
        oSymbolStkSetKind(syVariable)
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @AllocateVar
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oAllocateAlignOnWord
         oSymbolStkEnterDataAddress
         oAllocateVariable
         ] or >
         >>
        ;AllocateVar
        oSymbolStkEnterTypeReference
        oSymbolTblEnter
        >>
       ;EnterVariableAttributes
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 4032
       oValuePop
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @EmitStore
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tStoreInteger
        ] or >
        >>
       ;EmitStore
       ] or >
       oTypeStkPop
       oSymbolStkPop
       >>
      ;VariableDeclarations
      ] or >
      }
      [ (sWhileStmt)
      | sWhileStmt:
      @WhileStmt
       .tWhileBegin
       oFixPushTargetAddress
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 4032
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sIdentifier)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sIdentifier)
          | *:
          >>
         ;BinaryOperator
         [ (sIdentifier)
         | *:
         }
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 4024
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sLE)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sLE)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sLE)
          | sLE:
          .tLE
          @CompareRelationalOperandTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkPop
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           oTypeStkPop
           oTypeStkPush(tpBoolean)
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareRelationalOperandTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       .tWhileTest
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       oFixSwap
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sNullStmt)
         | sNullStmt:
         ] or >
         }
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtWrite)
          | rtWrite:
          .tWriteBegin
          @WriteProcedure
           [ (sStringLiteral)
           | *:
           @WriteStandardExpnList
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            oSymbolStkPop
            [ (sStringLiteral)
            | *:
            .tTrapBegin
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            .tVarParm
            .tParmEnd
            @Expression
             @Operand
              [ (sStringLiteral)
              | sStringLiteral:
              oSymbolStkPush(syExpression)
              @StringLiteral
               .tSkipString
               oFixPushForwardBranch
               oEmitNullAddress
               % value emitted -32767
               .tStringData
               oValuePushStringLength
               oEmitValue
               % value emitted 1
               oValuePop
               oValuePushCodeAddress
               oValueNegate
               oEmitString
               % value emitted 32
               % value emitted 0
               oFixPopForwardBranch
               oTypeStkPush(tpChar)
               oTypeStkLinkToStandardType(stdChar)
               >>
              ;StringLiteral
              .tLiteralAddress
              oEmitValue
              % value emitted -477
              .tFetchChar
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            .tParmEnd
            @WriteText
             [ (sIdentifier)
             | *:
             [ oTypeStkChooseKind (tpChar)
             | *:
             oValuePush(zero)
             .tLiteralInteger
             oEmitValue
             % value emitted 0
             oValuePop
             .tParmEnd
             [ oTypeStkChooseKind (tpChar)
             | tpChar:
             .tTrap
             oEmitTrapKind(trWriteString)
             % value emitted 109
             ] or >
             oSymbolStkPop
             oTypeStkPop
             >>
            ;WriteText
            }
            [ (sIdentifier)
            | *:
            .tTrapBegin
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            .tVarParm
            .tParmEnd
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 688
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sSubscript)
                | sSubscript:
                .tSubscriptBegin
                @Expression
                 @Operand
                  [ (sIdentifier)
                  | sIdentifier:
                  oSymbolStkPushIdentifier
                  [ oSymbolStkChooseKind (syVarParameter)
                  | *:
                  [ oSymbolStkChooseKind (syVarParameter)
                  | syVarParameter:
                  @Variable
                   [ oSymbolStkChooseKind (syVarParameter)
                   | syVarParameter:
                   .tLiteralAddress
                   oValuePushSymbol
                   oEmitValue
                   % value emitted 4028
                   oValuePop
                   .tFetchAddress
                   ] or >
                   oTypeStkPushSymbol
                   @VariableExtension
                    [ (sSubscript)
                    | sSubscript:
                    .tSubscriptBegin
                    @Expression
                     @Operand
                      [ (sIdentifier)
                      | sIdentifier:
                      oSymbolStkPushIdentifier
                      [ oSymbolStkChooseKind (syVariable)
                      | *:
                      [ oSymbolStkChooseKind (syVariable)
                      | syVariable:
                      @Variable
                       [ oSymbolStkChooseKind (syVariable)
                       | syVariable:
                       .tLiteralAddress
                       oValuePushSymbol
                       oEmitValue
                       % value emitted 4032
                       oValuePop
                       ] or >
                       oTypeStkPushSymbol
                       @VariableExtension
                        [ (sExpnEnd)
                        | *:
                        >>
                       ;VariableExtension
                       >>
                      ;Variable
                      @VariableOperand
                       [ oTypeStkChooseKind (tpInteger)
                       | tpInteger:
                       .tFetchInteger
                       ] or >
                       >>
                      ;VariableOperand
                      ] or >
                      ] or >
                      >>
                     ;Operand
                     @UnaryOperator
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;UnaryOperator
                     @BinaryOperator
                      [ (sExpnEnd)
                      | *:
                      >>
                     ;BinaryOperator
                     [ (sExpnEnd)
                     | sExpnEnd:
                     ] or >
                     >>
                    ;Expression
                    [ oTypeStkChooseKind (tpInteger)
                    | tpInteger:
                    ] or >
                    oSymbolStkPop
                    oTypeStkPop
                    [ oTypeStkChooseKind (tpArray)
                    | tpArray:
                    oTypeStkPushComponent
                    oTypeStkSwap
                    oTypeStkPop
                    ] or >
                    [ oTypeStkChooseKind (tpInteger)
                    | tpInteger:
                    .tSubscriptInteger
                    ] or >
                    ] or >
                    >>
                   ;VariableExtension
                   >>
                  ;Variable
                  @VariableOperand
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   .tFetchInteger
                   ] or >
                   >>
                  ;VariableOperand
                  ] or >
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                oSymbolStkPop
                oTypeStkPop
                [ oTypeStkChooseKind (tpArray)
                | tpArray:
                oTypeStkPushComponent
                oTypeStkSwap
                oTypeStkPop
                ] or >
                [ oTypeStkChooseKind (tpChar)
                | tpChar:
                .tSubscriptChar
                ] or >
                ] or >
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpChar)
               | tpChar:
               .tFetchChar
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            .tParmEnd
            @WriteText
             [ (sParmEnd)
             | *:
             [ oTypeStkChooseKind (tpChar)
             | *:
             oValuePush(zero)
             .tLiteralInteger
             oEmitValue
             % value emitted 0
             oValuePop
             .tParmEnd
             [ oTypeStkChooseKind (tpChar)
             | tpChar:
             .tTrap
             oEmitTrapKind(trWriteString)
             % value emitted 109
             ] or >
             oSymbolStkPop
             oTypeStkPop
             >>
            ;WriteText
            }
            [ (sParmEnd)
            | sParmEnd:
            ] or >
            oValuePop
            >>
           ;WriteStandardExpnList
           .tWriteEnd
           >>
          ;WriteProcedure
          ] or >
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 4032
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 4032
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sInteger)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sInteger)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sInteger)
            | *:
            >>
           ;BinaryOperator
           [ (sInteger)
           | *:
           }
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 1
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sAdd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sAdd)
            | sAdd:
            .tAdd
            oTypeStkPush(tpInteger)
            @CompareOperandAndResultTypes
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             oSymbolStkPop
             oSymbolStkSetKind(syExpression)
             >>
            ;CompareOperandAndResultTypes
            ] or >
            oSymbolStkSetKind(syExpression)
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       .tWhileEnd
       oFixPopTargetAddress
       % value emitted 456
       oFixPopForwardBranch
       >>
      ;WhileStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 1
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 65
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -546
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 2
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 50
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -565
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 3
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 51
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -584
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 4
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 52
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -603
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 5
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 53
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -622
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 6
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 54
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -641
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 7
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 55
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -660
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 8
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 56
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -679
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 9
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 57
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -698
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 10
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 2
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 49
        % value emitted 48
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -717
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 11
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 74
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -737
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 12
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 81
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -756
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 688
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sSubscript)
       | sSubscript:
       .tSubscriptBegin
       @Expression
        @Operand
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         oSymbolStkPush(syExpression)
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         .tLiteralInteger
         oEmitValue
         % value emitted 13
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       [ oTypeStkChooseKind (tpArray)
       | tpArray:
       oTypeStkPushComponent
       oTypeStkSwap
       oTypeStkPop
       ] or >
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tSubscriptChar
       ] or >
       ] or >
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpChar)
     | *:
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 1
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 75
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -775
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tAssignChar
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblMergePublicScope
   >>
  ;PackageDefinition
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   @PublicDefinition
    [ (sParmEnd)
    | *:
    >>
   ;PublicDefinition
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sIfStmt)
    | sIfStmt:
    @IfStmt
     .tIfBegin
     @BooleanControlExpression
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 110
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sStringLiteral)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpChar)
         | tpChar:
         .tFetchChar
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sStringLiteral)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sStringLiteral)
        | *:
        >>
       ;BinaryOperator
       [ (sStringLiteral)
       | *:
       }
       @Operand
        [ (sStringLiteral)
        | sStringLiteral:
        oSymbolStkPush(syExpression)
        @StringLiteral
         .tSkipString
         oFixPushForwardBranch
         oEmitNullAddress
         % value emitted -32767
         .tStringData
         oValuePushStringLength
         oEmitValue
         % value emitted 1
         oValuePop
         oValuePushCodeAddress
         oValueNegate
         oEmitString
         % value emitted 101
         % value emitted 0
         oFixPopForwardBranch
         oTypeStkPush(tpChar)
         oTypeStkLinkToStandardType(stdChar)
         >>
        ;StringLiteral
        .tLiteralAddress
        oEmitValue
        % value emitted -796
        .tFetchChar
        oValuePop
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sEq)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sEq)
        | sEq:
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tStringEQ
        ] or >
        @CompareEqualityOperandTypes
         [ oTypeStkChooseKind (tpChar)
         | tpChar:
         oTypeStkPop
         [ oTypeStkChooseKind (tpChar)
         | tpChar:
         ] or >
         ] or >
         oTypeStkPop
         oTypeStkPush(tpBoolean)
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareEqualityOperandTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;BooleanControlExpression
     ?sThen (sThen)
     .tIfThen
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWrite)
        | rtWrite:
        .tWriteBegin
        @WriteProcedure
         [ (sStringLiteral)
         | *:
         @WriteStandardExpnList
          oSymbolStkPushStandardVariable(stdOutput)
          [ oSymbolStkChooseKind (syVariable)
          | *:
          oValuePushSymbol
          oSymbolStkPop
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 10
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 69
             % value emitted 46
             % value emitted 79
             % value emitted 46
             % value emitted 32
             % value emitted 84
             % value emitted 104
             % value emitted 111
             % value emitted 114
             % value emitted 112
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -816
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sParmEnd)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          oValuePop
          >>
         ;WriteStandardExpnList
         .tWriteEnd
         >>
        ;WriteProcedure
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     [ (sElse)
     | sElse:
     .tIfMerge
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oFixSwap
     oFixPopForwardBranch
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sIfStmt)
       | sIfStmt:
       @IfStmt
        .tIfBegin
        @BooleanControlExpression
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 110
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sStringLiteral)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpChar)
            | tpChar:
            .tFetchChar
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sStringLiteral)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sStringLiteral)
           | *:
           >>
          ;BinaryOperator
          [ (sStringLiteral)
          | *:
          }
          @Operand
           [ (sStringLiteral)
           | sStringLiteral:
           oSymbolStkPush(syExpression)
           @StringLiteral
            .tSkipString
            oFixPushForwardBranch
            oEmitNullAddress
            % value emitted -32767
            .tStringData
            oValuePushStringLength
            oEmitValue
            % value emitted 1
            oValuePop
            oValuePushCodeAddress
            oValueNegate
            oEmitString
            % value emitted 106
            % value emitted 0
            oFixPopForwardBranch
            oTypeStkPush(tpChar)
            oTypeStkLinkToStandardType(stdChar)
            >>
           ;StringLiteral
           .tLiteralAddress
           oEmitValue
           % value emitted -849
           .tFetchChar
           oValuePop
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sEq)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sEq)
           | sEq:
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tStringEQ
           ] or >
           @CompareEqualityOperandTypes
            [ oTypeStkChooseKind (tpChar)
            | tpChar:
            oTypeStkPop
            [ oTypeStkChooseKind (tpChar)
            | tpChar:
            ] or >
            ] or >
            oTypeStkPop
            oTypeStkPush(tpBoolean)
            oSymbolStkPop
            oSymbolStkSetKind(syExpression)
            >>
           ;CompareEqualityOperandTypes
           ] or >
           oSymbolStkSetKind(syExpression)
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         >>
        ;BooleanControlExpression
        ?sThen (sThen)
        .tIfThen
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 3
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 74
                % value emitted 105
                % value emitted 109
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -869
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        [ (sElse)
        | sElse:
        .tIfMerge
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        oFixSwap
        oFixPopForwardBranch
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 5
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 80
                % value emitted 111
                % value emitted 111
                % value emitted 106
                % value emitted 97
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -897
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        ] or >
        .tIfEnd
        oFixPopForwardBranch
        >>
       ;IfStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     ] or >
     .tIfEnd
     oFixPopForwardBranch
     >>
    ;IfStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   @PublicDefinition
    [ (sIdentifier)
    | *:
    >>
   ;PublicDefinition
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sIdentifier)
    | *:
    oCountIncrement
    ?sIdentifier (sIdentifier)
    oSymbolStkPushLocalIdentifier
    [ oSymbolStkChooseKind (syUndefined)
    | syUndefined:
    ] or >
    [ (sVar)
    | sVar:
    oSymbolStkSetKind(syVarParameter)
    ] or >
    @ProcedureParameterType
     @SimpleType
      ?sLike (sLike)
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syConstant)
      | syConstant:
      oTypeStkPushSymbol
      ] or >
      oSymbolStkPop
      ] or >
      >>
     ;SimpleType
     [ oSymbolStkChooseKind (syVarParameter)
     | *:
     oSymbolStkEnterTypeReference
     @AllocateVar
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      oAllocateAlignOnWord
      oSymbolStkEnterDataAddress
      oAllocateVarParameter
      ] or >
      >>
     ;AllocateVar
     oSymbolTblEnter
     >>
    ;ProcedureParameterType
    }
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (one)
     | *:
     .tLiteralAddress
     oValuePushSymbol
     oEmitValue
     % value emitted 4036
     oValuePop
     [ oSymbolStkChooseKind (syVarParameter)
     | syVarParameter:
     .tStoreAddress
     ] or >
     oSymbolStkPop
     oTypeStkPop
     oCountDecrement
     }
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 88
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sInteger)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 0
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 92
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sInteger)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 0
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 96
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sInteger)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 0
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWriteln)
     | rtWriteln:
     .tTrapBegin
     @WritelnProcedure
      [ (sParmEnd)
      | sParmEnd:
      oSymbolStkPushStandardVariable(stdOutput)
      [ oSymbolStkChooseKind (syVariable)
      | *:
      oValuePushSymbol
      .tLiteralAddress
      oEmitValue
      % value emitted 4
      oValuePop
      oSymbolStkPop
      .tVarParm
      .tParmEnd
      ] or >
      >>
     ;WritelnProcedure
     .tTrap
     oEmitTrapKind(trWriteln)
     % value emitted 6
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWriteln)
     | rtWriteln:
     .tTrapBegin
     @WritelnProcedure
      [ (sParmEnd)
      | sParmEnd:
      oSymbolStkPushStandardVariable(stdOutput)
      [ oSymbolStkChooseKind (syVariable)
      | *:
      oValuePushSymbol
      .tLiteralAddress
      oEmitValue
      % value emitted 4
      oValuePop
      oSymbolStkPop
      .tVarParm
      .tParmEnd
      ] or >
      >>
     ;WritelnProcedure
     .tTrap
     oEmitTrapKind(trWriteln)
     % value emitted 6
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWrite)
     | rtWrite:
     .tWriteBegin
     @WriteProcedure
      [ (sStringLiteral)
      | *:
      @WriteStandardExpnList
       oSymbolStkPushStandardVariable(stdOutput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       oSymbolStkPop
       [ (sStringLiteral)
       | *:
       .tTrapBegin
       .tLiteralAddress
       oEmitValue
       % value emitted 4
       .tVarParm
       .tParmEnd
       @Expression
        @Operand
         [ (sStringLiteral)
         | sStringLiteral:
         oSymbolStkPush(syExpression)
         @StringLiteral
          .tSkipString
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          .tStringData
          oValuePushStringLength
          oEmitValue
          % value emitted 12
          oValuePop
          oValuePushCodeAddress
          oValueNegate
          oEmitString
          % value emitted 78
          % value emitted 101
          % value emitted 119
          % value emitted 32
          % value emitted 115
          % value emitted 104
          % value emitted 117
          % value emitted 102
          % value emitted 102
          % value emitted 108
          % value emitted 101
          % value emitted 46
          % value emitted 0
          oFixPopForwardBranch
          oTypeStkPush(tpChar)
          oTypeStkLinkToStandardType(stdChar)
          >>
         ;StringLiteral
         .tLiteralAddress
         oEmitValue
         % value emitted -980
         .tFetchChar
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tParmEnd
       @WriteText
        [ (sParmEnd)
        | *:
        [ oTypeStkChooseKind (tpChar)
        | *:
        oValuePush(zero)
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        oValuePop
        .tParmEnd
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tTrap
        oEmitTrapKind(trWriteString)
        % value emitted 109
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;WriteText
       }
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       oValuePop
       >>
      ;WriteStandardExpnList
      .tWriteEnd
      >>
     ;WriteProcedure
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWriteln)
     | rtWriteln:
     .tTrapBegin
     @WritelnProcedure
      [ (sParmEnd)
      | sParmEnd:
      oSymbolStkPushStandardVariable(stdOutput)
      [ oSymbolStkChooseKind (syVariable)
      | *:
      oValuePushSymbol
      .tLiteralAddress
      oEmitValue
      % value emitted 4
      oValuePop
      oSymbolStkPop
      .tVarParm
      .tParmEnd
      ] or >
      >>
     ;WritelnProcedure
     .tTrap
     oEmitTrapKind(trWriteln)
     % value emitted 6
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWriteln)
     | rtWriteln:
     .tTrapBegin
     @WritelnProcedure
      [ (sParmEnd)
      | sParmEnd:
      oSymbolStkPushStandardVariable(stdOutput)
      [ oSymbolStkChooseKind (syVariable)
      | *:
      oValuePushSymbol
      .tLiteralAddress
      oEmitValue
      % value emitted 4
      oValuePop
      oSymbolStkPop
      .tVarParm
      .tParmEnd
      ] or >
      >>
     ;WritelnProcedure
     .tTrap
     oEmitTrapKind(trWriteln)
     % value emitted 6
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWrite)
     | rtWrite:
     .tWriteBegin
     @WriteProcedure
      [ (sStringLiteral)
      | *:
      @WriteStandardExpnList
       oSymbolStkPushStandardVariable(stdOutput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       oSymbolStkPop
       [ (sStringLiteral)
       | *:
       .tTrapBegin
       .tLiteralAddress
       oEmitValue
       % value emitted 4
       .tVarParm
       .tParmEnd
       @Expression
        @Operand
         [ (sStringLiteral)
         | sStringLiteral:
         oSymbolStkPush(syExpression)
         @StringLiteral
          .tSkipString
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          .tStringData
          oValuePushStringLength
          oEmitValue
          % value emitted 70
          oValuePop
          oValuePushCodeAddress
          oValueNegate
          oEmitString
          % value emitted 67
          % value emitted 104
          % value emitted 111
          % value emitted 111
          % value emitted 115
          % value emitted 101
          % value emitted 32
          % value emitted 97
          % value emitted 32
          % value emitted 112
          % value emitted 108
          % value emitted 97
          % value emitted 121
          % value emitted 101
          % value emitted 114
          % value emitted 32
          % value emitted 40
          % value emitted 101
          % value emitted 32
          % value emitted 102
          % value emitted 111
          % value emitted 114
          % value emitted 32
          % value emitted 69
          % value emitted 46
          % value emitted 79
          % value emitted 46
          % value emitted 84
          % value emitted 104
          % value emitted 111
          % value emitted 114
          % value emitted 112
          % value emitted 44
          % value emitted 32
          % value emitted 106
          % value emitted 32
          % value emitted 102
          % value emitted 111
          % value emitted 114
          % value emitted 32
          % value emitted 74
          % value emitted 105
          % value emitted 109
          % value emitted 44
          % value emitted 32
          % value emitted 112
          % value emitted 32
          % value emitted 102
          % value emitted 111
          % value emitted 114
          % value emitted 32
          % value emitted 80
          % value emitted 111
          % value emitted 111
          % value emitted 106
          % value emitted 97
          % value emitted 44
          % value emitted 32
          % value emitted 113
          % value emitted 32
          % value emitted 116
          % value emitted 111
          % value emitted 32
          % value emitted 113
          % value emitted 117
          % value emitted 105
          % value emitted 116
          % value emitted 41
          % value emitted 58
          % value emitted 32
          % value emitted 0
          oFixPopForwardBranch
          oTypeStkPush(tpChar)
          oTypeStkLinkToStandardType(stdChar)
          >>
         ;StringLiteral
         .tLiteralAddress
         oEmitValue
         % value emitted -1031
         .tFetchChar
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tParmEnd
       @WriteText
        [ (sParmEnd)
        | *:
        [ oTypeStkChooseKind (tpChar)
        | *:
        oValuePush(zero)
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        oValuePop
        .tParmEnd
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tTrap
        oEmitTrapKind(trWriteString)
        % value emitted 109
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;WriteText
       }
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       oValuePop
       >>
      ;WriteStandardExpnList
      .tWriteEnd
      >>
     ;WriteProcedure
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtRead)
     | rtRead:
     .tReadBegin
     @ReadProcedure
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      oTypeStkPushSymbol
      [ oTypeStkChooseKind (tpChar)
      | *:
      oSymbolStkPushStandardVariable(stdInput)
      [ oSymbolStkChooseKind (syVariable)
      | *:
      oValuePushSymbol
      oSymbolStkPop
      oTypeStkPop
      .tTrapBegin
      .tLiteralAddress
      oEmitValue
      % value emitted 0
      .tVarParm
      .tParmEnd
      @Variable
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 110
       oValuePop
       ] or >
       oTypeStkPushSymbol
       @VariableExtension
        [ (sExpnEnd)
        | *:
        >>
       ;VariableExtension
       >>
      ;Variable
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      .tVarParm
      .tParmEnd
      @ReadText
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       .tTrap
       oEmitTrapKind(trReadString)
       % value emitted 108
       ] or >
       oSymbolStkPop
       oTypeStkPop
       >>
      ;ReadText
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      oValuePop
      ] or >
      .tReadEnd
      >>
     ;ReadProcedure
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtReadln)
     | rtReadln:
     .tTrapBegin
     @ReadlnProcedure
      [ (sParmEnd)
      | sParmEnd:
      oSymbolStkPushStandardVariable(stdInput)
      [ oSymbolStkChooseKind (syVariable)
      | *:
      oValuePushSymbol
      .tLiteralAddress
      oEmitValue
      % value emitted 0
      oValuePop
      oSymbolStkPop
      .tVarParm
      .tParmEnd
      ] or >
      >>
     ;ReadlnProcedure
     .tTrap
     oEmitTrapKind(trReadln)
     % value emitted 4
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sIfStmt)
    | sIfStmt:
    @IfStmt
     .tIfBegin
     @BooleanControlExpression
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 110
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sStringLiteral)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpChar)
         | tpChar:
         .tFetchChar
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sStringLiteral)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sStringLiteral)
        | *:
        >>
       ;BinaryOperator
       [ (sStringLiteral)
       | *:
       }
       @Operand
        [ (sStringLiteral)
        | sStringLiteral:
        oSymbolStkPush(syExpression)
        @StringLiteral
         .tSkipString
         oFixPushForwardBranch
         oEmitNullAddress
         % value emitted -32767
         .tStringData
         oValuePushStringLength
         oEmitValue
         % value emitted 1
         oValuePop
         oValuePushCodeAddress
         oValueNegate
         oEmitString
         % value emitted 113
         % value emitted 0
         oFixPopForwardBranch
         oTypeStkPush(tpChar)
         oTypeStkLinkToStandardType(stdChar)
         >>
        ;StringLiteral
        .tLiteralAddress
        oEmitValue
        % value emitted -1144
        .tFetchChar
        oValuePop
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sEq)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sEq)
        | sEq:
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tStringEQ
        ] or >
        @CompareEqualityOperandTypes
         [ oTypeStkChooseKind (tpChar)
         | tpChar:
         oTypeStkPop
         [ oTypeStkChooseKind (tpChar)
         | tpChar:
         ] or >
         ] or >
         oTypeStkPop
         oTypeStkPush(tpBoolean)
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareEqualityOperandTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;BooleanControlExpression
     ?sThen (sThen)
     .tIfThen
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVarParameter)
         | syVarParameter:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4036
         oValuePop
         .tFetchAddress
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpBoolean)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syConstant)
          | *:
          [ oSymbolStkChooseKind (syConstant)
          | syConstant:
          @ConstantOperand
           oTypeStkPushSymbol
           oValuePushSymbol
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tLiteralBoolean
           oEmitValue
           % value emitted 0
           ] or >
           oValuePop
           >>
          ;ConstantOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         .tAssignBoolean
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     [ (sElse)
     | sElse:
     .tIfMerge
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oFixSwap
     oFixPopForwardBranch
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sIfStmt)
       | sIfStmt:
       @IfStmt
        .tIfBegin
        @BooleanControlExpression
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 110
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sStringLiteral)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpChar)
            | tpChar:
            .tFetchChar
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sStringLiteral)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sStringLiteral)
           | *:
           >>
          ;BinaryOperator
          [ (sStringLiteral)
          | *:
          }
          @Operand
           [ (sStringLiteral)
           | sStringLiteral:
           oSymbolStkPush(syExpression)
           @StringLiteral
            .tSkipString
            oFixPushForwardBranch
            oEmitNullAddress
            % value emitted -32767
            .tStringData
            oValuePushStringLength
            oEmitValue
            % value emitted 1
            oValuePop
            oValuePushCodeAddress
            oValueNegate
            oEmitString
            % value emitted 101
            % value emitted 0
            oFixPopForwardBranch
            oTypeStkPush(tpChar)
            oTypeStkLinkToStandardType(stdChar)
            >>
           ;StringLiteral
           .tLiteralAddress
           oEmitValue
           % value emitted -1173
           .tFetchChar
           oValuePop
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sNE)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sNE)
           | sNE:
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tStringEQ
           .tNot
           ] or >
           @CompareEqualityOperandTypes
            [ oTypeStkChooseKind (tpChar)
            | tpChar:
            oTypeStkPop
            [ oTypeStkChooseKind (tpChar)
            | tpChar:
            ] or >
            ] or >
            oTypeStkPop
            oTypeStkPush(tpBoolean)
            oSymbolStkPop
            oSymbolStkSetKind(syExpression)
            >>
           ;CompareEqualityOperandTypes
           ] or >
           oSymbolStkSetKind(syExpression)
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         >>
        ;BooleanControlExpression
        ?sThen (sThen)
        .tIfThen
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 25
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 87
                % value emitted 104
                % value emitted 97
                % value emitted 116
                % value emitted 32
                % value emitted 100
                % value emitted 111
                % value emitted 101
                % value emitted 115
                % value emitted 32
                % value emitted 115
                % value emitted 47
                % value emitted 104
                % value emitted 101
                % value emitted 32
                % value emitted 115
                % value emitted 116
                % value emitted 97
                % value emitted 110
                % value emitted 100
                % value emitted 32
                % value emitted 111
                % value emitted 110
                % value emitted 63
                % value emitted 32
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -1194
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtRead)
           | rtRead:
           .tReadBegin
           @ReadProcedure
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            oTypeStkPushSymbol
            [ oTypeStkChooseKind (tpInteger)
            | *:
            oSymbolStkPushStandardVariable(stdInput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            oSymbolStkPop
            oTypeStkPop
            .tTrapBegin
            .tLiteralAddress
            oEmitValue
            % value emitted 0
            .tVarParm
            .tParmEnd
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 368
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sExpnEnd)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            .tVarParm
            .tParmEnd
            @ReadText
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tTrap
             oEmitTrapKind(trReadInteger)
             % value emitted 10
             ] or >
             oSymbolStkPop
             oTypeStkPop
             >>
            ;ReadText
            [ (sParmEnd)
            | sParmEnd:
            ] or >
            oValuePop
            ] or >
            .tReadEnd
            >>
           ;ReadProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtReadln)
           | rtReadln:
           .tTrapBegin
           @ReadlnProcedure
            [ (sParmEnd)
            | sParmEnd:
            oSymbolStkPushStandardVariable(stdInput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            .tLiteralAddress
            oEmitValue
            % value emitted 0
            oValuePop
            oSymbolStkPop
            .tVarParm
            .tParmEnd
            ] or >
            >>
           ;ReadlnProcedure
           .tTrap
           oEmitTrapKind(trReadln)
           % value emitted 4
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sWhileStmt)
          | sWhileStmt:
          @WhileStmt
           .tWhileBegin
           oFixPushTargetAddress
           @BooleanControlExpression
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 368
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sInteger)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sInteger)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sInteger)
              | *:
              >>
             ;BinaryOperator
             [ (sInteger)
             | *:
             }
             @Operand
              [ (sInteger)
              | sInteger:
              oValuePushInteger
              oSymbolStkPush(syExpression)
              oTypeStkPush(tpInteger)
              oTypeStkLinkToStandardType(stdInteger)
              .tLiteralInteger
              oEmitValue
              % value emitted 1
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sLT)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sLT)
              | sLT:
              .tLT
              @CompareRelationalOperandTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkPop
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               oTypeStkPop
               oTypeStkPush(tpBoolean)
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareRelationalOperandTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sInfixOr)
             | *:
             }
             @Operand
              [ (sInfixOr)
              | *:
              >>
             ;Operand
             @UnaryOperator
              [ (sInfixOr)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sInfixOr)
              | sInfixOr:
              .tInfixOr
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sIdentifier)
             | *:
             }
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 368
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sInteger)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sInteger)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sInteger)
              | *:
              >>
             ;BinaryOperator
             [ (sInteger)
             | *:
             }
             @Operand
              [ (sInteger)
              | sInteger:
              oValuePushInteger
              oSymbolStkPush(syExpression)
              oTypeStkPush(tpInteger)
              oTypeStkLinkToStandardType(stdInteger)
              .tLiteralInteger
              oEmitValue
              % value emitted 20
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sGT)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sGT)
              | sGT:
              .tGT
              @CompareRelationalOperandTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkPop
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               oTypeStkPop
               oTypeStkPush(tpBoolean)
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareRelationalOperandTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sOr)
             | *:
             }
             @Operand
              [ (sOr)
              | *:
              >>
             ;Operand
             @UnaryOperator
              [ (sOr)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sOr)
              | sOr:
              .tOr
              oTypeStkPush(tpBoolean)
              @CompareOperandAndResultTypes
               @CompareAndSwapTypes
                [ oTypeStkChooseKind (tpBoolean)
                | tpBoolean:
                oTypeStkSwap
                [ oTypeStkChooseKind (tpBoolean)
                | tpBoolean:
                ] or >
                ] or >
                >>
               ;CompareAndSwapTypes
               oTypeStkPop
               @CompareAndSwapTypes
                [ oTypeStkChooseKind (tpBoolean)
                | tpBoolean:
                oTypeStkSwap
                [ oTypeStkChooseKind (tpBoolean)
                | tpBoolean:
                ] or >
                ] or >
                >>
               ;CompareAndSwapTypes
               oTypeStkPop
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareOperandAndResultTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            >>
           ;BooleanControlExpression
           .tWhileTest
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           oFixSwap
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sNullStmt)
             | sNullStmt:
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWrite)
              | rtWrite:
              .tWriteBegin
              @WriteProcedure
               [ (sStringLiteral)
               | *:
               @WriteStandardExpnList
                oSymbolStkPushStandardVariable(stdOutput)
                [ oSymbolStkChooseKind (syVariable)
                | *:
                oValuePushSymbol
                oSymbolStkPop
                [ (sStringLiteral)
                | *:
                .tTrapBegin
                .tLiteralAddress
                oEmitValue
                % value emitted 4
                .tVarParm
                .tParmEnd
                @Expression
                 @Operand
                  [ (sStringLiteral)
                  | sStringLiteral:
                  oSymbolStkPush(syExpression)
                  @StringLiteral
                   .tSkipString
                   oFixPushForwardBranch
                   oEmitNullAddress
                   % value emitted -32767
                   .tStringData
                   oValuePushStringLength
                   oEmitValue
                   % value emitted 9
                   oValuePop
                   oValuePushCodeAddress
                   oValueNegate
                   oEmitString
                   % value emitted 40
                   % value emitted 49
                   % value emitted 46
                   % value emitted 46
                   % value emitted 50
                   % value emitted 48
                   % value emitted 41
                   % value emitted 58
                   % value emitted 32
                   % value emitted 0
                   oFixPopForwardBranch
                   oTypeStkPush(tpChar)
                   oTypeStkLinkToStandardType(stdChar)
                   >>
                  ;StringLiteral
                  .tLiteralAddress
                  oEmitValue
                  % value emitted -1283
                  .tFetchChar
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                .tParmEnd
                @WriteText
                 [ (sParmEnd)
                 | *:
                 [ oTypeStkChooseKind (tpChar)
                 | *:
                 oValuePush(zero)
                 .tLiteralInteger
                 oEmitValue
                 % value emitted 0
                 oValuePop
                 .tParmEnd
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tTrap
                 oEmitTrapKind(trWriteString)
                 % value emitted 109
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 >>
                ;WriteText
                }
                [ (sParmEnd)
                | sParmEnd:
                ] or >
                oValuePop
                >>
               ;WriteStandardExpnList
               .tWriteEnd
               >>
              ;WriteProcedure
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtRead)
              | rtRead:
              .tReadBegin
              @ReadProcedure
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               oTypeStkPushSymbol
               [ oTypeStkChooseKind (tpInteger)
               | *:
               oSymbolStkPushStandardVariable(stdInput)
               [ oSymbolStkChooseKind (syVariable)
               | *:
               oValuePushSymbol
               oSymbolStkPop
               oTypeStkPop
               .tTrapBegin
               .tLiteralAddress
               oEmitValue
               % value emitted 0
               .tVarParm
               .tParmEnd
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 368
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sExpnEnd)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               .tVarParm
               .tParmEnd
               @ReadText
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tTrap
                oEmitTrapKind(trReadInteger)
                % value emitted 10
                ] or >
                oSymbolStkPop
                oTypeStkPop
                >>
               ;ReadText
               [ (sParmEnd)
               | sParmEnd:
               ] or >
               oValuePop
               ] or >
               .tReadEnd
               >>
              ;ReadProcedure
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtReadln)
              | rtReadln:
              .tTrapBegin
              @ReadlnProcedure
               [ (sParmEnd)
               | sParmEnd:
               oSymbolStkPushStandardVariable(stdInput)
               [ oSymbolStkChooseKind (syVariable)
               | *:
               oValuePushSymbol
               .tLiteralAddress
               oEmitValue
               % value emitted 0
               oValuePop
               oSymbolStkPop
               .tVarParm
               .tParmEnd
               ] or >
               >>
              ;ReadlnProcedure
              .tTrap
              oEmitTrapKind(trReadln)
              % value emitted 4
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           .tWhileEnd
           oFixPopTargetAddress
           % value emitted 1255
           oFixPopForwardBranch
           >>
          ;WhileStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        [ (sIfStmt)
        | *:
        .tIfEnd
        oFixPopForwardBranch
        >>
       ;IfStmt
       ] or >
       }
       [ (sIfStmt)
       | sIfStmt:
       @IfStmt
        .tIfBegin
        @BooleanControlExpression
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 110
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sStringLiteral)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpChar)
            | tpChar:
            .tFetchChar
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sStringLiteral)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sStringLiteral)
           | *:
           >>
          ;BinaryOperator
          [ (sStringLiteral)
          | *:
          }
          @Operand
           [ (sStringLiteral)
           | sStringLiteral:
           oSymbolStkPush(syExpression)
           @StringLiteral
            .tSkipString
            oFixPushForwardBranch
            oEmitNullAddress
            % value emitted -32767
            .tStringData
            oValuePushStringLength
            oEmitValue
            % value emitted 1
            oValuePop
            oValuePushCodeAddress
            oValueNegate
            oEmitString
            % value emitted 101
            % value emitted 0
            oFixPopForwardBranch
            oTypeStkPush(tpChar)
            oTypeStkLinkToStandardType(stdChar)
            >>
           ;StringLiteral
           .tLiteralAddress
           oEmitValue
           % value emitted -1342
           .tFetchChar
           oValuePop
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sEq)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sEq)
           | sEq:
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tStringEQ
           ] or >
           @CompareEqualityOperandTypes
            [ oTypeStkChooseKind (tpChar)
            | tpChar:
            oTypeStkPop
            [ oTypeStkChooseKind (tpChar)
            | tpChar:
            ] or >
            ] or >
            oTypeStkPop
            oTypeStkPush(tpBoolean)
            oSymbolStkPop
            oSymbolStkSetKind(syExpression)
            >>
           ;CompareEqualityOperandTypes
           ] or >
           oSymbolStkSetKind(syExpression)
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         >>
        ;BooleanControlExpression
        ?sThen (sThen)
        .tIfThen
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWriteln)
           | rtWriteln:
           .tTrapBegin
           @WritelnProcedure
            [ (sParmEnd)
            | sParmEnd:
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            oValuePop
            oSymbolStkPop
            .tVarParm
            .tParmEnd
            ] or >
            >>
           ;WritelnProcedure
           .tTrap
           oEmitTrapKind(trWriteln)
           % value emitted 6
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 26
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 69
                % value emitted 46
                % value emitted 79
                % value emitted 46
                % value emitted 84
                % value emitted 104
                % value emitted 111
                % value emitted 114
                % value emitted 112
                % value emitted 32
                % value emitted 112
                % value emitted 108
                % value emitted 97
                % value emitted 121
                % value emitted 115
                % value emitted 32
                % value emitted 116
                % value emitted 104
                % value emitted 105
                % value emitted 115
                % value emitted 32
                % value emitted 116
                % value emitted 105
                % value emitted 109
                % value emitted 101
                % value emitted 46
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -1371
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWriteln)
           | rtWriteln:
           .tTrapBegin
           @WritelnProcedure
            [ (sParmEnd)
            | sParmEnd:
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            oValuePop
            oSymbolStkPop
            .tVarParm
            .tParmEnd
            ] or >
            >>
           ;WritelnProcedure
           .tTrap
           oEmitTrapKind(trWriteln)
           % value emitted 6
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        [ (sElse)
        | sElse:
        .tIfMerge
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        oFixSwap
        oFixPopForwardBranch
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWriteln)
           | rtWriteln:
           .tTrapBegin
           @WritelnProcedure
            [ (sParmEnd)
            | sParmEnd:
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            oValuePop
            oSymbolStkPop
            .tVarParm
            .tParmEnd
            ] or >
            >>
           ;WritelnProcedure
           .tTrap
           oEmitTrapKind(trWriteln)
           % value emitted 6
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 15
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 78
                % value emitted 101
                % value emitted 120
                % value emitted 116
                % value emitted 32
                % value emitted 112
                % value emitted 108
                % value emitted 97
                % value emitted 121
                % value emitted 101
                % value emitted 114
                % value emitted 32
                % value emitted 105
                % value emitted 115
                % value emitted 32
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -1438
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtNull)
           | *:
           .tCallBegin
           oTypeStkPushSymbol
           [ oTypeStkChooseRecursionFlag (no)
           | *:
           @ActualParameters
            oCountPush(zero)
            [ (sParmEnd)
            | sParmEnd:
            ] or >
            [ oTypeStkCompareParameterCount (yes)
            | yes:
            ] or >
            oCountPop
            >>
           ;ActualParameters
           .tCallEnd
           oValuePushSymbol
           oEmitValue
           % value emitted 785
           oValuePop
           oTypeStkPop
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 1
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 46
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -1481
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWriteln)
           | rtWriteln:
           .tTrapBegin
           @WritelnProcedure
            [ (sParmEnd)
            | sParmEnd:
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            oValuePop
            oSymbolStkPop
            .tVarParm
            .tParmEnd
            ] or >
            >>
           ;WritelnProcedure
           .tTrap
           oEmitTrapKind(trWriteln)
           % value emitted 6
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 14
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 83
                % value emitted 47
                % value emitted 104
                % value emitted 101
                % value emitted 32
                % value emitted 115
                % value emitted 116
                % value emitted 111
                % value emitted 112
                % value emitted 115
                % value emitted 32
                % value emitted 97
                % value emitted 116
                % value emitted 32
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -1512
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sIdentifier)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sIdentifier)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syVariable)
               | *:
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 368
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sExpnEnd)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               @VariableOperand
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tFetchInteger
                ] or >
                >>
               ;VariableOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sFieldWidth)
              | sFieldWidth:
              @Expression
               @Operand
                [ (sInteger)
                | sInteger:
                oValuePushInteger
                oSymbolStkPush(syExpression)
                oTypeStkPush(tpInteger)
                oTypeStkLinkToStandardType(stdInteger)
                .tLiteralInteger
                oEmitValue
                % value emitted 1
                oValuePop
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              oSymbolStkPop
              oTypeStkPop
              ] or >
              .tParmEnd
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tTrap
              oEmitTrapKind(trWriteInteger)
              % value emitted 8
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 1
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 46
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -1559
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWriteln)
           | rtWriteln:
           .tTrapBegin
           @WritelnProcedure
            [ (sParmEnd)
            | sParmEnd:
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            oValuePop
            oSymbolStkPop
            .tVarParm
            .tParmEnd
            ] or >
            >>
           ;WritelnProcedure
           .tTrap
           oEmitTrapKind(trWriteln)
           % value emitted 6
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sIfStmt)
          | sIfStmt:
          @IfStmt
           .tIfBegin
           @BooleanControlExpression
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 368
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sInteger)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sInteger)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sInteger)
              | *:
              >>
             ;BinaryOperator
             [ (sInteger)
             | *:
             }
             @Operand
              [ (sInteger)
              | sInteger:
              oValuePushInteger
              oSymbolStkPush(syExpression)
              oTypeStkPush(tpInteger)
              oTypeStkLinkToStandardType(stdInteger)
              .tLiteralInteger
              oEmitValue
              % value emitted 15
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sLT)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sLT)
              | sLT:
              .tLT
              @CompareRelationalOperandTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkPop
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               oTypeStkPop
               oTypeStkPush(tpBoolean)
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareRelationalOperandTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            >>
           ;BooleanControlExpression
           ?sThen (sThen)
           .tIfThen
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWrite)
              | rtWrite:
              .tWriteBegin
              @WriteProcedure
               [ (sStringLiteral)
               | *:
               @WriteStandardExpnList
                oSymbolStkPushStandardVariable(stdOutput)
                [ oSymbolStkChooseKind (syVariable)
                | *:
                oValuePushSymbol
                oSymbolStkPop
                [ (sStringLiteral)
                | *:
                .tTrapBegin
                .tLiteralAddress
                oEmitValue
                % value emitted 4
                .tVarParm
                .tParmEnd
                @Expression
                 @Operand
                  [ (sStringLiteral)
                  | sStringLiteral:
                  oSymbolStkPush(syExpression)
                  @StringLiteral
                   .tSkipString
                   oFixPushForwardBranch
                   oEmitNullAddress
                   % value emitted -32767
                   .tStringData
                   oValuePushStringLength
                   oEmitValue
                   % value emitted 19
                   oValuePop
                   oValuePushCodeAddress
                   oValueNegate
                   oEmitString
                   % value emitted 40
                   % value emitted 87
                   % value emitted 104
                   % value emitted 97
                   % value emitted 116
                   % value emitted 32
                   % value emitted 97
                   % value emitted 32
                   % value emitted 104
                   % value emitted 97
                   % value emitted 109
                   % value emitted 98
                   % value emitted 117
                   % value emitted 114
                   % value emitted 103
                   % value emitted 101
                   % value emitted 114
                   % value emitted 33
                   % value emitted 41
                   % value emitted 0
                   oFixPopForwardBranch
                   oTypeStkPush(tpChar)
                   oTypeStkLinkToStandardType(stdChar)
                   >>
                  ;StringLiteral
                  .tLiteralAddress
                  oEmitValue
                  % value emitted -1601
                  .tFetchChar
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                .tParmEnd
                @WriteText
                 [ (sParmEnd)
                 | *:
                 [ oTypeStkChooseKind (tpChar)
                 | *:
                 oValuePush(zero)
                 .tLiteralInteger
                 oEmitValue
                 % value emitted 0
                 oValuePop
                 .tParmEnd
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tTrap
                 oEmitTrapKind(trWriteString)
                 % value emitted 109
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 >>
                ;WriteText
                }
                [ (sParmEnd)
                | sParmEnd:
                ] or >
                oValuePop
                >>
               ;WriteStandardExpnList
               .tWriteEnd
               >>
              ;WriteProcedure
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWriteln)
              | rtWriteln:
              .tTrapBegin
              @WritelnProcedure
               [ (sParmEnd)
               | sParmEnd:
               oSymbolStkPushStandardVariable(stdOutput)
               [ oSymbolStkChooseKind (syVariable)
               | *:
               oValuePushSymbol
               .tLiteralAddress
               oEmitValue
               % value emitted 4
               oValuePop
               oSymbolStkPop
               .tVarParm
               .tParmEnd
               ] or >
               >>
              ;WritelnProcedure
              .tTrap
              oEmitTrapKind(trWriteln)
              % value emitted 6
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           [ (sElse)
           | sElse:
           .tIfMerge
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           oFixSwap
           oFixPopForwardBranch
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWrite)
              | rtWrite:
              .tWriteBegin
              @WriteProcedure
               [ (sStringLiteral)
               | *:
               @WriteStandardExpnList
                oSymbolStkPushStandardVariable(stdOutput)
                [ oSymbolStkChooseKind (syVariable)
                | *:
                oValuePushSymbol
                oSymbolStkPop
                [ (sStringLiteral)
                | *:
                .tTrapBegin
                .tLiteralAddress
                oEmitValue
                % value emitted 4
                .tVarParm
                .tParmEnd
                @Expression
                 @Operand
                  [ (sStringLiteral)
                  | sStringLiteral:
                  oSymbolStkPush(syExpression)
                  @StringLiteral
                   .tSkipString
                   oFixPushForwardBranch
                   oEmitNullAddress
                   % value emitted -32767
                   .tStringData
                   oValuePushStringLength
                   oEmitValue
                   % value emitted 11
                   oValuePop
                   oValuePushCodeAddress
                   oValueNegate
                   oEmitString
                   % value emitted 71
                   % value emitted 111
                   % value emitted 111
                   % value emitted 100
                   % value emitted 32
                   % value emitted 108
                   % value emitted 117
                   % value emitted 99
                   % value emitted 107
                   % value emitted 44
                   % value emitted 32
                   % value emitted 0
                   oFixPopForwardBranch
                   oTypeStkPush(tpChar)
                   oTypeStkLinkToStandardType(stdChar)
                   >>
                  ;StringLiteral
                  .tLiteralAddress
                  oEmitValue
                  % value emitted -1652
                  .tFetchChar
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                .tParmEnd
                @WriteText
                 [ (sParmEnd)
                 | *:
                 [ oTypeStkChooseKind (tpChar)
                 | *:
                 oValuePush(zero)
                 .tLiteralInteger
                 oEmitValue
                 % value emitted 0
                 oValuePop
                 .tParmEnd
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tTrap
                 oEmitTrapKind(trWriteString)
                 % value emitted 109
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 >>
                ;WriteText
                }
                [ (sParmEnd)
                | sParmEnd:
                ] or >
                oValuePop
                >>
               ;WriteStandardExpnList
               .tWriteEnd
               >>
              ;WriteProcedure
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtNull)
              | *:
              .tCallBegin
              oTypeStkPushSymbol
              [ oTypeStkChooseRecursionFlag (no)
              | *:
              @ActualParameters
               oCountPush(zero)
               [ (sParmEnd)
               | sParmEnd:
               ] or >
               [ oTypeStkCompareParameterCount (yes)
               | yes:
               ] or >
               oCountPop
               >>
              ;ActualParameters
              .tCallEnd
              oValuePushSymbol
              oEmitValue
              % value emitted 785
              oValuePop
              oTypeStkPop
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWrite)
              | rtWrite:
              .tWriteBegin
              @WriteProcedure
               [ (sStringLiteral)
               | *:
               @WriteStandardExpnList
                oSymbolStkPushStandardVariable(stdOutput)
                [ oSymbolStkChooseKind (syVariable)
                | *:
                oValuePushSymbol
                oSymbolStkPop
                [ (sStringLiteral)
                | *:
                .tTrapBegin
                .tLiteralAddress
                oEmitValue
                % value emitted 4
                .tVarParm
                .tParmEnd
                @Expression
                 @Operand
                  [ (sStringLiteral)
                  | sStringLiteral:
                  oSymbolStkPush(syExpression)
                  @StringLiteral
                   .tSkipString
                   oFixPushForwardBranch
                   oEmitNullAddress
                   % value emitted -32767
                   .tStringData
                   oValuePushStringLength
                   oEmitValue
                   % value emitted 1
                   oValuePop
                   oValuePushCodeAddress
                   oValueNegate
                   oEmitString
                   % value emitted 46
                   % value emitted 0
                   oFixPopForwardBranch
                   oTypeStkPush(tpChar)
                   oTypeStkLinkToStandardType(stdChar)
                   >>
                  ;StringLiteral
                  .tLiteralAddress
                  oEmitValue
                  % value emitted -1691
                  .tFetchChar
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                .tParmEnd
                @WriteText
                 [ (sParmEnd)
                 | *:
                 [ oTypeStkChooseKind (tpChar)
                 | *:
                 oValuePush(zero)
                 .tLiteralInteger
                 oEmitValue
                 % value emitted 0
                 oValuePop
                 .tParmEnd
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tTrap
                 oEmitTrapKind(trWriteString)
                 % value emitted 109
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 >>
                ;WriteText
                }
                [ (sParmEnd)
                | sParmEnd:
                ] or >
                oValuePop
                >>
               ;WriteStandardExpnList
               .tWriteEnd
               >>
              ;WriteProcedure
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWriteln)
              | rtWriteln:
              .tTrapBegin
              @WritelnProcedure
               [ (sParmEnd)
               | sParmEnd:
               oSymbolStkPushStandardVariable(stdOutput)
               [ oSymbolStkChooseKind (syVariable)
               | *:
               oValuePushSymbol
               .tLiteralAddress
               oEmitValue
               % value emitted 4
               oValuePop
               oSymbolStkPop
               .tVarParm
               .tParmEnd
               ] or >
               >>
              ;WritelnProcedure
              .tTrap
              oEmitTrapKind(trWriteln)
              % value emitted 6
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           ] or >
           .tIfEnd
           oFixPopForwardBranch
           >>
          ;IfStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        ] or >
        .tIfEnd
        oFixPopForwardBranch
        >>
       ;IfStmt
       ] or >
       }
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVarParameter)
         | syVarParameter:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4036
         oValuePop
         .tFetchAddress
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpBoolean)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syConstant)
          | *:
          [ oSymbolStkChooseKind (syConstant)
          | syConstant:
          @ConstantOperand
           oTypeStkPushSymbol
           oValuePushSymbol
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tLiteralBoolean
           oEmitValue
           % value emitted 1
           ] or >
           oValuePop
           >>
          ;ConstantOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         .tAssignBoolean
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     ] or >
     .tIfEnd
     oFixPopForwardBranch
     >>
    ;IfStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   @PublicDefinition
    [ (sIdentifier)
    | *:
    >>
   ;PublicDefinition
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sIdentifier)
    | *:
    oCountIncrement
    ?sIdentifier (sIdentifier)
    oSymbolStkPushLocalIdentifier
    [ oSymbolStkChooseKind (syUndefined)
    | syUndefined:
    ] or >
    [ (sVar)
    | sVar:
    oSymbolStkSetKind(syVarParameter)
    ] or >
    @ProcedureParameterType
     @SimpleType
      ?sLike (sLike)
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syConstant)
      | syConstant:
      oTypeStkPushSymbol
      ] or >
      oSymbolStkPop
      ] or >
      >>
     ;SimpleType
     [ oSymbolStkChooseKind (syVarParameter)
     | *:
     oSymbolStkEnterTypeReference
     @AllocateVar
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      oAllocateAlignOnWord
      oSymbolStkEnterDataAddress
      oAllocateVarParameter
      ] or >
      >>
     ;AllocateVar
     oSymbolTblEnter
     >>
    ;ProcedureParameterType
    }
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (one)
     | *:
     .tLiteralAddress
     oValuePushSymbol
     oEmitValue
     % value emitted 4040
     oValuePop
     [ oSymbolStkChooseKind (syVarParameter)
     | syVarParameter:
     .tStoreAddress
     ] or >
     oSymbolStkPop
     oTypeStkPop
     oCountDecrement
     }
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sVar)
    | sVar:
    @VariableDeclarations
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sLike)
      | *:
      >>
     ;PublicDefinition
     [ (sLike)
     | *:
     @TypeBody
      [ (sLike)
      | *:
      @SimpleType
       ?sLike (sLike)
       [ (sInteger)
       | sInteger:
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       ] or >
       >>
      ;SimpleType
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (yes)
       | *:
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      @VarActual
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 4044
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       .tVarParm
       [ oTypeStkCompareNames (yes)
       | yes:
       ] or >
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       ] or >
       >>
      ;VarActual
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 397
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sIfStmt)
    | sIfStmt:
    @IfStmt
     .tIfBegin
     @BooleanControlExpression
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4044
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sInteger)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sInteger)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sInteger)
        | *:
        >>
       ;BinaryOperator
       [ (sInteger)
       | *:
       }
       @Operand
        [ (sInteger)
        | sInteger:
        oValuePushInteger
        oSymbolStkPush(syExpression)
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        .tLiteralInteger
        oEmitValue
        % value emitted 10
        oValuePop
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sGT)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sGT)
        | sGT:
        .tGT
        @CompareRelationalOperandTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkPop
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         oTypeStkPop
         oTypeStkPush(tpBoolean)
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareRelationalOperandTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;BooleanControlExpression
     ?sThen (sThen)
     .tIfThen
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWriteln)
        | rtWriteln:
        .tTrapBegin
        @WritelnProcedure
         [ (sParmEnd)
         | sParmEnd:
         oSymbolStkPushStandardVariable(stdOutput)
         [ oSymbolStkChooseKind (syVariable)
         | *:
         oValuePushSymbol
         .tLiteralAddress
         oEmitValue
         % value emitted 4
         oValuePop
         oSymbolStkPop
         .tVarParm
         .tParmEnd
         ] or >
         >>
        ;WritelnProcedure
        .tTrap
        oEmitTrapKind(trWriteln)
        % value emitted 6
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWrite)
        | rtWrite:
        .tWriteBegin
        @WriteProcedure
         [ (sStringLiteral)
         | *:
         @WriteStandardExpnList
          oSymbolStkPushStandardVariable(stdOutput)
          [ oSymbolStkChooseKind (syVariable)
          | *:
          oValuePushSymbol
          oSymbolStkPop
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 9
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 78
             % value emitted 101
             % value emitted 119
             % value emitted 32
             % value emitted 103
             % value emitted 97
             % value emitted 109
             % value emitted 101
             % value emitted 46
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -1780
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sParmEnd)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          oValuePop
          >>
         ;WriteStandardExpnList
         .tWriteEnd
         >>
        ;WriteProcedure
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWriteln)
        | rtWriteln:
        .tTrapBegin
        @WritelnProcedure
         [ (sParmEnd)
         | sParmEnd:
         oSymbolStkPushStandardVariable(stdOutput)
         [ oSymbolStkChooseKind (syVariable)
         | *:
         oValuePushSymbol
         .tLiteralAddress
         oEmitValue
         % value emitted 4
         oValuePop
         oSymbolStkPop
         .tVarParm
         .tParmEnd
         ] or >
         >>
        ;WritelnProcedure
        .tTrap
        oEmitTrapKind(trWriteln)
        % value emitted 6
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 88
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 88
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 1
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sAdd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sAdd)
          | sAdd:
          .tAdd
          oTypeStkPush(tpInteger)
          @CompareOperandAndResultTypes
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareOperandAndResultTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tAssignInteger
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVarParameter)
         | syVarParameter:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4040
         oValuePop
         .tFetchAddress
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpBoolean)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syConstant)
          | *:
          [ oSymbolStkChooseKind (syConstant)
          | syConstant:
          @ConstantOperand
           oTypeStkPushSymbol
           oValuePushSymbol
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tLiteralBoolean
           oEmitValue
           % value emitted 1
           ] or >
           oValuePop
           >>
          ;ConstantOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         .tAssignBoolean
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     [ (sElse)
     | sElse:
     .tIfMerge
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oFixSwap
     oFixPopForwardBranch
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWriteln)
        | rtWriteln:
        .tTrapBegin
        @WritelnProcedure
         [ (sParmEnd)
         | sParmEnd:
         oSymbolStkPushStandardVariable(stdOutput)
         [ oSymbolStkChooseKind (syVariable)
         | *:
         oValuePushSymbol
         .tLiteralAddress
         oEmitValue
         % value emitted 4
         oValuePop
         oSymbolStkPop
         .tVarParm
         .tParmEnd
         ] or >
         >>
        ;WritelnProcedure
        .tTrap
        oEmitTrapKind(trWriteln)
        % value emitted 6
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWrite)
        | rtWrite:
        .tWriteBegin
        @WriteProcedure
         [ (sStringLiteral)
         | *:
         @WriteStandardExpnList
          oSymbolStkPushStandardVariable(stdOutput)
          [ oSymbolStkChooseKind (syVariable)
          | *:
          oValuePushSymbol
          oSymbolStkPop
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 36
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 84
             % value emitted 111
             % value emitted 111
             % value emitted 32
             % value emitted 102
             % value emitted 101
             % value emitted 119
             % value emitted 32
             % value emitted 99
             % value emitted 97
             % value emitted 114
             % value emitted 100
             % value emitted 115
             % value emitted 32
             % value emitted 108
             % value emitted 101
             % value emitted 102
             % value emitted 116
             % value emitted 32
             % value emitted 102
             % value emitted 111
             % value emitted 114
             % value emitted 32
             % value emitted 97
             % value emitted 110
             % value emitted 111
             % value emitted 116
             % value emitted 104
             % value emitted 101
             % value emitted 114
             % value emitted 32
             % value emitted 103
             % value emitted 97
             % value emitted 109
             % value emitted 101
             % value emitted 46
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -1851
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sParmEnd)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          oValuePop
          >>
         ;WriteStandardExpnList
         .tWriteEnd
         >>
        ;WriteProcedure
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWriteln)
        | rtWriteln:
        .tTrapBegin
        @WritelnProcedure
         [ (sParmEnd)
         | sParmEnd:
         oSymbolStkPushStandardVariable(stdOutput)
         [ oSymbolStkChooseKind (syVariable)
         | *:
         oValuePushSymbol
         .tLiteralAddress
         oEmitValue
         % value emitted 4
         oValuePop
         oSymbolStkPop
         .tVarParm
         .tParmEnd
         ] or >
         >>
        ;WritelnProcedure
        .tTrap
        oEmitTrapKind(trWriteln)
        % value emitted 6
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWrite)
        | rtWrite:
        .tWriteBegin
        @WriteProcedure
         [ (sStringLiteral)
         | *:
         @WriteStandardExpnList
          oSymbolStkPushStandardVariable(stdOutput)
          [ oSymbolStkChooseKind (syVariable)
          | *:
          oValuePushSymbol
          oSymbolStkPop
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 3
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 79
             % value emitted 102
             % value emitted 32
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -1917
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sIdentifier)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sIdentifier)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 88
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sExpnEnd)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sFieldWidth)
           | sFieldWidth:
           @Expression
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 1
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           ] or >
           .tParmEnd
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tTrap
           oEmitTrapKind(trWriteInteger)
           % value emitted 8
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 8
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 32
             % value emitted 103
             % value emitted 97
             % value emitted 109
             % value emitted 101
             % value emitted 115
             % value emitted 44
             % value emitted 32
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -1953
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sParmEnd)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          oValuePop
          >>
         ;WriteStandardExpnList
         .tWriteEnd
         >>
        ;WriteProcedure
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtNull)
        | *:
        .tCallBegin
        oTypeStkPushSymbol
        [ oTypeStkChooseRecursionFlag (no)
        | *:
        @ActualParameters
         oCountPush(zero)
         [ (sParmEnd)
         | sParmEnd:
         ] or >
         [ oTypeStkCompareParameterCount (yes)
         | yes:
         ] or >
         oCountPop
         >>
        ;ActualParameters
        .tCallEnd
        oValuePushSymbol
        oEmitValue
        % value emitted 785
        oValuePop
        oTypeStkPop
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWrite)
        | rtWrite:
        .tWriteBegin
        @WriteProcedure
         [ (sStringLiteral)
         | *:
         @WriteStandardExpnList
          oSymbolStkPushStandardVariable(stdOutput)
          [ oSymbolStkChooseKind (syVariable)
          | *:
          oValuePushSymbol
          oSymbolStkPop
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 5
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 32
             % value emitted 119
             % value emitted 111
             % value emitted 110
             % value emitted 32
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -1989
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sIdentifier)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sIdentifier)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 92
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sExpnEnd)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sFieldWidth)
           | sFieldWidth:
           @Expression
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 1
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           ] or >
           .tParmEnd
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tTrap
           oEmitTrapKind(trWriteInteger)
           % value emitted 8
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 13
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 44
             % value emitted 32
             % value emitted 100
             % value emitted 101
             % value emitted 97
             % value emitted 108
             % value emitted 101
             % value emitted 114
             % value emitted 32
             % value emitted 119
             % value emitted 111
             % value emitted 110
             % value emitted 32
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -2027
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sIdentifier)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sIdentifier)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 96
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sExpnEnd)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sFieldWidth)
           | sFieldWidth:
           @Expression
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 1
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           ] or >
           .tParmEnd
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tTrap
           oEmitTrapKind(trWriteInteger)
           % value emitted 8
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 1
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 46
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -2073
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sParmEnd)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          oValuePop
          >>
         ;WriteStandardExpnList
         .tWriteEnd
         >>
        ;WriteProcedure
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWriteln)
        | rtWriteln:
        .tTrapBegin
        @WritelnProcedure
         [ (sParmEnd)
         | sParmEnd:
         oSymbolStkPushStandardVariable(stdOutput)
         [ oSymbolStkChooseKind (syVariable)
         | *:
         oValuePushSymbol
         .tLiteralAddress
         oEmitValue
         % value emitted 4
         oValuePop
         oSymbolStkPop
         .tVarParm
         .tParmEnd
         ] or >
         >>
        ;WritelnProcedure
        .tTrap
        oEmitTrapKind(trWriteln)
        % value emitted 6
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sIfStmt)
       | sIfStmt:
       @IfStmt
        .tIfBegin
        @BooleanControlExpression
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 96
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sIdentifier)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sIdentifier)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sIdentifier)
           | *:
           >>
          ;BinaryOperator
          [ (sIdentifier)
          | *:
          }
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 92
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sGT)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sGT)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sGT)
           | sGT:
           .tGT
           @CompareRelationalOperandTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkPop
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            oTypeStkPop
            oTypeStkPush(tpBoolean)
            oSymbolStkPop
            oSymbolStkSetKind(syExpression)
            >>
           ;CompareRelationalOperandTypes
           ] or >
           oSymbolStkSetKind(syExpression)
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         >>
        ;BooleanControlExpression
        ?sThen (sThen)
        .tIfThen
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 19
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 72
                % value emitted 111
                % value emitted 117
                % value emitted 115
                % value emitted 101
                % value emitted 32
                % value emitted 99
                % value emitted 108
                % value emitted 101
                % value emitted 97
                % value emitted 110
                % value emitted 115
                % value emitted 32
                % value emitted 117
                % value emitted 112
                % value emitted 32
                % value emitted 111
                % value emitted 110
                % value emitted 32
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -2116
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtNull)
           | *:
           .tCallBegin
           oTypeStkPushSymbol
           [ oTypeStkChooseRecursionFlag (no)
           | *:
           @ActualParameters
            oCountPush(zero)
            [ (sParmEnd)
            | sParmEnd:
            ] or >
            [ oTypeStkCompareParameterCount (yes)
            | yes:
            ] or >
            oCountPop
            >>
           ;ActualParameters
           .tCallEnd
           oValuePushSymbol
           oEmitValue
           % value emitted 785
           oValuePop
           oTypeStkPop
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 11
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 32
                % value emitted 116
                % value emitted 104
                % value emitted 105
                % value emitted 115
                % value emitted 32
                % value emitted 116
                % value emitted 105
                % value emitted 109
                % value emitted 101
                % value emitted 46
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -2163
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWriteln)
           | rtWriteln:
           .tTrapBegin
           @WritelnProcedure
            [ (sParmEnd)
            | sParmEnd:
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            oValuePop
            oSymbolStkPop
            .tVarParm
            .tParmEnd
            ] or >
            >>
           ;WritelnProcedure
           .tTrap
           oEmitTrapKind(trWriteln)
           % value emitted 6
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        [ (sElse)
        | sElse:
        .tIfMerge
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        oFixSwap
        oFixPopForwardBranch
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sIfStmt)
          | sIfStmt:
          @IfStmt
           .tIfBegin
           @BooleanControlExpression
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 92
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sIdentifier)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sIdentifier)
              | *:
              >>
             ;BinaryOperator
             [ (sIdentifier)
             | *:
             }
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 96
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sGT)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sGT)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sGT)
              | sGT:
              .tGT
              @CompareRelationalOperandTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkPop
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               oTypeStkPop
               oTypeStkPush(tpBoolean)
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareRelationalOperandTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            >>
           ;BooleanControlExpression
           ?sThen (sThen)
           .tIfThen
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sIfStmt)
             | sIfStmt:
             @IfStmt
              .tIfBegin
              @BooleanControlExpression
               @Expression
                @Operand
                 [ (sIdentifier)
                 | sIdentifier:
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syVariable)
                 | *:
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 @Variable
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  .tLiteralAddress
                  oValuePushSymbol
                  oEmitValue
                  % value emitted 110
                  oValuePop
                  ] or >
                  oTypeStkPushSymbol
                  @VariableExtension
                   [ (sStringLiteral)
                   | *:
                   >>
                  ;VariableExtension
                  >>
                 ;Variable
                 @VariableOperand
                  [ oTypeStkChooseKind (tpChar)
                  | tpChar:
                  .tFetchChar
                  ] or >
                  >>
                 ;VariableOperand
                 ] or >
                 ] or >
                 >>
                ;Operand
                @UnaryOperator
                 [ (sStringLiteral)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sStringLiteral)
                 | *:
                 >>
                ;BinaryOperator
                [ (sStringLiteral)
                | *:
                }
                @Operand
                 [ (sStringLiteral)
                 | sStringLiteral:
                 oSymbolStkPush(syExpression)
                 @StringLiteral
                  .tSkipString
                  oFixPushForwardBranch
                  oEmitNullAddress
                  % value emitted -32767
                  .tStringData
                  oValuePushStringLength
                  oEmitValue
                  % value emitted 1
                  oValuePop
                  oValuePushCodeAddress
                  oValueNegate
                  oEmitString
                  % value emitted 101
                  % value emitted 0
                  oFixPopForwardBranch
                  oTypeStkPush(tpChar)
                  oTypeStkLinkToStandardType(stdChar)
                  >>
                 ;StringLiteral
                 .tLiteralAddress
                 oEmitValue
                 % value emitted -2216
                 .tFetchChar
                 oValuePop
                 ] or >
                 >>
                ;Operand
                @UnaryOperator
                 [ (sEq)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sEq)
                 | sEq:
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tStringEQ
                 ] or >
                 @CompareEqualityOperandTypes
                  [ oTypeStkChooseKind (tpChar)
                  | tpChar:
                  oTypeStkPop
                  [ oTypeStkChooseKind (tpChar)
                  | tpChar:
                  ] or >
                  ] or >
                  oTypeStkPop
                  oTypeStkPush(tpBoolean)
                  oSymbolStkPop
                  oSymbolStkSetKind(syExpression)
                  >>
                 ;CompareEqualityOperandTypes
                 ] or >
                 oSymbolStkSetKind(syExpression)
                 >>
                ;BinaryOperator
                [ (sExpnEnd)
                | sExpnEnd:
                ] or >
                >>
               ;Expression
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               ] or >
               oSymbolStkPop
               oTypeStkPop
               >>
              ;BooleanControlExpression
              ?sThen (sThen)
              .tIfThen
              oFixPushForwardBranch
              oEmitNullAddress
              % value emitted -32767
              @Statement
               oSymbolTblPushScope
               @Block
                ?sBegin (sBegin)
                [ (sCallStmt)
                | sCallStmt:
                @CallStmt
                 ?sIdentifier (sIdentifier)
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syProcedure)
                 | *:
                 [ oSymbolStkChooseKind (syProcedure)
                 | syProcedure:
                 [ oSymbolStkChooseStandardRoutine (rtWrite)
                 | rtWrite:
                 .tWriteBegin
                 @WriteProcedure
                  [ (sStringLiteral)
                  | *:
                  @WriteStandardExpnList
                   oSymbolStkPushStandardVariable(stdOutput)
                   [ oSymbolStkChooseKind (syVariable)
                   | *:
                   oValuePushSymbol
                   oSymbolStkPop
                   [ (sStringLiteral)
                   | *:
                   .tTrapBegin
                   .tLiteralAddress
                   oEmitValue
                   % value emitted 4
                   .tVarParm
                   .tParmEnd
                   @Expression
                    @Operand
                     [ (sStringLiteral)
                     | sStringLiteral:
                     oSymbolStkPush(syExpression)
                     @StringLiteral
                      .tSkipString
                      oFixPushForwardBranch
                      oEmitNullAddress
                      % value emitted -32767
                      .tStringData
                      oValuePushStringLength
                      oEmitValue
                      % value emitted 24
                      oValuePop
                      oValuePushCodeAddress
                      oValueNegate
                      oEmitString
                      % value emitted 69
                      % value emitted 46
                      % value emitted 79
                      % value emitted 46
                      % value emitted 84
                      % value emitted 104
                      % value emitted 111
                      % value emitted 114
                      % value emitted 112
                      % value emitted 32
                      % value emitted 100
                      % value emitted 111
                      % value emitted 101
                      % value emitted 115
                      % value emitted 32
                      % value emitted 105
                      % value emitted 116
                      % value emitted 32
                      % value emitted 97
                      % value emitted 103
                      % value emitted 97
                      % value emitted 105
                      % value emitted 110
                      % value emitted 46
                      % value emitted 0
                      oFixPopForwardBranch
                      oTypeStkPush(tpChar)
                      oTypeStkLinkToStandardType(stdChar)
                      >>
                     ;StringLiteral
                     .tLiteralAddress
                     oEmitValue
                     % value emitted -2236
                     .tFetchChar
                     oValuePop
                     ] or >
                     >>
                    ;Operand
                    @UnaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;UnaryOperator
                    @BinaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;BinaryOperator
                    [ (sExpnEnd)
                    | sExpnEnd:
                    ] or >
                    >>
                   ;Expression
                   .tParmEnd
                   @WriteText
                    [ (sParmEnd)
                    | *:
                    [ oTypeStkChooseKind (tpChar)
                    | *:
                    oValuePush(zero)
                    .tLiteralInteger
                    oEmitValue
                    % value emitted 0
                    oValuePop
                    .tParmEnd
                    [ oTypeStkChooseKind (tpChar)
                    | tpChar:
                    .tTrap
                    oEmitTrapKind(trWriteString)
                    % value emitted 109
                    ] or >
                    oSymbolStkPop
                    oTypeStkPop
                    >>
                   ;WriteText
                   }
                   [ (sParmEnd)
                   | sParmEnd:
                   ] or >
                   oValuePop
                   >>
                  ;WriteStandardExpnList
                  .tWriteEnd
                  >>
                 ;WriteProcedure
                 ] or >
                 ] or >
                 oSymbolStkPop
                 >>
                ;CallStmt
                ] or >
                }
                [ (sCallStmt)
                | sCallStmt:
                @CallStmt
                 ?sIdentifier (sIdentifier)
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syProcedure)
                 | *:
                 [ oSymbolStkChooseKind (syProcedure)
                 | syProcedure:
                 [ oSymbolStkChooseStandardRoutine (rtWriteln)
                 | rtWriteln:
                 .tTrapBegin
                 @WritelnProcedure
                  [ (sParmEnd)
                  | sParmEnd:
                  oSymbolStkPushStandardVariable(stdOutput)
                  [ oSymbolStkChooseKind (syVariable)
                  | *:
                  oValuePushSymbol
                  .tLiteralAddress
                  oEmitValue
                  % value emitted 4
                  oValuePop
                  oSymbolStkPop
                  .tVarParm
                  .tParmEnd
                  ] or >
                  >>
                 ;WritelnProcedure
                 .tTrap
                 oEmitTrapKind(trWriteln)
                 % value emitted 6
                 ] or >
                 ] or >
                 oSymbolStkPop
                 >>
                ;CallStmt
                ] or >
                }
                [ (sEnd)
                | *:
                ] or >
                ?sEnd (sEnd)
                >>
               ;Block
               oSymbolTblPopScope
               >>
              ;Statement
              [ (sElse)
              | sElse:
              .tIfMerge
              oFixPushForwardBranch
              oEmitNullAddress
              % value emitted -32767
              oFixSwap
              oFixPopForwardBranch
              @Statement
               oSymbolTblPushScope
               @Block
                ?sBegin (sBegin)
                [ (sCallStmt)
                | sCallStmt:
                @CallStmt
                 ?sIdentifier (sIdentifier)
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syProcedure)
                 | *:
                 [ oSymbolStkChooseKind (syProcedure)
                 | syProcedure:
                 [ oSymbolStkChooseStandardRoutine (rtNull)
                 | *:
                 .tCallBegin
                 oTypeStkPushSymbol
                 [ oTypeStkChooseRecursionFlag (no)
                 | *:
                 @ActualParameters
                  oCountPush(zero)
                  [ (sParmEnd)
                  | sParmEnd:
                  ] or >
                  [ oTypeStkCompareParameterCount (yes)
                  | yes:
                  ] or >
                  oCountPop
                  >>
                 ;ActualParameters
                 .tCallEnd
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 785
                 oValuePop
                 oTypeStkPop
                 ] or >
                 oSymbolStkPop
                 >>
                ;CallStmt
                ] or >
                }
                [ (sCallStmt)
                | sCallStmt:
                @CallStmt
                 ?sIdentifier (sIdentifier)
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syProcedure)
                 | *:
                 [ oSymbolStkChooseKind (syProcedure)
                 | syProcedure:
                 [ oSymbolStkChooseStandardRoutine (rtWrite)
                 | rtWrite:
                 .tWriteBegin
                 @WriteProcedure
                  [ (sStringLiteral)
                  | *:
                  @WriteStandardExpnList
                   oSymbolStkPushStandardVariable(stdOutput)
                   [ oSymbolStkChooseKind (syVariable)
                   | *:
                   oValuePushSymbol
                   oSymbolStkPop
                   [ (sStringLiteral)
                   | *:
                   .tTrapBegin
                   .tLiteralAddress
                   oEmitValue
                   % value emitted 4
                   .tVarParm
                   .tParmEnd
                   @Expression
                    @Operand
                     [ (sStringLiteral)
                     | sStringLiteral:
                     oSymbolStkPush(syExpression)
                     @StringLiteral
                      .tSkipString
                      oFixPushForwardBranch
                      oEmitNullAddress
                      % value emitted -32767
                      .tStringData
                      oValuePushStringLength
                      oEmitValue
                      % value emitted 32
                      oValuePop
                      oValuePushCodeAddress
                      oValueNegate
                      oEmitString
                      % value emitted 32
                      % value emitted 109
                      % value emitted 117
                      % value emitted 115
                      % value emitted 116
                      % value emitted 32
                      % value emitted 104
                      % value emitted 97
                      % value emitted 118
                      % value emitted 101
                      % value emitted 32
                      % value emitted 100
                      % value emitted 111
                      % value emitted 99
                      % value emitted 116
                      % value emitted 111
                      % value emitted 114
                      % value emitted 101
                      % value emitted 100
                      % value emitted 32
                      % value emitted 116
                      % value emitted 104
                      % value emitted 101
                      % value emitted 32
                      % value emitted 115
                      % value emitted 104
                      % value emitted 117
                      % value emitted 102
                      % value emitted 102
                      % value emitted 108
                      % value emitted 101
                      % value emitted 46
                      % value emitted 0
                      oFixPopForwardBranch
                      oTypeStkPush(tpChar)
                      oTypeStkLinkToStandardType(stdChar)
                      >>
                     ;StringLiteral
                     .tLiteralAddress
                     oEmitValue
                     % value emitted -2297
                     .tFetchChar
                     oValuePop
                     ] or >
                     >>
                    ;Operand
                    @UnaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;UnaryOperator
                    @BinaryOperator
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;BinaryOperator
                    [ (sExpnEnd)
                    | sExpnEnd:
                    ] or >
                    >>
                   ;Expression
                   .tParmEnd
                   @WriteText
                    [ (sParmEnd)
                    | *:
                    [ oTypeStkChooseKind (tpChar)
                    | *:
                    oValuePush(zero)
                    .tLiteralInteger
                    oEmitValue
                    % value emitted 0
                    oValuePop
                    .tParmEnd
                    [ oTypeStkChooseKind (tpChar)
                    | tpChar:
                    .tTrap
                    oEmitTrapKind(trWriteString)
                    % value emitted 109
                    ] or >
                    oSymbolStkPop
                    oTypeStkPop
                    >>
                   ;WriteText
                   }
                   [ (sParmEnd)
                   | sParmEnd:
                   ] or >
                   oValuePop
                   >>
                  ;WriteStandardExpnList
                  .tWriteEnd
                  >>
                 ;WriteProcedure
                 ] or >
                 ] or >
                 oSymbolStkPop
                 >>
                ;CallStmt
                ] or >
                }
                [ (sCallStmt)
                | sCallStmt:
                @CallStmt
                 ?sIdentifier (sIdentifier)
                 oSymbolStkPushIdentifier
                 [ oSymbolStkChooseKind (syProcedure)
                 | *:
                 [ oSymbolStkChooseKind (syProcedure)
                 | syProcedure:
                 [ oSymbolStkChooseStandardRoutine (rtWriteln)
                 | rtWriteln:
                 .tTrapBegin
                 @WritelnProcedure
                  [ (sParmEnd)
                  | sParmEnd:
                  oSymbolStkPushStandardVariable(stdOutput)
                  [ oSymbolStkChooseKind (syVariable)
                  | *:
                  oValuePushSymbol
                  .tLiteralAddress
                  oEmitValue
                  % value emitted 4
                  oValuePop
                  oSymbolStkPop
                  .tVarParm
                  .tParmEnd
                  ] or >
                  >>
                 ;WritelnProcedure
                 .tTrap
                 oEmitTrapKind(trWriteln)
                 % value emitted 6
                 ] or >
                 ] or >
                 oSymbolStkPop
                 >>
                ;CallStmt
                ] or >
                }
                [ (sEnd)
                | *:
                ] or >
                ?sEnd (sEnd)
                >>
               ;Block
               oSymbolTblPopScope
               >>
              ;Statement
              ] or >
              .tIfEnd
              oFixPopForwardBranch
              >>
             ;IfStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           [ (sElse)
           | sElse:
           .tIfMerge
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           oFixSwap
           oFixPopForwardBranch
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWrite)
              | rtWrite:
              .tWriteBegin
              @WriteProcedure
               [ (sStringLiteral)
               | *:
               @WriteStandardExpnList
                oSymbolStkPushStandardVariable(stdOutput)
                [ oSymbolStkChooseKind (syVariable)
                | *:
                oValuePushSymbol
                oSymbolStkPop
                [ (sStringLiteral)
                | *:
                .tTrapBegin
                .tLiteralAddress
                oEmitValue
                % value emitted 4
                .tVarParm
                .tParmEnd
                @Expression
                 @Operand
                  [ (sStringLiteral)
                  | sStringLiteral:
                  oSymbolStkPush(syExpression)
                  @StringLiteral
                   .tSkipString
                   oFixPushForwardBranch
                   oEmitNullAddress
                   % value emitted -32767
                   .tStringData
                   oValuePushStringLength
                   oEmitValue
                   % value emitted 13
                   oValuePop
                   oValuePushCodeAddress
                   oValueNegate
                   oEmitString
                   % value emitted 69
                   % value emitted 118
                   % value emitted 101
                   % value emitted 110
                   % value emitted 32
                   % value emitted 115
                   % value emitted 104
                   % value emitted 117
                   % value emitted 102
                   % value emitted 102
                   % value emitted 108
                   % value emitted 101
                   % value emitted 46
                   % value emitted 0
                   oFixPopForwardBranch
                   oTypeStkPush(tpChar)
                   oTypeStkLinkToStandardType(stdChar)
                   >>
                  ;StringLiteral
                  .tLiteralAddress
                  oEmitValue
                  % value emitted -2364
                  .tFetchChar
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                .tParmEnd
                @WriteText
                 [ (sParmEnd)
                 | *:
                 [ oTypeStkChooseKind (tpChar)
                 | *:
                 oValuePush(zero)
                 .tLiteralInteger
                 oEmitValue
                 % value emitted 0
                 oValuePop
                 .tParmEnd
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tTrap
                 oEmitTrapKind(trWriteString)
                 % value emitted 109
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 >>
                ;WriteText
                }
                [ (sParmEnd)
                | sParmEnd:
                ] or >
                oValuePop
                >>
               ;WriteStandardExpnList
               .tWriteEnd
               >>
              ;WriteProcedure
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWriteln)
              | rtWriteln:
              .tTrapBegin
              @WritelnProcedure
               [ (sParmEnd)
               | sParmEnd:
               oSymbolStkPushStandardVariable(stdOutput)
               [ oSymbolStkChooseKind (syVariable)
               | *:
               oValuePushSymbol
               .tLiteralAddress
               oEmitValue
               % value emitted 4
               oValuePop
               oSymbolStkPop
               .tVarParm
               .tParmEnd
               ] or >
               >>
              ;WritelnProcedure
              .tTrap
              oEmitTrapKind(trWriteln)
              % value emitted 6
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           ] or >
           .tIfEnd
           oFixPopForwardBranch
           >>
          ;IfStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        ] or >
        .tIfEnd
        oFixPopForwardBranch
        >>
       ;IfStmt
       ] or >
       }
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVarParameter)
         | syVarParameter:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4040
         oValuePop
         .tFetchAddress
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpBoolean)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syConstant)
          | *:
          [ oSymbolStkChooseKind (syConstant)
          | syConstant:
          @ConstantOperand
           oTypeStkPushSymbol
           oValuePushSymbol
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tLiteralBoolean
           oEmitValue
           % value emitted 0
           ] or >
           oValuePop
           >>
          ;ConstantOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         .tAssignBoolean
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     ] or >
     .tIfEnd
     oFixPopForwardBranch
     >>
    ;IfStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   @PublicDefinition
    [ (sParmEnd)
    | *:
    >>
   ;PublicDefinition
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 80
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sIdentifier)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 80
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       @VariableOperand
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tFetchInteger
        ] or >
        >>
       ;VariableOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sInteger)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sInteger)
       | *:
       >>
      ;BinaryOperator
      [ (sInteger)
      | *:
      }
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 1
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sAdd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sAdd)
       | sAdd:
       .tAdd
       oTypeStkPush(tpInteger)
       @CompareOperandAndResultTypes
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        oTypeStkPop
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        oTypeStkPop
        oSymbolStkPop
        oSymbolStkSetKind(syExpression)
        >>
       ;CompareOperandAndResultTypes
       ] or >
       oSymbolStkSetKind(syExpression)
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      @VarActual
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 8
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sSubscript)
         | sSubscript:
         .tSubscriptBegin
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 80
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sExpnEnd)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         [ oTypeStkChooseKind (tpArray)
         | tpArray:
         oTypeStkPushComponent
         oTypeStkSwap
         oTypeStkPop
         ] or >
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tSubscriptInteger
         ] or >
         ] or >
         >>
        ;VariableExtension
        >>
       ;Variable
       .tVarParm
       [ oTypeStkCompareNames (yes)
       | yes:
       ] or >
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       ] or >
       >>
      ;VarActual
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 359
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   @PublicDefinition
    [ (sParmEnd)
    | *:
    >>
   ;PublicDefinition
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 84
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sIdentifier)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 84
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       @VariableOperand
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tFetchInteger
        ] or >
        >>
       ;VariableOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sInteger)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sInteger)
       | *:
       >>
      ;BinaryOperator
      [ (sInteger)
      | *:
      }
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 1
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sAdd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sAdd)
       | sAdd:
       .tAdd
       oTypeStkPush(tpInteger)
       @CompareOperandAndResultTypes
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        oTypeStkPop
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        oTypeStkPop
        oSymbolStkPop
        oSymbolStkSetKind(syExpression)
        >>
       ;CompareOperandAndResultTypes
       ] or >
       oSymbolStkSetKind(syExpression)
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      @VarActual
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 44
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sSubscript)
         | sSubscript:
         .tSubscriptBegin
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 84
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sExpnEnd)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         [ oTypeStkChooseKind (tpArray)
         | tpArray:
         oTypeStkPushComponent
         oTypeStkSwap
         oTypeStkPop
         ] or >
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tSubscriptInteger
         ] or >
         ] or >
         >>
        ;VariableExtension
        >>
       ;Variable
       .tVarParm
       [ oTypeStkCompareNames (yes)
       | yes:
       ] or >
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       ] or >
       >>
      ;VarActual
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 359
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   @PublicDefinition
    [ (sParmEnd)
    | *:
    >>
   ;PublicDefinition
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 109
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sIdentifier)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpBoolean)
     | *:
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syConstant)
       | *:
       [ oSymbolStkChooseKind (syConstant)
       | syConstant:
       @ConstantOperand
        oTypeStkPushSymbol
        oValuePushSymbol
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        .tLiteralBoolean
        oEmitValue
        % value emitted 0
        ] or >
        oValuePop
        >>
       ;ConstantOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      .tAssignBoolean
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 108
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sIdentifier)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpBoolean)
     | *:
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syConstant)
       | *:
       [ oSymbolStkChooseKind (syConstant)
       | syConstant:
       @ConstantOperand
        oTypeStkPushSymbol
        oValuePushSymbol
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        .tLiteralBoolean
        oEmitValue
        % value emitted 0
        ] or >
        oValuePop
        >>
       ;ConstantOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      .tAssignBoolean
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 80
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sInteger)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 0
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 84
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sInteger)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 0
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 2418
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 2452
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 2418
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 2452
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWrite)
     | rtWrite:
     .tWriteBegin
     @WriteProcedure
      [ (sStringLiteral)
      | *:
      @WriteStandardExpnList
       oSymbolStkPushStandardVariable(stdOutput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       oSymbolStkPop
       [ (sStringLiteral)
       | *:
       .tTrapBegin
       .tLiteralAddress
       oEmitValue
       % value emitted 4
       .tVarParm
       .tParmEnd
       @Expression
        @Operand
         [ (sStringLiteral)
         | sStringLiteral:
         oSymbolStkPush(syExpression)
         @StringLiteral
          .tSkipString
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          .tStringData
          oValuePushStringLength
          oEmitValue
          % value emitted 23
          oValuePop
          oValuePushCodeAddress
          oValueNegate
          oEmitString
          % value emitted 84
          % value emitted 104
          % value emitted 101
          % value emitted 32
          % value emitted 105
          % value emitted 110
          % value emitted 105
          % value emitted 116
          % value emitted 105
          % value emitted 97
          % value emitted 108
          % value emitted 32
          % value emitted 100
          % value emitted 101
          % value emitted 97
          % value emitted 108
          % value emitted 32
          % value emitted 103
          % value emitted 105
          % value emitted 118
          % value emitted 101
          % value emitted 115
          % value emitted 32
          % value emitted 0
          oFixPopForwardBranch
          oTypeStkPush(tpChar)
          oTypeStkLinkToStandardType(stdChar)
          >>
         ;StringLiteral
         .tLiteralAddress
         oEmitValue
         % value emitted -2551
         .tFetchChar
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tParmEnd
       @WriteText
        [ (sParmEnd)
        | *:
        [ oTypeStkChooseKind (tpChar)
        | *:
        oValuePush(zero)
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        oValuePop
        .tParmEnd
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tTrap
        oEmitTrapKind(trWriteString)
        % value emitted 109
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;WriteText
       }
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       oValuePop
       >>
      ;WriteStandardExpnList
      .tWriteEnd
      >>
     ;WriteProcedure
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 785
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWrite)
     | rtWrite:
     .tWriteBegin
     @WriteProcedure
      [ (sStringLiteral)
      | *:
      @WriteStandardExpnList
       oSymbolStkPushStandardVariable(stdOutput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       oSymbolStkPop
       [ (sStringLiteral)
       | *:
       .tTrapBegin
       .tLiteralAddress
       oEmitValue
       % value emitted 4
       .tVarParm
       .tParmEnd
       @Expression
        @Operand
         [ (sStringLiteral)
         | sStringLiteral:
         oSymbolStkPush(syExpression)
         @StringLiteral
          .tSkipString
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          .tStringData
          oValuePushStringLength
          oEmitValue
          % value emitted 2
          oValuePop
          oValuePushCodeAddress
          oValueNegate
          oEmitString
          % value emitted 32
          % value emitted 58
          % value emitted 0
          oFixPopForwardBranch
          oTypeStkPush(tpChar)
          oTypeStkLinkToStandardType(stdChar)
          >>
         ;StringLiteral
         .tLiteralAddress
         oEmitValue
         % value emitted -2602
         .tFetchChar
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tParmEnd
       @WriteText
        [ (sParmEnd)
        | *:
        [ oTypeStkChooseKind (tpChar)
        | *:
        oValuePush(zero)
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        oValuePop
        .tParmEnd
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tTrap
        oEmitTrapKind(trWriteString)
        % value emitted 109
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;WriteText
       }
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       oValuePop
       >>
      ;WriteStandardExpnList
      .tWriteEnd
      >>
     ;WriteProcedure
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 80
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sExpnEnd)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      @VarActual
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 8
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       .tVarParm
       [ oTypeStkCompareNames (yes)
       | yes:
       ] or >
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       ] or >
       >>
      ;VarActual
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 437
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWriteln)
     | rtWriteln:
     .tTrapBegin
     @WritelnProcedure
      [ (sParmEnd)
      | sParmEnd:
      oSymbolStkPushStandardVariable(stdOutput)
      [ oSymbolStkChooseKind (syVariable)
      | *:
      oValuePushSymbol
      .tLiteralAddress
      oEmitValue
      % value emitted 4
      oValuePop
      oSymbolStkPop
      .tVarParm
      .tParmEnd
      ] or >
      >>
     ;WritelnProcedure
     .tTrap
     oEmitTrapKind(trWriteln)
     % value emitted 6
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWrite)
     | rtWrite:
     .tWriteBegin
     @WriteProcedure
      [ (sStringLiteral)
      | *:
      @WriteStandardExpnList
       oSymbolStkPushStandardVariable(stdOutput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       oSymbolStkPop
       [ (sStringLiteral)
       | *:
       .tTrapBegin
       .tLiteralAddress
       oEmitValue
       % value emitted 4
       .tVarParm
       .tParmEnd
       @Expression
        @Operand
         [ (sStringLiteral)
         | sStringLiteral:
         oSymbolStkPush(syExpression)
         @StringLiteral
          .tSkipString
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          .tStringData
          oValuePushStringLength
          oEmitValue
          % value emitted 18
          oValuePop
          oValuePushCodeAddress
          oValueNegate
          oEmitString
          % value emitted 32
          % value emitted 32
          % value emitted 97
          % value emitted 110
          % value emitted 100
          % value emitted 32
          % value emitted 116
          % value emitted 104
          % value emitted 101
          % value emitted 32
          % value emitted 100
          % value emitted 101
          % value emitted 97
          % value emitted 108
          % value emitted 101
          % value emitted 114
          % value emitted 32
          % value emitted 58
          % value emitted 0
          oFixPopForwardBranch
          oTypeStkPush(tpChar)
          oTypeStkLinkToStandardType(stdChar)
          >>
         ;StringLiteral
         .tLiteralAddress
         oEmitValue
         % value emitted -2647
         .tFetchChar
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tParmEnd
       @WriteText
        [ (sParmEnd)
        | *:
        [ oTypeStkChooseKind (tpChar)
        | *:
        oValuePush(zero)
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        oValuePop
        .tParmEnd
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tTrap
        oEmitTrapKind(trWriteString)
        % value emitted 109
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;WriteText
       }
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       oValuePop
       >>
      ;WriteStandardExpnList
      .tWriteEnd
      >>
     ;WriteProcedure
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sNullStmt)
    | sNullStmt:
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 84
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sExpnEnd)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      @VarActual
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 44
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       .tVarParm
       [ oTypeStkCompareNames (yes)
       | yes:
       ] or >
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       ] or >
       >>
      ;VarActual
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 437
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWrite)
     | rtWrite:
     .tWriteBegin
     @WriteProcedure
      [ (sStringLiteral)
      | *:
      @WriteStandardExpnList
       oSymbolStkPushStandardVariable(stdOutput)
       [ oSymbolStkChooseKind (syVariable)
       | *:
       oValuePushSymbol
       oSymbolStkPop
       [ (sStringLiteral)
       | *:
       .tTrapBegin
       .tLiteralAddress
       oEmitValue
       % value emitted 4
       .tVarParm
       .tParmEnd
       @Expression
        @Operand
         [ (sStringLiteral)
         | sStringLiteral:
         oSymbolStkPush(syExpression)
         @StringLiteral
          .tSkipString
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          .tStringData
          oValuePushStringLength
          oEmitValue
          % value emitted 1
          oValuePop
          oValuePushCodeAddress
          oValueNegate
          oEmitString
          % value emitted 46
          % value emitted 0
          oFixPopForwardBranch
          oTypeStkPush(tpChar)
          oTypeStkLinkToStandardType(stdChar)
          >>
         ;StringLiteral
         .tLiteralAddress
         oEmitValue
         % value emitted -2701
         .tFetchChar
         oValuePop
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       .tParmEnd
       @WriteText
        [ (sParmEnd)
        | *:
        [ oTypeStkChooseKind (tpChar)
        | *:
        oValuePush(zero)
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        oValuePop
        .tParmEnd
        [ oTypeStkChooseKind (tpChar)
        | tpChar:
        .tTrap
        oEmitTrapKind(trWriteString)
        % value emitted 109
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;WriteText
       }
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       oValuePop
       >>
      ;WriteStandardExpnList
      .tWriteEnd
      >>
     ;WriteProcedure
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtWriteln)
     | rtWriteln:
     .tTrapBegin
     @WritelnProcedure
      [ (sParmEnd)
      | sParmEnd:
      oSymbolStkPushStandardVariable(stdOutput)
      [ oSymbolStkChooseKind (syVariable)
      | *:
      oValuePushSymbol
      .tLiteralAddress
      oEmitValue
      % value emitted 4
      oValuePop
      oSymbolStkPop
      .tVarParm
      .tParmEnd
      ] or >
      >>
     ;WritelnProcedure
     .tTrap
     oEmitTrapKind(trWriteln)
     % value emitted 6
     ] or >
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   @PublicDefinition
    [ (sIdentifier)
    | *:
    >>
   ;PublicDefinition
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sIdentifier)
    | *:
    oCountIncrement
    ?sIdentifier (sIdentifier)
    oSymbolStkPushLocalIdentifier
    [ oSymbolStkChooseKind (syUndefined)
    | syUndefined:
    ] or >
    [ (sLike)
    | *:
    oSymbolStkSetKind(syVariable)
    @ProcedureParameterType
     @SimpleType
      ?sLike (sLike)
      [ (sInteger)
      | sInteger:
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      ] or >
      >>
     ;SimpleType
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     [ oTypeStkChooseKind (tpInteger)
     | *:
     ] or >
     oSymbolStkEnterTypeReference
     @AllocateVar
      [ oSymbolStkChooseKind (syVariable)
      | *:
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oAllocateAlignOnWord
      oSymbolStkEnterDataAddress
      oAllocateVariable
      ] or >
      >>
     ;AllocateVar
     oSymbolTblEnter
     >>
    ;ProcedureParameterType
    }
    [ (sIdentifier)
    | *:
    oCountIncrement
    ?sIdentifier (sIdentifier)
    oSymbolStkPushLocalIdentifier
    [ oSymbolStkChooseKind (syUndefined)
    | syUndefined:
    ] or >
    [ (sVar)
    | sVar:
    oSymbolStkSetKind(syVarParameter)
    ] or >
    @ProcedureParameterType
     @SimpleType
      ?sLike (sLike)
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      oTypeStkPushSymbol
      ] or >
      oSymbolStkPop
      ] or >
      >>
     ;SimpleType
     [ oSymbolStkChooseKind (syVarParameter)
     | *:
     oSymbolStkEnterTypeReference
     @AllocateVar
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      oAllocateAlignOnWord
      oSymbolStkEnterDataAddress
      oAllocateVarParameter
      ] or >
      >>
     ;AllocateVar
     oSymbolTblEnter
     >>
    ;ProcedureParameterType
    }
    [ (sIdentifier)
    | *:
    oCountIncrement
    ?sIdentifier (sIdentifier)
    oSymbolStkPushLocalIdentifier
    [ oSymbolStkChooseKind (syUndefined)
    | syUndefined:
    ] or >
    [ (sVar)
    | sVar:
    oSymbolStkSetKind(syVarParameter)
    ] or >
    @ProcedureParameterType
     @SimpleType
      ?sLike (sLike)
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syConstant)
      | syConstant:
      oTypeStkPushSymbol
      ] or >
      oSymbolStkPop
      ] or >
      >>
     ;SimpleType
     [ oSymbolStkChooseKind (syVarParameter)
     | *:
     oSymbolStkEnterTypeReference
     @AllocateVar
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      oAllocateAlignOnWord
      oSymbolStkEnterDataAddress
      oAllocateVarParameter
      ] or >
      >>
     ;AllocateVar
     oSymbolTblEnter
     >>
    ;ProcedureParameterType
    }
    [ (sIdentifier)
    | *:
    oCountIncrement
    ?sIdentifier (sIdentifier)
    oSymbolStkPushLocalIdentifier
    [ oSymbolStkChooseKind (syUndefined)
    | syUndefined:
    ] or >
    [ (sVar)
    | sVar:
    oSymbolStkSetKind(syVarParameter)
    ] or >
    @ProcedureParameterType
     @SimpleType
      ?sLike (sLike)
      [ (sInteger)
      | sInteger:
      oTypeStkPush(tpInteger)
      oTypeStkLinkToStandardType(stdInteger)
      ] or >
      >>
     ;SimpleType
     [ oSymbolStkChooseKind (syVarParameter)
     | *:
     oSymbolStkEnterTypeReference
     @AllocateVar
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      oAllocateAlignOnWord
      oSymbolStkEnterDataAddress
      oAllocateVarParameter
      ] or >
      >>
     ;AllocateVar
     oSymbolTblEnter
     >>
    ;ProcedureParameterType
    }
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (wordSize)
     | *:
     .tLiteralAddress
     oValuePushSymbol
     oEmitValue
     % value emitted 4060
     oValuePop
     [ oSymbolStkChooseKind (syVarParameter)
     | syVarParameter:
     .tStoreAddress
     ] or >
     oSymbolStkPop
     oTypeStkPop
     oCountDecrement
     }
     [ oCountChoose (three)
     | *:
     .tLiteralAddress
     oValuePushSymbol
     oEmitValue
     % value emitted 4056
     oValuePop
     [ oSymbolStkChooseKind (syVarParameter)
     | syVarParameter:
     .tStoreAddress
     ] or >
     oSymbolStkPop
     oTypeStkPop
     oCountDecrement
     }
     [ oCountChoose (two)
     | *:
     .tLiteralAddress
     oValuePushSymbol
     oEmitValue
     % value emitted 4052
     oValuePop
     [ oSymbolStkChooseKind (syVarParameter)
     | syVarParameter:
     .tStoreAddress
     ] or >
     oSymbolStkPop
     oTypeStkPop
     oCountDecrement
     }
     [ oCountChoose (one)
     | *:
     .tLiteralAddress
     oValuePushSymbol
     oEmitValue
     % value emitted 4048
     oValuePop
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @EmitStore
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tStoreInteger
      ] or >
      >>
     ;EmitStore
     ] or >
     oSymbolStkPop
     oTypeStkPop
     oCountDecrement
     }
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4060
      oValuePop
      .tFetchAddress
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sInteger)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @Expression
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 0
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tAssignInteger
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sVar)
    | sVar:
    @VariableDeclarations
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sInitialValue)
      | *:
      >>
     ;PublicDefinition
     [ (sInitialValue)
     | sInitialValue:
     .tInitialValue
     @Expression
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 0
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tInitEnd
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     oSymbolStkPop
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     .tLiteralAddress
     oValuePushSymbol
     oEmitValue
     % value emitted 4064
     oValuePop
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @EmitStore
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tStoreInteger
      ] or >
      >>
     ;EmitStore
     ] or >
     oTypeStkPop
     oSymbolStkPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sVar)
    | sVar:
    @VariableDeclarations
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sInitialValue)
      | *:
      >>
     ;PublicDefinition
     [ (sInitialValue)
     | sInitialValue:
     .tInitialValue
     @Expression
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 1
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tInitEnd
     @TypeTblEnterIfNew
      [ oTypeStkChooseTypeReference (yes)
      | *:
      >>
     ;TypeTblEnterIfNew
     oSymbolStkPop
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpInteger)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oAllocateAlignOnWord
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     .tLiteralAddress
     oValuePushSymbol
     oEmitValue
     % value emitted 4068
     oValuePop
     [ oTypeStkChooseKind (tpInteger)
     | *:
     @EmitStore
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      .tStoreInteger
      ] or >
      >>
     ;EmitStore
     ] or >
     oTypeStkPop
     oSymbolStkPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sWhileStmt)
    | sWhileStmt:
    @WhileStmt
     .tWhileBegin
     oFixPushTargetAddress
     @BooleanControlExpression
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4068
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sIdentifier)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sIdentifier)
        | *:
        >>
       ;BinaryOperator
       [ (sIdentifier)
       | *:
       }
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4048
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sLE)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sLE)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sLE)
        | sLE:
        .tLE
        @CompareRelationalOperandTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkPop
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         oTypeStkPop
         oTypeStkPush(tpBoolean)
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareRelationalOperandTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;BooleanControlExpression
     .tWhileTest
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oFixSwap
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sNullStmt)
       | sNullStmt:
       ] or >
       }
       [ (sCaseStmt)
       | sCaseStmt:
       @CaseStmt
        .tCaseBegin
        @CaseSelectorExpression
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVarParameter)
           | *:
           [ oSymbolStkChooseKind (syVarParameter)
           | syVarParameter:
           @Variable
            [ oSymbolStkChooseKind (syVarParameter)
            | syVarParameter:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 4052
            oValuePop
            .tFetchAddress
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sSubscript)
             | sSubscript:
             .tSubscriptBegin
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syVariable)
               | *:
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 4068
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sExpnEnd)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               @VariableOperand
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tFetchInteger
                ] or >
                >>
               ;VariableOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             ] or >
             oSymbolStkPop
             oTypeStkPop
             [ oTypeStkChooseKind (tpArray)
             | tpArray:
             oTypeStkPushComponent
             oTypeStkSwap
             oTypeStkPop
             ] or >
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tSubscriptInteger
             ] or >
             ] or >
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         >>
        ;CaseSelectorExpression
        oCasePushDisplay
        oCountPush(zero)
        .tCaseSelect
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        [ (sInteger)
        | *:
        @CaseAlternative
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sInteger)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sInteger)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sInteger)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sInteger)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sInteger)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sInteger)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sInteger)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sInteger)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sLabelEnd)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sLabelEnd)
         | sLabelEnd:
         ] or >
         @Statement
          oSymbolTblPushScope
          @Block
           ?sBegin (sBegin)
           [ (sAssignmentStmt)
           | sAssignmentStmt:
           @AssignmentStmt
            ?sIdentifier (sIdentifier)
            oSymbolStkPushIdentifier
            .tAssignBegin
            @Variable
             [ oSymbolStkChooseKind (syVarParameter)
             | syVarParameter:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 4060
             oValuePop
             .tFetchAddress
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sIdentifier)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            [ oTypeStkChooseKind (tpInteger)
            | *:
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVarParameter)
              | *:
              [ oSymbolStkChooseKind (syVarParameter)
              | syVarParameter:
              @Variable
               [ oSymbolStkChooseKind (syVarParameter)
               | syVarParameter:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 4060
               oValuePop
               .tFetchAddress
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sIdentifier)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sIdentifier)
              | *:
              >>
             ;BinaryOperator
             [ (sIdentifier)
             | *:
             }
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVarParameter)
              | *:
              [ oSymbolStkChooseKind (syVarParameter)
              | syVarParameter:
              @Variable
               [ oSymbolStkChooseKind (syVarParameter)
               | syVarParameter:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 4052
               oValuePop
               .tFetchAddress
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sSubscript)
                | sSubscript:
                .tSubscriptBegin
                @Expression
                 @Operand
                  [ (sIdentifier)
                  | sIdentifier:
                  oSymbolStkPushIdentifier
                  [ oSymbolStkChooseKind (syVariable)
                  | *:
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  @Variable
                   [ oSymbolStkChooseKind (syVariable)
                   | syVariable:
                   .tLiteralAddress
                   oValuePushSymbol
                   oEmitValue
                   % value emitted 4068
                   oValuePop
                   ] or >
                   oTypeStkPushSymbol
                   @VariableExtension
                    [ (sExpnEnd)
                    | *:
                    >>
                   ;VariableExtension
                   >>
                  ;Variable
                  @VariableOperand
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   .tFetchInteger
                   ] or >
                   >>
                  ;VariableOperand
                  ] or >
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                oSymbolStkPop
                oTypeStkPop
                [ oTypeStkChooseKind (tpArray)
                | tpArray:
                oTypeStkPushComponent
                oTypeStkSwap
                oTypeStkPop
                ] or >
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tSubscriptInteger
                ] or >
                ] or >
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sAdd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sAdd)
              | sAdd:
              .tAdd
              oTypeStkPush(tpInteger)
              @CompareOperandAndResultTypes
               @CompareAndSwapTypes
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                oTypeStkSwap
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                ] or >
                >>
               ;CompareAndSwapTypes
               oTypeStkPop
               @CompareAndSwapTypes
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                oTypeStkSwap
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                ] or >
                >>
               ;CompareAndSwapTypes
               oTypeStkPop
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareOperandAndResultTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            @CompareAndSwapTypes
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             oTypeStkSwap
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             ] or >
             ] or >
             >>
            ;CompareAndSwapTypes
            @EmitAssign
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tAssignInteger
             ] or >
             >>
            ;EmitAssign
            oTypeStkPop
            oSymbolStkPop
            oTypeStkPop
            oSymbolStkPop
            >>
           ;AssignmentStmt
           ] or >
           }
           [ (sEnd)
           | *:
           ] or >
           ?sEnd (sEnd)
           >>
          ;Block
          oSymbolTblPopScope
          >>
         ;Statement
         .tCaseMerge
         oFixPushForwardBranch
         oEmitNullAddress
         % value emitted -32767
         oFixSwap
         oCountIncrement
         >>
        ;CaseAlternative
        }
        [ (sInteger)
        | *:
        @CaseAlternative
         [ (sInteger)
         | sInteger:
         oValuePushInteger
         [ (sLabelEnd)
         | *:
         [ oCaseLookupLabel (no)
         | *:
         oCasePushLabel
         oValuePop
         ] or >
         }
         [ (sLabelEnd)
         | sLabelEnd:
         ] or >
         @Statement
          oSymbolTblPushScope
          @Block
           ?sBegin (sBegin)
           [ (sAssignmentStmt)
           | sAssignmentStmt:
           @AssignmentStmt
            ?sIdentifier (sIdentifier)
            oSymbolStkPushIdentifier
            .tAssignBegin
            @Variable
             [ oSymbolStkChooseKind (syVarParameter)
             | syVarParameter:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 4060
             oValuePop
             .tFetchAddress
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sIdentifier)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            [ oTypeStkChooseKind (tpInteger)
            | *:
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVarParameter)
              | *:
              [ oSymbolStkChooseKind (syVarParameter)
              | syVarParameter:
              @Variable
               [ oSymbolStkChooseKind (syVarParameter)
               | syVarParameter:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 4060
               oValuePop
               .tFetchAddress
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sInteger)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sInteger)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sInteger)
              | *:
              >>
             ;BinaryOperator
             [ (sInteger)
             | *:
             }
             @Operand
              [ (sInteger)
              | sInteger:
              oValuePushInteger
              oSymbolStkPush(syExpression)
              oTypeStkPush(tpInteger)
              oTypeStkLinkToStandardType(stdInteger)
              .tLiteralInteger
              oEmitValue
              % value emitted 11
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sAdd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sAdd)
              | sAdd:
              .tAdd
              oTypeStkPush(tpInteger)
              @CompareOperandAndResultTypes
               @CompareAndSwapTypes
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                oTypeStkSwap
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                ] or >
                >>
               ;CompareAndSwapTypes
               oTypeStkPop
               @CompareAndSwapTypes
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                oTypeStkSwap
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                ] or >
                >>
               ;CompareAndSwapTypes
               oTypeStkPop
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareOperandAndResultTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            @CompareAndSwapTypes
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             oTypeStkSwap
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             ] or >
             ] or >
             >>
            ;CompareAndSwapTypes
            @EmitAssign
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tAssignInteger
             ] or >
             >>
            ;EmitAssign
            oTypeStkPop
            oSymbolStkPop
            oTypeStkPop
            oSymbolStkPop
            >>
           ;AssignmentStmt
           ] or >
           }
           [ (sAssignmentStmt)
           | sAssignmentStmt:
           @AssignmentStmt
            ?sIdentifier (sIdentifier)
            oSymbolStkPushIdentifier
            .tAssignBegin
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 4064
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sIdentifier)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            [ oTypeStkChooseKind (tpInteger)
            | *:
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 4064
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sInteger)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sInteger)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sInteger)
              | *:
              >>
             ;BinaryOperator
             [ (sInteger)
             | *:
             }
             @Operand
              [ (sInteger)
              | sInteger:
              oValuePushInteger
              oSymbolStkPush(syExpression)
              oTypeStkPush(tpInteger)
              oTypeStkLinkToStandardType(stdInteger)
              .tLiteralInteger
              oEmitValue
              % value emitted 1
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sAdd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sAdd)
              | sAdd:
              .tAdd
              oTypeStkPush(tpInteger)
              @CompareOperandAndResultTypes
               @CompareAndSwapTypes
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                oTypeStkSwap
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                ] or >
                >>
               ;CompareAndSwapTypes
               oTypeStkPop
               @CompareAndSwapTypes
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                oTypeStkSwap
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                ] or >
                >>
               ;CompareAndSwapTypes
               oTypeStkPop
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareOperandAndResultTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            @CompareAndSwapTypes
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             oTypeStkSwap
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             ] or >
             ] or >
             >>
            ;CompareAndSwapTypes
            @EmitAssign
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tAssignInteger
             ] or >
             >>
            ;EmitAssign
            oTypeStkPop
            oSymbolStkPop
            oTypeStkPop
            oSymbolStkPop
            >>
           ;AssignmentStmt
           ] or >
           }
           [ (sEnd)
           | *:
           ] or >
           ?sEnd (sEnd)
           >>
          ;Block
          oSymbolTblPopScope
          >>
         ;Statement
         .tCaseMerge
         oFixPushForwardBranch
         oEmitNullAddress
         % value emitted -32767
         oFixSwap
         oCountIncrement
         >>
        ;CaseAlternative
        }
        [ (sCaseEnd)
        | sCaseEnd:
        ] or >
        .tCaseEnd
        oFixPopForwardBranch
        oEmitCaseBranchTable
        % value emitted 1
        % value emitted 10
        % value emitted 2820
        % value emitted 2795
        % value emitted 2795
        % value emitted 2795
        % value emitted 2795
        % value emitted 2795
        % value emitted 2795
        % value emitted 2795
        % value emitted 2795
        % value emitted 2795
        [ (sCaseElse)
        | sCaseElse:
        .tCaseElse
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sAssignmentStmt)
          | sAssignmentStmt:
          @AssignmentStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           .tAssignBegin
           @Variable
            [ oSymbolStkChooseKind (syVarParameter)
            | syVarParameter:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 4060
            oValuePop
            .tFetchAddress
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sIdentifier)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           [ oTypeStkChooseKind (tpInteger)
           | *:
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVarParameter)
             | *:
             [ oSymbolStkChooseKind (syVarParameter)
             | syVarParameter:
             @Variable
              [ oSymbolStkChooseKind (syVarParameter)
              | syVarParameter:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 4060
              oValuePop
              .tFetchAddress
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sInteger)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sInteger)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInteger)
             | *:
             >>
            ;BinaryOperator
            [ (sInteger)
            | *:
            }
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 10
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sAdd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sAdd)
             | sAdd:
             .tAdd
             oTypeStkPush(tpInteger)
             @CompareOperandAndResultTypes
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareOperandAndResultTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           @EmitAssign
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tAssignInteger
            ] or >
            >>
           ;EmitAssign
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           >>
          ;AssignmentStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        .tCaseElseEnd
        ] or >
        [ oCountChoose (two)
        | *:
        oFixPopForwardBranch
        oCountDecrement
        }
        [ oCountChoose (one)
        | *:
        oFixPopForwardBranch
        oCountDecrement
        }
        [ oCountChoose (zero)
        | zero:
        ] or >
        oCasePopDisplay
        oCountPop
        >>
       ;CaseStmt
       ] or >
       }
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4068
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 4068
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 1
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sAdd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sAdd)
          | sAdd:
          .tAdd
          oTypeStkPush(tpInteger)
          @CompareOperandAndResultTypes
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareOperandAndResultTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tAssignInteger
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     .tWhileEnd
     oFixPopTargetAddress
     % value emitted 2772
     oFixPopForwardBranch
     >>
    ;WhileStmt
    ] or >
    }
    [ (sWhileStmt)
    | sWhileStmt:
    @WhileStmt
     .tWhileBegin
     oFixPushTargetAddress
     @BooleanControlExpression
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVarParameter)
        | *:
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        @Variable
         [ oSymbolStkChooseKind (syVarParameter)
         | syVarParameter:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4060
         oValuePop
         .tFetchAddress
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sInteger)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sInteger)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sInteger)
        | *:
        >>
       ;BinaryOperator
       [ (sInteger)
       | *:
       }
       @Operand
        [ (sInteger)
        | sInteger:
        oValuePushInteger
        oSymbolStkPush(syExpression)
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        .tLiteralInteger
        oEmitValue
        % value emitted 21
        oValuePop
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sGT)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sGT)
        | sGT:
        .tGT
        @CompareRelationalOperandTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkPop
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         oTypeStkPop
         oTypeStkPush(tpBoolean)
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareRelationalOperandTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sInfixAnd)
       | *:
       }
       @Operand
        [ (sInfixAnd)
        | *:
        >>
       ;Operand
       @UnaryOperator
        [ (sInfixAnd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sInfixAnd)
        | sInfixAnd:
        .tInfixAnd
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sIdentifier)
       | *:
       }
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4064
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sInteger)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sInteger)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sInteger)
        | *:
        >>
       ;BinaryOperator
       [ (sInteger)
       | *:
       }
       @Operand
        [ (sInteger)
        | sInteger:
        oValuePushInteger
        oSymbolStkPush(syExpression)
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        .tLiteralInteger
        oEmitValue
        % value emitted 0
        oValuePop
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sGT)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sGT)
        | sGT:
        .tGT
        @CompareRelationalOperandTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkPop
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         oTypeStkPop
         oTypeStkPush(tpBoolean)
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareRelationalOperandTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sAnd)
       | *:
       }
       @Operand
        [ (sAnd)
        | *:
        >>
       ;Operand
       @UnaryOperator
        [ (sAnd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sAnd)
        | sAnd:
        .tAnd
        oTypeStkPush(tpBoolean)
        @CompareOperandAndResultTypes
         @CompareAndSwapTypes
          [ oTypeStkChooseKind (tpBoolean)
          | tpBoolean:
          oTypeStkSwap
          [ oTypeStkChooseKind (tpBoolean)
          | tpBoolean:
          ] or >
          ] or >
          >>
         ;CompareAndSwapTypes
         oTypeStkPop
         @CompareAndSwapTypes
          [ oTypeStkChooseKind (tpBoolean)
          | tpBoolean:
          oTypeStkSwap
          [ oTypeStkChooseKind (tpBoolean)
          | tpBoolean:
          ] or >
          ] or >
          >>
         ;CompareAndSwapTypes
         oTypeStkPop
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareOperandAndResultTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;BooleanControlExpression
     .tWhileTest
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oFixSwap
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sNullStmt)
       | sNullStmt:
       ] or >
       }
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVarParameter)
         | syVarParameter:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4060
         oValuePop
         .tFetchAddress
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVarParameter)
          | *:
          [ oSymbolStkChooseKind (syVarParameter)
          | syVarParameter:
          @Variable
           [ oSymbolStkChooseKind (syVarParameter)
           | syVarParameter:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 4060
           oValuePop
           .tFetchAddress
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 10
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sSubtract)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sSubtract)
          | sSubtract:
          .tSubtract
          oTypeStkPush(tpInteger)
          @CompareOperandAndResultTypes
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareOperandAndResultTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tAssignInteger
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4064
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 4064
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 1
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sSubtract)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sSubtract)
          | sSubtract:
          .tSubtract
          oTypeStkPush(tpInteger)
          @CompareOperandAndResultTypes
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareOperandAndResultTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tAssignInteger
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     .tWhileEnd
     oFixPopTargetAddress
     % value emitted 2900
     oFixPopForwardBranch
     >>
    ;WhileStmt
    ] or >
    }
    [ (sAssignmentStmt)
    | sAssignmentStmt:
    @AssignmentStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     .tAssignBegin
     @Variable
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4056
      oValuePop
      .tFetchAddress
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sIdentifier)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     [ oTypeStkChooseKind (tpBoolean)
     | *:
     @Expression
      @Operand
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 4064
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sInteger)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       @VariableOperand
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tFetchInteger
        ] or >
        >>
       ;VariableOperand
       ] or >
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sInteger)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sInteger)
       | *:
       >>
      ;BinaryOperator
      [ (sInteger)
      | *:
      }
      @Operand
       [ (sInteger)
       | sInteger:
       oValuePushInteger
       oSymbolStkPush(syExpression)
       oTypeStkPush(tpInteger)
       oTypeStkLinkToStandardType(stdInteger)
       .tLiteralInteger
       oEmitValue
       % value emitted 0
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sGT)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sGT)
       | sGT:
       .tGT
       @CompareRelationalOperandTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkPop
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        oTypeStkPop
        oTypeStkPush(tpBoolean)
        oSymbolStkPop
        oSymbolStkSetKind(syExpression)
        >>
       ;CompareRelationalOperandTypes
       ] or >
       oSymbolStkSetKind(syExpression)
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     @EmitAssign
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      .tAssignBoolean
      ] or >
      >>
     ;EmitAssign
     oTypeStkPop
     oSymbolStkPop
     oTypeStkPop
     oSymbolStkPop
     >>
    ;AssignmentStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sProcedure)
  | sProcedure:
  @ProcedureDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   .tSkipProc
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oSymbolStkSetKind(syProcedure)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   @PublicDefinition
    [ (sParmEnd)
    | *:
    >>
   ;PublicDefinition
   oSymbolTblEnter
   oSymbolTblPushScope
   @ProcedureHeading
    oCountPush(zero)
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    @ProcedurePrologue
     @CountPushCopy
      oValuePushCount
      oCountPushValue
      oValuePop
      >>
     ;CountPushCopy
     [ oCountChoose (zero)
     | zero:
     oCountPop
     .tParmEnd
     ] or >
     oTypeStkEnterParameterCount
     oCountPop
     >>
    ;ProcedurePrologue
    >>
   ;ProcedureHeading
   @Block
    ?sBegin (sBegin)
    [ (sVar)
    | sVar:
    @VariableDeclarations
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     @PublicDefinition
      [ (sLike)
      | *:
      >>
     ;PublicDefinition
     [ (sLike)
     | *:
     @TypeBody
      [ (sLike)
      | *:
      @SimpleType
       ?sLike (sLike)
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syConstant)
       | syConstant:
       oTypeStkPushSymbol
       ] or >
       oSymbolStkPop
       ] or >
       >>
      ;SimpleType
      @TypeTblEnterIfNew
       [ oTypeStkChooseTypeReference (yes)
       | *:
       >>
      ;TypeTblEnterIfNew
      >>
     ;TypeBody
     @EnterVariableAttributes
      [ oSymbolStkChooseKind (syUndefined)
      | *:
      oSymbolStkSetKind(syVariable)
      [ oTypeStkChooseKind (tpBoolean)
      | *:
      @AllocateVar
       [ oSymbolStkChooseKind (syVariable)
       | *:
       [ oTypeStkChooseKind (tpBoolean)
       | tpBoolean:
       oSymbolStkEnterDataAddress
       oAllocateVariable
       ] or >
       >>
      ;AllocateVar
      oSymbolStkEnterTypeReference
      oSymbolTblEnter
      >>
     ;EnterVariableAttributes
     oTypeStkPop
     oSymbolStkPop
     >>
    ;VariableDeclarations
    ] or >
    }
    [ (sCallStmt)
    | sCallStmt:
    @CallStmt
     ?sIdentifier (sIdentifier)
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syProcedure)
     | *:
     [ oSymbolStkChooseKind (syProcedure)
     | syProcedure:
     [ oSymbolStkChooseStandardRoutine (rtNull)
     | *:
     .tCallBegin
     oTypeStkPushSymbol
     [ oTypeStkChooseRecursionFlag (no)
     | *:
     @ActualParameters
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 84
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sExpnEnd)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpInteger)
       | tpInteger:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      @VarActual
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 44
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       .tVarParm
       [ oTypeStkCompareNames (yes)
       | yes:
       ] or >
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       ] or >
       >>
      ;VarActual
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      @VarActual
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 4072
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       .tVarParm
       [ oTypeStkCompareNames (yes)
       | yes:
       ] or >
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       ] or >
       >>
      ;VarActual
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sIdentifier)
      | *:
      [ oTypeStkCompareParameterCount (no)
      | *:
      oCountIncrement
      oSymbolStkPushFormalParameter
      oTypeStkPushSymbol
      [ oSymbolStkChooseKind (syVarParameter)
      | syVarParameter:
      @VarActual
       [ (sIdentifier)
       | sIdentifier:
       oSymbolStkPushIdentifier
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 100
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sExpnEnd)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       .tVarParm
       [ oTypeStkCompareNames (yes)
       | yes:
       ] or >
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       ] or >
       >>
      ;VarActual
      ] or >
      oSymbolStkPop
      oTypeStkPop
      oSymbolStkPop
      oTypeStkPop
      .tParmEnd
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      [ oTypeStkCompareParameterCount (yes)
      | yes:
      ] or >
      oCountPop
      >>
     ;ActualParameters
     .tCallEnd
     oValuePushSymbol
     oEmitValue
     % value emitted 2727
     oValuePop
     oTypeStkPop
     ] or >
     oSymbolStkPop
     >>
    ;CallStmt
    ] or >
    }
    [ (sIfStmt)
    | sIfStmt:
    @IfStmt
     .tIfBegin
     @BooleanControlExpression
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 100
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sInteger)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tFetchInteger
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sInteger)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sInteger)
        | *:
        >>
       ;BinaryOperator
       [ (sInteger)
       | *:
       }
       @Operand
        [ (sInteger)
        | sInteger:
        oValuePushInteger
        oSymbolStkPush(syExpression)
        oTypeStkPush(tpInteger)
        oTypeStkLinkToStandardType(stdInteger)
        .tLiteralInteger
        oEmitValue
        % value emitted 21
        oValuePop
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sGT)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sGT)
        | sGT:
        .tGT
        @CompareRelationalOperandTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkPop
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         oTypeStkPop
         oTypeStkPush(tpBoolean)
         oSymbolStkPop
         oSymbolStkSetKind(syExpression)
         >>
        ;CompareRelationalOperandTypes
        ] or >
        oSymbolStkSetKind(syExpression)
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;BooleanControlExpression
     ?sThen (sThen)
     .tIfThen
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWrite)
        | rtWrite:
        .tWriteBegin
        @WriteProcedure
         [ (sStringLiteral)
         | *:
         @WriteStandardExpnList
          oSymbolStkPushStandardVariable(stdOutput)
          [ oSymbolStkChooseKind (syVariable)
          | *:
          oValuePushSymbol
          oSymbolStkPop
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 17
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 68
             % value emitted 101
             % value emitted 97
             % value emitted 108
             % value emitted 101
             % value emitted 114
             % value emitted 32
             % value emitted 103
             % value emitted 111
             % value emitted 101
             % value emitted 115
             % value emitted 32
             % value emitted 98
             % value emitted 117
             % value emitted 115
             % value emitted 116
             % value emitted 46
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -3012
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sParmEnd)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          oValuePop
          >>
         ;WriteStandardExpnList
         .tWriteEnd
         >>
        ;WriteProcedure
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWriteln)
        | rtWriteln:
        .tTrapBegin
        @WritelnProcedure
         [ (sParmEnd)
         | sParmEnd:
         oSymbolStkPushStandardVariable(stdOutput)
         [ oSymbolStkChooseKind (syVariable)
         | *:
         oValuePushSymbol
         .tLiteralAddress
         oEmitValue
         % value emitted 4
         oValuePop
         oSymbolStkPop
         .tVarParm
         .tParmEnd
         ] or >
         >>
        ;WritelnProcedure
        .tTrap
        oEmitTrapKind(trWriteln)
        % value emitted 6
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 108
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpBoolean)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syConstant)
          | *:
          [ oSymbolStkChooseKind (syConstant)
          | syConstant:
          @ConstantOperand
           oTypeStkPushSymbol
           oValuePushSymbol
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tLiteralBoolean
           oEmitValue
           % value emitted 1
           ] or >
           oValuePop
           >>
          ;ConstantOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         .tAssignBoolean
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sAssignmentStmt)
       | sAssignmentStmt:
       @AssignmentStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        .tAssignBegin
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 92
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sIdentifier)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 92
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 1
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sAdd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sAdd)
          | sAdd:
          .tAdd
          oTypeStkPush(tpInteger)
          @CompareOperandAndResultTypes
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           oTypeStkPop
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareOperandAndResultTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        @EmitAssign
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         .tAssignInteger
         ] or >
         >>
        ;EmitAssign
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        >>
       ;AssignmentStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     [ (sElse)
     | sElse:
     .tIfMerge
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oFixSwap
     oFixPopForwardBranch
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sIfStmt)
       | sIfStmt:
       @IfStmt
        .tIfBegin
        @BooleanControlExpression
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 100
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sInteger)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sInteger)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sInteger)
           | *:
           >>
          ;BinaryOperator
          [ (sInteger)
          | *:
          }
          @Operand
           [ (sInteger)
           | sInteger:
           oValuePushInteger
           oSymbolStkPush(syExpression)
           oTypeStkPush(tpInteger)
           oTypeStkLinkToStandardType(stdInteger)
           .tLiteralInteger
           oEmitValue
           % value emitted 21
           oValuePop
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sEq)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sEq)
           | sEq:
           [ oTypeStkChooseKind (tpInteger)
           | *:
           .tEQ
           @CompareEqualityOperandTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkPop
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            oTypeStkPop
            oTypeStkPush(tpBoolean)
            oSymbolStkPop
            oSymbolStkSetKind(syExpression)
            >>
           ;CompareEqualityOperandTypes
           ] or >
           oSymbolStkSetKind(syExpression)
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         >>
        ;BooleanControlExpression
        ?sThen (sThen)
        .tIfThen
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 23
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 68
                % value emitted 101
                % value emitted 97
                % value emitted 108
                % value emitted 101
                % value emitted 114
                % value emitted 32
                % value emitted 99
                % value emitted 97
                % value emitted 108
                % value emitted 108
                % value emitted 115
                % value emitted 32
                % value emitted 98
                % value emitted 108
                % value emitted 97
                % value emitted 99
                % value emitted 107
                % value emitted 106
                % value emitted 97
                % value emitted 99
                % value emitted 107
                % value emitted 46
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -3092
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWriteln)
           | rtWriteln:
           .tTrapBegin
           @WritelnProcedure
            [ (sParmEnd)
            | sParmEnd:
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            oValuePop
            oSymbolStkPop
            .tVarParm
            .tParmEnd
            ] or >
            >>
           ;WritelnProcedure
           .tTrap
           oEmitTrapKind(trWriteln)
           % value emitted 6
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sAssignmentStmt)
          | sAssignmentStmt:
          @AssignmentStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           .tAssignBegin
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 108
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sIdentifier)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           [ oTypeStkChooseKind (tpBoolean)
           | *:
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syConstant)
             | *:
             [ oSymbolStkChooseKind (syConstant)
             | syConstant:
             @ConstantOperand
              oTypeStkPushSymbol
              oValuePushSymbol
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              .tLiteralBoolean
              oEmitValue
              % value emitted 1
              ] or >
              oValuePop
              >>
             ;ConstantOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           @EmitAssign
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            .tAssignBoolean
            ] or >
            >>
           ;EmitAssign
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           >>
          ;AssignmentStmt
          ] or >
          }
          [ (sAssignmentStmt)
          | sAssignmentStmt:
          @AssignmentStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           .tAssignBegin
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 96
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sIdentifier)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           [ oTypeStkChooseKind (tpInteger)
           | *:
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 96
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sInteger)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sInteger)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInteger)
             | *:
             >>
            ;BinaryOperator
            [ (sInteger)
            | *:
            }
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 1
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sAdd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sAdd)
             | sAdd:
             .tAdd
             oTypeStkPush(tpInteger)
             @CompareOperandAndResultTypes
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareOperandAndResultTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           @EmitAssign
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tAssignInteger
            ] or >
            >>
           ;EmitAssign
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           >>
          ;AssignmentStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        [ (sElse)
        | sElse:
        .tIfMerge
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        oFixSwap
        oFixPopForwardBranch
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sIfStmt)
          | sIfStmt:
          @IfStmt
           .tIfBegin
           @BooleanControlExpression
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 100
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sInteger)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sInteger)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sInteger)
              | *:
              >>
             ;BinaryOperator
             [ (sInteger)
             | *:
             }
             @Operand
              [ (sInteger)
              | sInteger:
              oValuePushInteger
              oSymbolStkPush(syExpression)
              oTypeStkPush(tpInteger)
              oTypeStkLinkToStandardType(stdInteger)
              .tLiteralInteger
              oEmitValue
              % value emitted 17
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sLT)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sLT)
              | sLT:
              .tLT
              @CompareRelationalOperandTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkPop
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               oTypeStkPop
               oTypeStkPush(tpBoolean)
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareRelationalOperandTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            >>
           ;BooleanControlExpression
           ?sThen (sThen)
           .tIfThen
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtNull)
              | *:
              .tCallBegin
              oTypeStkPushSymbol
              [ oTypeStkChooseRecursionFlag (no)
              | *:
              @ActualParameters
               oCountPush(zero)
               [ (sParmEnd)
               | sParmEnd:
               ] or >
               [ oTypeStkCompareParameterCount (yes)
               | yes:
               ] or >
               oCountPop
               >>
              ;ActualParameters
              .tCallEnd
              oValuePushSymbol
              oEmitValue
              % value emitted 2452
              oValuePop
              oTypeStkPop
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           [ (sElse)
           | sElse:
           .tIfMerge
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           oFixSwap
           oFixPopForwardBranch
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sAssignmentStmt)
             | sAssignmentStmt:
             @AssignmentStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              .tAssignBegin
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 108
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              [ oTypeStkChooseKind (tpBoolean)
              | *:
              @Expression
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syConstant)
                | *:
                [ oSymbolStkChooseKind (syConstant)
                | syConstant:
                @ConstantOperand
                 oTypeStkPushSymbol
                 oValuePushSymbol
                 [ oTypeStkChooseKind (tpBoolean)
                 | tpBoolean:
                 .tLiteralBoolean
                 oEmitValue
                 % value emitted 1
                 ] or >
                 oValuePop
                 >>
                ;ConstantOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sExpnEnd)
                | *:
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              @EmitAssign
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               .tAssignBoolean
               ] or >
               >>
              ;EmitAssign
              oTypeStkPop
              oSymbolStkPop
              oTypeStkPop
              oSymbolStkPop
              >>
             ;AssignmentStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           ] or >
           .tIfEnd
           oFixPopForwardBranch
           >>
          ;IfStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        ] or >
        .tIfEnd
        oFixPopForwardBranch
        >>
       ;IfStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     ] or >
     .tIfEnd
     oFixPopForwardBranch
     >>
    ;IfStmt
    ] or >
    }
    [ (sIfStmt)
    | sIfStmt:
    @IfStmt
     .tIfBegin
     @BooleanControlExpression
      @Expression
       @Operand
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 108
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sExpnEnd)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        @VariableOperand
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         .tFetchBoolean
         ] or >
         >>
        ;VariableOperand
        ] or >
        ] or >
        >>
       ;Operand
       @UnaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;UnaryOperator
       @BinaryOperator
        [ (sExpnEnd)
        | *:
        >>
       ;BinaryOperator
       [ (sExpnEnd)
       | sExpnEnd:
       ] or >
       >>
      ;Expression
      [ oTypeStkChooseKind (tpBoolean)
      | tpBoolean:
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;BooleanControlExpression
     ?sThen (sThen)
     .tIfThen
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWrite)
        | rtWrite:
        .tWriteBegin
        @WriteProcedure
         [ (sStringLiteral)
         | *:
         @WriteStandardExpnList
          oSymbolStkPushStandardVariable(stdOutput)
          [ oSymbolStkChooseKind (syVariable)
          | *:
          oValuePushSymbol
          oSymbolStkPop
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 19
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 68
             % value emitted 101
             % value emitted 97
             % value emitted 108
             % value emitted 101
             % value emitted 114
             % value emitted 32
             % value emitted 115
             % value emitted 116
             % value emitted 97
             % value emitted 110
             % value emitted 100
             % value emitted 115
             % value emitted 32
             % value emitted 119
             % value emitted 105
             % value emitted 116
             % value emitted 104
             % value emitted 32
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -3208
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sIdentifier)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sIdentifier)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 100
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sExpnEnd)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sFieldWidth)
           | sFieldWidth:
           @Expression
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 1
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           ] or >
           .tParmEnd
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tTrap
           oEmitTrapKind(trWriteInteger)
           % value emitted 8
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 1
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 46
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -3260
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sParmEnd)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          oValuePop
          >>
         ;WriteStandardExpnList
         .tWriteEnd
         >>
        ;WriteProcedure
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWriteln)
        | rtWriteln:
        .tTrapBegin
        @WritelnProcedure
         [ (sParmEnd)
         | sParmEnd:
         oSymbolStkPushStandardVariable(stdOutput)
         [ oSymbolStkChooseKind (syVariable)
         | *:
         oValuePushSymbol
         .tLiteralAddress
         oEmitValue
         % value emitted 4
         oValuePop
         oSymbolStkPop
         .tVarParm
         .tParmEnd
         ] or >
         >>
        ;WritelnProcedure
        .tTrap
        oEmitTrapKind(trWriteln)
        % value emitted 6
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sIfStmt)
       | sIfStmt:
       @IfStmt
        .tIfBegin
        @BooleanControlExpression
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 100
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sIdentifier)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sIdentifier)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sIdentifier)
           | *:
           >>
          ;BinaryOperator
          [ (sIdentifier)
          | *:
          }
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 104
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sGT)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sGT)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sGT)
           | sGT:
           .tGT
           @CompareRelationalOperandTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkPop
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            oTypeStkPop
            oTypeStkPush(tpBoolean)
            oSymbolStkPop
            oSymbolStkSetKind(syExpression)
            >>
           ;CompareRelationalOperandTypes
           ] or >
           oSymbolStkSetKind(syExpression)
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         ] or >
         oSymbolStkPop
         oTypeStkPop
         >>
        ;BooleanControlExpression
        ?sThen (sThen)
        .tIfThen
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWrite)
           | rtWrite:
           .tWriteBegin
           @WriteProcedure
            [ (sStringLiteral)
            | *:
            @WriteStandardExpnList
             oSymbolStkPushStandardVariable(stdOutput)
             [ oSymbolStkChooseKind (syVariable)
             | *:
             oValuePushSymbol
             oSymbolStkPop
             [ (sStringLiteral)
             | *:
             .tTrapBegin
             .tLiteralAddress
             oEmitValue
             % value emitted 4
             .tVarParm
             .tParmEnd
             @Expression
              @Operand
               [ (sStringLiteral)
               | sStringLiteral:
               oSymbolStkPush(syExpression)
               @StringLiteral
                .tSkipString
                oFixPushForwardBranch
                oEmitNullAddress
                % value emitted -32767
                .tStringData
                oValuePushStringLength
                oEmitValue
                % value emitted 11
                oValuePop
                oValuePushCodeAddress
                oValueNegate
                oEmitString
                % value emitted 72
                % value emitted 111
                % value emitted 117
                % value emitted 115
                % value emitted 101
                % value emitted 32
                % value emitted 119
                % value emitted 105
                % value emitted 110
                % value emitted 115
                % value emitted 46
                % value emitted 0
                oFixPopForwardBranch
                oTypeStkPush(tpChar)
                oTypeStkLinkToStandardType(stdChar)
                >>
               ;StringLiteral
               .tLiteralAddress
               oEmitValue
               % value emitted -3303
               .tFetchChar
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             .tParmEnd
             @WriteText
              [ (sParmEnd)
              | *:
              [ oTypeStkChooseKind (tpChar)
              | *:
              oValuePush(zero)
              .tLiteralInteger
              oEmitValue
              % value emitted 0
              oValuePop
              .tParmEnd
              [ oTypeStkChooseKind (tpChar)
              | tpChar:
              .tTrap
              oEmitTrapKind(trWriteString)
              % value emitted 109
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;WriteText
             }
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             oValuePop
             >>
            ;WriteStandardExpnList
            .tWriteEnd
            >>
           ;WriteProcedure
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sCallStmt)
          | sCallStmt:
          @CallStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syProcedure)
           | *:
           [ oSymbolStkChooseKind (syProcedure)
           | syProcedure:
           [ oSymbolStkChooseStandardRoutine (rtWriteln)
           | rtWriteln:
           .tTrapBegin
           @WritelnProcedure
            [ (sParmEnd)
            | sParmEnd:
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            oValuePop
            oSymbolStkPop
            .tVarParm
            .tParmEnd
            ] or >
            >>
           ;WritelnProcedure
           .tTrap
           oEmitTrapKind(trWriteln)
           % value emitted 6
           ] or >
           ] or >
           oSymbolStkPop
           >>
          ;CallStmt
          ] or >
          }
          [ (sAssignmentStmt)
          | sAssignmentStmt:
          @AssignmentStmt
           ?sIdentifier (sIdentifier)
           oSymbolStkPushIdentifier
           .tAssignBegin
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 96
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sIdentifier)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           [ oTypeStkChooseKind (tpInteger)
           | *:
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 96
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sInteger)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sInteger)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInteger)
             | *:
             >>
            ;BinaryOperator
            [ (sInteger)
            | *:
            }
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 1
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sAdd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sAdd)
             | sAdd:
             .tAdd
             oTypeStkPush(tpInteger)
             @CompareOperandAndResultTypes
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareOperandAndResultTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           @EmitAssign
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tAssignInteger
            ] or >
            >>
           ;EmitAssign
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           >>
          ;AssignmentStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        [ (sElse)
        | sElse:
        .tIfMerge
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        oFixSwap
        oFixPopForwardBranch
        @Statement
         oSymbolTblPushScope
         @Block
          ?sBegin (sBegin)
          [ (sIfStmt)
          | sIfStmt:
          @IfStmt
           .tIfBegin
           @BooleanControlExpression
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 100
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sIdentifier)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sIdentifier)
              | *:
              >>
             ;BinaryOperator
             [ (sIdentifier)
             | *:
             }
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 104
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sLT)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sLT)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sLT)
              | sLT:
              .tLT
              @CompareRelationalOperandTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkPop
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               oTypeStkPop
               oTypeStkPush(tpBoolean)
               oSymbolStkPop
               oSymbolStkSetKind(syExpression)
               >>
              ;CompareRelationalOperandTypes
              ] or >
              oSymbolStkSetKind(syExpression)
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            [ oTypeStkChooseKind (tpBoolean)
            | tpBoolean:
            ] or >
            oSymbolStkPop
            oTypeStkPop
            >>
           ;BooleanControlExpression
           ?sThen (sThen)
           .tIfThen
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtNull)
              | *:
              .tCallBegin
              oTypeStkPushSymbol
              [ oTypeStkChooseRecursionFlag (no)
              | *:
              @ActualParameters
               oCountPush(zero)
               [ (sParmEnd)
               | sParmEnd:
               ] or >
               [ oTypeStkCompareParameterCount (yes)
               | yes:
               ] or >
               oCountPop
               >>
              ;ActualParameters
              .tCallEnd
              oValuePushSymbol
              oEmitValue
              % value emitted 785
              oValuePop
              oTypeStkPop
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWrite)
              | rtWrite:
              .tWriteBegin
              @WriteProcedure
               [ (sStringLiteral)
               | *:
               @WriteStandardExpnList
                oSymbolStkPushStandardVariable(stdOutput)
                [ oSymbolStkChooseKind (syVariable)
                | *:
                oValuePushSymbol
                oSymbolStkPop
                [ (sStringLiteral)
                | *:
                .tTrapBegin
                .tLiteralAddress
                oEmitValue
                % value emitted 4
                .tVarParm
                .tParmEnd
                @Expression
                 @Operand
                  [ (sStringLiteral)
                  | sStringLiteral:
                  oSymbolStkPush(syExpression)
                  @StringLiteral
                   .tSkipString
                   oFixPushForwardBranch
                   oEmitNullAddress
                   % value emitted -32767
                   .tStringData
                   oValuePushStringLength
                   oEmitValue
                   % value emitted 6
                   oValuePop
                   oValuePushCodeAddress
                   oValueNegate
                   oEmitString
                   % value emitted 32
                   % value emitted 119
                   % value emitted 105
                   % value emitted 110
                   % value emitted 115
                   % value emitted 46
                   % value emitted 0
                   oFixPopForwardBranch
                   oTypeStkPush(tpChar)
                   oTypeStkLinkToStandardType(stdChar)
                   >>
                  ;StringLiteral
                  .tLiteralAddress
                  oEmitValue
                  % value emitted -3375
                  .tFetchChar
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                .tParmEnd
                @WriteText
                 [ (sParmEnd)
                 | *:
                 [ oTypeStkChooseKind (tpChar)
                 | *:
                 oValuePush(zero)
                 .tLiteralInteger
                 oEmitValue
                 % value emitted 0
                 oValuePop
                 .tParmEnd
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tTrap
                 oEmitTrapKind(trWriteString)
                 % value emitted 109
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 >>
                ;WriteText
                }
                [ (sParmEnd)
                | sParmEnd:
                ] or >
                oValuePop
                >>
               ;WriteStandardExpnList
               .tWriteEnd
               >>
              ;WriteProcedure
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWriteln)
              | rtWriteln:
              .tTrapBegin
              @WritelnProcedure
               [ (sParmEnd)
               | sParmEnd:
               oSymbolStkPushStandardVariable(stdOutput)
               [ oSymbolStkChooseKind (syVariable)
               | *:
               oValuePushSymbol
               .tLiteralAddress
               oEmitValue
               % value emitted 4
               oValuePop
               oSymbolStkPop
               .tVarParm
               .tParmEnd
               ] or >
               >>
              ;WritelnProcedure
              .tTrap
              oEmitTrapKind(trWriteln)
              % value emitted 6
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sAssignmentStmt)
             | sAssignmentStmt:
             @AssignmentStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              .tAssignBegin
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 92
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sIdentifier)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              [ oTypeStkChooseKind (tpInteger)
              | *:
              @Expression
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syVariable)
                | *:
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 92
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sInteger)
                  | *:
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                @VariableOperand
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 .tFetchInteger
                 ] or >
                 >>
                ;VariableOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sInteger)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sInteger)
                | *:
                >>
               ;BinaryOperator
               [ (sInteger)
               | *:
               }
               @Operand
                [ (sInteger)
                | sInteger:
                oValuePushInteger
                oSymbolStkPush(syExpression)
                oTypeStkPush(tpInteger)
                oTypeStkLinkToStandardType(stdInteger)
                .tLiteralInteger
                oEmitValue
                % value emitted 1
                oValuePop
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sAdd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sAdd)
                | sAdd:
                .tAdd
                oTypeStkPush(tpInteger)
                @CompareOperandAndResultTypes
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 oTypeStkPop
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpInteger)
                  | tpInteger:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 oTypeStkPop
                 oSymbolStkPop
                 oSymbolStkSetKind(syExpression)
                 >>
                ;CompareOperandAndResultTypes
                ] or >
                oSymbolStkSetKind(syExpression)
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              @EmitAssign
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tAssignInteger
               ] or >
               >>
              ;EmitAssign
              oTypeStkPop
              oSymbolStkPop
              oTypeStkPop
              oSymbolStkPop
              >>
             ;AssignmentStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           [ (sElse)
           | sElse:
           .tIfMerge
           oFixPushForwardBranch
           oEmitNullAddress
           % value emitted -32767
           oFixSwap
           oFixPopForwardBranch
           @Statement
            oSymbolTblPushScope
            @Block
             ?sBegin (sBegin)
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWrite)
              | rtWrite:
              .tWriteBegin
              @WriteProcedure
               [ (sStringLiteral)
               | *:
               @WriteStandardExpnList
                oSymbolStkPushStandardVariable(stdOutput)
                [ oSymbolStkChooseKind (syVariable)
                | *:
                oValuePushSymbol
                oSymbolStkPop
                [ (sStringLiteral)
                | *:
                .tTrapBegin
                .tLiteralAddress
                oEmitValue
                % value emitted 4
                .tVarParm
                .tParmEnd
                @Expression
                 @Operand
                  [ (sStringLiteral)
                  | sStringLiteral:
                  oSymbolStkPush(syExpression)
                  @StringLiteral
                   .tSkipString
                   oFixPushForwardBranch
                   oEmitNullAddress
                   % value emitted -32767
                   .tStringData
                   oValuePushStringLength
                   oEmitValue
                   % value emitted 9
                   oValuePop
                   oValuePushCodeAddress
                   oValueNegate
                   oEmitString
                   % value emitted 84
                   % value emitted 105
                   % value emitted 101
                   % value emitted 32
                   % value emitted 103
                   % value emitted 97
                   % value emitted 109
                   % value emitted 101
                   % value emitted 46
                   % value emitted 0
                   oFixPopForwardBranch
                   oTypeStkPush(tpChar)
                   oTypeStkLinkToStandardType(stdChar)
                   >>
                  ;StringLiteral
                  .tLiteralAddress
                  oEmitValue
                  % value emitted -3425
                  .tFetchChar
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sExpnEnd)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                .tParmEnd
                @WriteText
                 [ (sParmEnd)
                 | *:
                 [ oTypeStkChooseKind (tpChar)
                 | *:
                 oValuePush(zero)
                 .tLiteralInteger
                 oEmitValue
                 % value emitted 0
                 oValuePop
                 .tParmEnd
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tTrap
                 oEmitTrapKind(trWriteString)
                 % value emitted 109
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 >>
                ;WriteText
                }
                [ (sParmEnd)
                | sParmEnd:
                ] or >
                oValuePop
                >>
               ;WriteStandardExpnList
               .tWriteEnd
               >>
              ;WriteProcedure
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sCallStmt)
             | sCallStmt:
             @CallStmt
              ?sIdentifier (sIdentifier)
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syProcedure)
              | *:
              [ oSymbolStkChooseKind (syProcedure)
              | syProcedure:
              [ oSymbolStkChooseStandardRoutine (rtWriteln)
              | rtWriteln:
              .tTrapBegin
              @WritelnProcedure
               [ (sParmEnd)
               | sParmEnd:
               oSymbolStkPushStandardVariable(stdOutput)
               [ oSymbolStkChooseKind (syVariable)
               | *:
               oValuePushSymbol
               .tLiteralAddress
               oEmitValue
               % value emitted 4
               oValuePop
               oSymbolStkPop
               .tVarParm
               .tParmEnd
               ] or >
               >>
              ;WritelnProcedure
              .tTrap
              oEmitTrapKind(trWriteln)
              % value emitted 6
              ] or >
              ] or >
              oSymbolStkPop
              >>
             ;CallStmt
             ] or >
             }
             [ (sEnd)
             | *:
             ] or >
             ?sEnd (sEnd)
             >>
            ;Block
            oSymbolTblPopScope
            >>
           ;Statement
           ] or >
           .tIfEnd
           oFixPopForwardBranch
           >>
          ;IfStmt
          ] or >
          }
          [ (sEnd)
          | *:
          ] or >
          ?sEnd (sEnd)
          >>
         ;Block
         oSymbolTblPopScope
         >>
        ;Statement
        ] or >
        .tIfEnd
        oFixPopForwardBranch
        >>
       ;IfStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     [ (sElse)
     | sElse:
     .tIfMerge
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oFixSwap
     oFixPopForwardBranch
     @Statement
      oSymbolTblPushScope
      @Block
       ?sBegin (sBegin)
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWrite)
        | rtWrite:
        .tWriteBegin
        @WriteProcedure
         [ (sStringLiteral)
         | *:
         @WriteStandardExpnList
          oSymbolStkPushStandardVariable(stdOutput)
          [ oSymbolStkChooseKind (syVariable)
          | *:
          oValuePushSymbol
          oSymbolStkPop
          [ (sStringLiteral)
          | *:
          .tTrapBegin
          .tLiteralAddress
          oEmitValue
          % value emitted 4
          .tVarParm
          .tParmEnd
          @Expression
           @Operand
            [ (sStringLiteral)
            | sStringLiteral:
            oSymbolStkPush(syExpression)
            @StringLiteral
             .tSkipString
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             .tStringData
             oValuePushStringLength
             oEmitValue
             % value emitted 32
             oValuePop
             oValuePushCodeAddress
             oValueNegate
             oEmitString
             % value emitted 68
             % value emitted 101
             % value emitted 97
             % value emitted 108
             % value emitted 101
             % value emitted 114
             % value emitted 32
             % value emitted 116
             % value emitted 97
             % value emitted 107
             % value emitted 101
             % value emitted 115
             % value emitted 32
             % value emitted 97
             % value emitted 32
             % value emitted 99
             % value emitted 97
             % value emitted 114
             % value emitted 100
             % value emitted 32
             % value emitted 97
             % value emitted 110
             % value emitted 100
             % value emitted 32
             % value emitted 110
             % value emitted 111
             % value emitted 119
             % value emitted 32
             % value emitted 104
             % value emitted 97
             % value emitted 115
             % value emitted 32
             % value emitted 0
             oFixPopForwardBranch
             oTypeStkPush(tpChar)
             oTypeStkLinkToStandardType(stdChar)
             >>
            ;StringLiteral
            .tLiteralAddress
            oEmitValue
            % value emitted -3472
            .tFetchChar
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          .tParmEnd
          @WriteText
           [ (sParmEnd)
           | *:
           [ oTypeStkChooseKind (tpChar)
           | *:
           oValuePush(zero)
           .tLiteralInteger
           oEmitValue
           % value emitted 0
           oValuePop
           .tParmEnd
           [ oTypeStkChooseKind (tpChar)
           | tpChar:
           .tTrap
           oEmitTrapKind(trWriteString)
           % value emitted 109
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;WriteText
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          oValuePop
          >>
         ;WriteStandardExpnList
         .tWriteEnd
         >>
        ;WriteProcedure
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtNull)
        | *:
        .tCallBegin
        oTypeStkPushSymbol
        [ oTypeStkChooseRecursionFlag (no)
        | *:
        @ActualParameters
         oCountPush(zero)
         [ (sIdentifier)
         | *:
         [ oTypeStkCompareParameterCount (no)
         | *:
         oCountIncrement
         oSymbolStkPushFormalParameter
         oTypeStkPushSymbol
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Expression
          @Operand
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           [ oSymbolStkChooseKind (syVariable)
           | *:
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 84
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sExpnEnd)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           @VariableOperand
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            .tFetchInteger
            ] or >
            >>
           ;VariableOperand
           ] or >
           ] or >
           >>
          ;Operand
          @UnaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;UnaryOperator
          @BinaryOperator
           [ (sExpnEnd)
           | *:
           >>
          ;BinaryOperator
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          >>
         ;Expression
         @CompareAndSwapTypes
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          oTypeStkSwap
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          ] or >
          ] or >
          >>
         ;CompareAndSwapTypes
         ] or >
         oSymbolStkPop
         oTypeStkPop
         oSymbolStkPop
         oTypeStkPop
         .tParmEnd
         }
         [ (sIdentifier)
         | *:
         [ oTypeStkCompareParameterCount (no)
         | *:
         oCountIncrement
         oSymbolStkPushFormalParameter
         oTypeStkPushSymbol
         [ oSymbolStkChooseKind (syVarParameter)
         | syVarParameter:
         @VarActual
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 44
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sExpnEnd)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          .tVarParm
          [ oTypeStkCompareNames (yes)
          | yes:
          ] or >
          [ (sExpnEnd)
          | sExpnEnd:
          ] or >
          ] or >
          >>
         ;VarActual
         ] or >
         oSymbolStkPop
         oTypeStkPop
         oSymbolStkPop
         oTypeStkPop
         .tParmEnd
         }
         [ (sParmEnd)
         | sParmEnd:
         ] or >
         [ oTypeStkCompareParameterCount (yes)
         | yes:
         ] or >
         oCountPop
         >>
        ;ActualParameters
        .tCallEnd
        oValuePushSymbol
        oEmitValue
        % value emitted 437
        oValuePop
        oTypeStkPop
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sCallStmt)
       | sCallStmt:
       @CallStmt
        ?sIdentifier (sIdentifier)
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syProcedure)
        | *:
        [ oSymbolStkChooseKind (syProcedure)
        | syProcedure:
        [ oSymbolStkChooseStandardRoutine (rtWriteln)
        | rtWriteln:
        .tTrapBegin
        @WritelnProcedure
         [ (sParmEnd)
         | sParmEnd:
         oSymbolStkPushStandardVariable(stdOutput)
         [ oSymbolStkChooseKind (syVariable)
         | *:
         oValuePushSymbol
         .tLiteralAddress
         oEmitValue
         % value emitted 4
         oValuePop
         oSymbolStkPop
         .tVarParm
         .tParmEnd
         ] or >
         >>
        ;WritelnProcedure
        .tTrap
        oEmitTrapKind(trWriteln)
        % value emitted 6
        ] or >
        ] or >
        oSymbolStkPop
        >>
       ;CallStmt
       ] or >
       }
       [ (sEnd)
       | *:
       ] or >
       ?sEnd (sEnd)
       >>
      ;Block
      oSymbolTblPopScope
      >>
     ;Statement
     ] or >
     .tIfEnd
     oFixPopForwardBranch
     >>
    ;IfStmt
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblPopScope
   oSymbolTblPreserveParameters
   .tProcedureEnd
   oFixPopForwardBranch
   >>
  ;ProcedureDefinition
  ] or >
  }
  [ (sPackage)
  | sPackage:
  @PackageDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syPackage)
   oTypeStkPush(tpNull)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @Block
    ?sBegin (sBegin)
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     @PublicDefinition
      [ (sParmEnd)
      | *:
      >>
     ;PublicDefinition
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sIfStmt)
      | sIfStmt:
      @IfStmt
       .tIfBegin
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 104
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sIdentifier)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sIdentifier)
          | *:
          >>
         ;BinaryOperator
         [ (sIdentifier)
         | *:
         }
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 368
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sLT)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sLT)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sLT)
          | sLT:
          .tLT
          @CompareRelationalOperandTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkPop
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           oTypeStkPop
           oTypeStkPush(tpBoolean)
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareRelationalOperandTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       ?sThen (sThen)
       .tIfThen
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtNull)
          | *:
          .tCallBegin
          oTypeStkPushSymbol
          [ oTypeStkChooseRecursionFlag (no)
          | *:
          @ActualParameters
           oCountPush(zero)
           [ (sParmEnd)
           | sParmEnd:
           ] or >
           [ oTypeStkCompareParameterCount (yes)
           | yes:
           ] or >
           oCountPop
           >>
          ;ActualParameters
          .tCallEnd
          oValuePushSymbol
          oEmitValue
          % value emitted 2418
          oValuePop
          oTypeStkPop
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       [ (sElse)
       | sElse:
       .tIfMerge
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       oFixSwap
       oFixPopForwardBranch
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 109
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpBoolean)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syConstant)
            | *:
            [ oSymbolStkChooseKind (syConstant)
            | syConstant:
            @ConstantOperand
             oTypeStkPushSymbol
             oValuePushSymbol
             [ oTypeStkChooseKind (tpBoolean)
             | tpBoolean:
             .tLiteralBoolean
             oEmitValue
             % value emitted 1
             ] or >
             oValuePop
             >>
            ;ConstantOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tAssignBoolean
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       ] or >
       .tIfEnd
       oFixPopForwardBranch
       >>
      ;IfStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     @PublicDefinition
      [ (sIdentifier)
      | *:
      >>
     ;PublicDefinition
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sIdentifier)
      | *:
      oCountIncrement
      ?sIdentifier (sIdentifier)
      oSymbolStkPushLocalIdentifier
      [ oSymbolStkChooseKind (syUndefined)
      | syUndefined:
      ] or >
      [ (sLike)
      | *:
      oSymbolStkSetKind(syVariable)
      @ProcedureParameterType
       @SimpleType
        ?sLike (sLike)
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        [ oSymbolStkChooseKind (syConstant)
        | syConstant:
        oTypeStkPushSymbol
        ] or >
        oSymbolStkPop
        ] or >
        >>
       ;SimpleType
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       [ oTypeStkChooseKind (tpBoolean)
       | *:
       ] or >
       oSymbolStkEnterTypeReference
       @AllocateVar
        [ oSymbolStkChooseKind (syVariable)
        | *:
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        oSymbolStkEnterDataAddress
        oAllocateVariable
        ] or >
        >>
       ;AllocateVar
       oSymbolTblEnter
       >>
      ;ProcedureParameterType
      }
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (one)
       | *:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 4073
       oValuePop
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       @EmitStore
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        .tStoreBoolean
        ] or >
        >>
       ;EmitStore
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oCountDecrement
       }
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sVar)
      | sVar:
      @VariableDeclarations
       ?sIdentifier (sIdentifier)
       oSymbolStkPushLocalIdentifier
       [ oSymbolStkChooseKind (syUndefined)
       | syUndefined:
       ] or >
       @PublicDefinition
        [ (sLike)
        | *:
        >>
       ;PublicDefinition
       [ (sLike)
       | *:
       @TypeBody
        [ (sLike)
        | *:
        @SimpleType
         ?sLike (sLike)
         [ (sInteger)
         | sInteger:
         oTypeStkPush(tpInteger)
         oTypeStkLinkToStandardType(stdInteger)
         ] or >
         >>
        ;SimpleType
        @TypeTblEnterIfNew
         [ oTypeStkChooseTypeReference (yes)
         | *:
         >>
        ;TypeTblEnterIfNew
        >>
       ;TypeBody
       @EnterVariableAttributes
        [ oSymbolStkChooseKind (syUndefined)
        | *:
        oSymbolStkSetKind(syVariable)
        [ oTypeStkChooseKind (tpInteger)
        | *:
        @AllocateVar
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oAllocateAlignOnWord
         oSymbolStkEnterDataAddress
         oAllocateVariable
         ] or >
         >>
        ;AllocateVar
        oSymbolStkEnterTypeReference
        oSymbolTblEnter
        >>
       ;EnterVariableAttributes
       oTypeStkPop
       oSymbolStkPop
       >>
      ;VariableDeclarations
      ] or >
      }
      [ (sAssignmentStmt)
      | sAssignmentStmt:
      @AssignmentStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       .tAssignBegin
       @Variable
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        .tLiteralAddress
        oValuePushSymbol
        oEmitValue
        % value emitted 4076
        oValuePop
        ] or >
        oTypeStkPushSymbol
        @VariableExtension
         [ (sIdentifier)
         | *:
         >>
        ;VariableExtension
        >>
       ;Variable
       [ oTypeStkChooseKind (tpInteger)
       | *:
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 44
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sSubscript)
           | sSubscript:
           .tSubscriptBegin
           @Expression
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 1
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           [ oTypeStkChooseKind (tpArray)
           | tpArray:
           oTypeStkPushComponent
           oTypeStkSwap
           oTypeStkPop
           ] or >
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tSubscriptInteger
           ] or >
           ] or >
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpInteger)
          | tpInteger:
          .tFetchInteger
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       @CompareAndSwapTypes
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        oTypeStkSwap
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        ] or >
        ] or >
        >>
       ;CompareAndSwapTypes
       @EmitAssign
        [ oTypeStkChooseKind (tpInteger)
        | tpInteger:
        .tAssignInteger
        ] or >
        >>
       ;EmitAssign
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       >>
      ;AssignmentStmt
      ] or >
      }
      [ (sIfStmt)
      | sIfStmt:
      @IfStmt
       .tIfBegin
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 4073
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sExpnEnd)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tFetchBoolean
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       ?sThen (sThen)
       .tIfThen
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sIfStmt)
         | sIfStmt:
         @IfStmt
          .tIfBegin
          @BooleanControlExpression
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 4076
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sInteger)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sInteger)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInteger)
             | *:
             >>
            ;BinaryOperator
            [ (sInteger)
            | *:
            }
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 8
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sGT)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sGT)
             | sGT:
             .tGT
             @CompareRelationalOperandTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkPop
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              oTypeStkPop
              oTypeStkPush(tpBoolean)
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareRelationalOperandTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;BooleanControlExpression
          ?sThen (sThen)
          .tIfThen
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          @Statement
           oSymbolTblPushScope
           @Block
            ?sBegin (sBegin)
            [ (sAssignmentStmt)
            | sAssignmentStmt:
            @AssignmentStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             .tAssignBegin
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 109
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sIdentifier)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             [ oTypeStkChooseKind (tpBoolean)
             | *:
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syVariable)
               | *:
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 104
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sInteger)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               @VariableOperand
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tFetchInteger
                ] or >
                >>
               ;VariableOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sInteger)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sInteger)
               | *:
               >>
              ;BinaryOperator
              [ (sInteger)
              | *:
              }
              @Operand
               [ (sInteger)
               | sInteger:
               oValuePushInteger
               oSymbolStkPush(syExpression)
               oTypeStkPush(tpInteger)
               oTypeStkLinkToStandardType(stdInteger)
               .tLiteralInteger
               oEmitValue
               % value emitted 18
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sGT)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sGT)
               | sGT:
               .tGT
               @CompareRelationalOperandTypes
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                oTypeStkPop
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                ] or >
                oTypeStkPop
                oTypeStkPush(tpBoolean)
                oSymbolStkPop
                oSymbolStkSetKind(syExpression)
                >>
               ;CompareRelationalOperandTypes
               ] or >
               oSymbolStkSetKind(syExpression)
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             @EmitAssign
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              .tAssignBoolean
              ] or >
              >>
             ;EmitAssign
             oTypeStkPop
             oSymbolStkPop
             oTypeStkPop
             oSymbolStkPop
             >>
            ;AssignmentStmt
            ] or >
            }
            [ (sEnd)
            | *:
            ] or >
            ?sEnd (sEnd)
            >>
           ;Block
           oSymbolTblPopScope
           >>
          ;Statement
          [ (sElse)
          | sElse:
          .tIfMerge
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          oFixSwap
          oFixPopForwardBranch
          @Statement
           oSymbolTblPushScope
           @Block
            ?sBegin (sBegin)
            [ (sAssignmentStmt)
            | sAssignmentStmt:
            @AssignmentStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             .tAssignBegin
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 109
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sIdentifier)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             [ oTypeStkChooseKind (tpBoolean)
             | *:
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syVariable)
               | *:
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 104
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sInteger)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               @VariableOperand
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tFetchInteger
                ] or >
                >>
               ;VariableOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sInteger)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sInteger)
               | *:
               >>
              ;BinaryOperator
              [ (sInteger)
              | *:
              }
              @Operand
               [ (sInteger)
               | sInteger:
               oValuePushInteger
               oSymbolStkPush(syExpression)
               oTypeStkPush(tpInteger)
               oTypeStkLinkToStandardType(stdInteger)
               .tLiteralInteger
               oEmitValue
               % value emitted 17
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sGT)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sGT)
               | sGT:
               .tGT
               @CompareRelationalOperandTypes
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                oTypeStkPop
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                ] or >
                oTypeStkPop
                oTypeStkPush(tpBoolean)
                oSymbolStkPop
                oSymbolStkSetKind(syExpression)
                >>
               ;CompareRelationalOperandTypes
               ] or >
               oSymbolStkSetKind(syExpression)
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             @EmitAssign
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              .tAssignBoolean
              ] or >
              >>
             ;EmitAssign
             oTypeStkPop
             oSymbolStkPop
             oTypeStkPop
             oSymbolStkPop
             >>
            ;AssignmentStmt
            ] or >
            }
            [ (sEnd)
            | *:
            ] or >
            ?sEnd (sEnd)
            >>
           ;Block
           oSymbolTblPopScope
           >>
          ;Statement
          ] or >
          .tIfEnd
          oFixPopForwardBranch
          >>
         ;IfStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       [ (sElse)
       | sElse:
       .tIfMerge
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       oFixSwap
       oFixPopForwardBranch
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sIfStmt)
         | sIfStmt:
         @IfStmt
          .tIfBegin
          @BooleanControlExpression
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 4076
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sInteger)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sInteger)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInteger)
             | *:
             >>
            ;BinaryOperator
            [ (sInteger)
            | *:
            }
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 1
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sGT)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sGT)
             | sGT:
             .tGT
             @CompareRelationalOperandTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkPop
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              oTypeStkPop
              oTypeStkPush(tpBoolean)
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareRelationalOperandTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sInfixAnd)
            | *:
            }
            @Operand
             [ (sInfixAnd)
             | *:
             >>
            ;Operand
            @UnaryOperator
             [ (sInfixAnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInfixAnd)
             | sInfixAnd:
             .tInfixAnd
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sIdentifier)
            | *:
            }
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 4076
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sInteger)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sInteger)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInteger)
             | *:
             >>
            ;BinaryOperator
            [ (sInteger)
            | *:
            }
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 4
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sLT)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sLT)
             | sLT:
             .tLT
             @CompareRelationalOperandTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkPop
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              oTypeStkPop
              oTypeStkPush(tpBoolean)
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareRelationalOperandTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sAnd)
            | *:
            }
            @Operand
             [ (sAnd)
             | *:
             >>
            ;Operand
            @UnaryOperator
             [ (sAnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sAnd)
             | sAnd:
             .tAnd
             oTypeStkPush(tpBoolean)
             @CompareOperandAndResultTypes
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              @CompareAndSwapTypes
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               oTypeStkSwap
               [ oTypeStkChooseKind (tpBoolean)
               | tpBoolean:
               ] or >
               ] or >
               >>
              ;CompareAndSwapTypes
              oTypeStkPop
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareOperandAndResultTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;BooleanControlExpression
          ?sThen (sThen)
          .tIfThen
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          @Statement
           oSymbolTblPushScope
           @Block
            ?sBegin (sBegin)
            [ (sAssignmentStmt)
            | sAssignmentStmt:
            @AssignmentStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             .tAssignBegin
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 109
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sIdentifier)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             [ oTypeStkChooseKind (tpBoolean)
             | *:
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syVariable)
               | *:
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 104
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sInteger)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               @VariableOperand
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tFetchInteger
                ] or >
                >>
               ;VariableOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sInteger)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sInteger)
               | *:
               >>
              ;BinaryOperator
              [ (sInteger)
              | *:
              }
              @Operand
               [ (sInteger)
               | sInteger:
               oValuePushInteger
               oSymbolStkPush(syExpression)
               oTypeStkPush(tpInteger)
               oTypeStkLinkToStandardType(stdInteger)
               .tLiteralInteger
               oEmitValue
               % value emitted 12
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sGT)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sGT)
               | sGT:
               .tGT
               @CompareRelationalOperandTypes
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                oTypeStkPop
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                ] or >
                ] or >
                oTypeStkPop
                oTypeStkPush(tpBoolean)
                oSymbolStkPop
                oSymbolStkSetKind(syExpression)
                >>
               ;CompareRelationalOperandTypes
               ] or >
               oSymbolStkSetKind(syExpression)
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             @EmitAssign
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              .tAssignBoolean
              ] or >
              >>
             ;EmitAssign
             oTypeStkPop
             oSymbolStkPop
             oTypeStkPop
             oSymbolStkPop
             >>
            ;AssignmentStmt
            ] or >
            }
            [ (sEnd)
            | *:
            ] or >
            ?sEnd (sEnd)
            >>
           ;Block
           oSymbolTblPopScope
           >>
          ;Statement
          [ (sElse)
          | sElse:
          .tIfMerge
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          oFixSwap
          oFixPopForwardBranch
          @Statement
           oSymbolTblPushScope
           @Block
            ?sBegin (sBegin)
            [ (sIfStmt)
            | sIfStmt:
            @IfStmt
             .tIfBegin
             @BooleanControlExpression
              @Expression
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syVariable)
                | *:
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 4076
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sInteger)
                  | *:
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                @VariableOperand
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 .tFetchInteger
                 ] or >
                 >>
                ;VariableOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sInteger)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sInteger)
                | *:
                >>
               ;BinaryOperator
               [ (sInteger)
               | *:
               }
               @Operand
                [ (sInteger)
                | sInteger:
                oValuePushInteger
                oSymbolStkPush(syExpression)
                oTypeStkPush(tpInteger)
                oTypeStkLinkToStandardType(stdInteger)
                .tLiteralInteger
                oEmitValue
                % value emitted 3
                oValuePop
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sGT)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sGT)
                | sGT:
                .tGT
                @CompareRelationalOperandTypes
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 oTypeStkPop
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 ] or >
                 ] or >
                 oTypeStkPop
                 oTypeStkPush(tpBoolean)
                 oSymbolStkPop
                 oSymbolStkSetKind(syExpression)
                 >>
                ;CompareRelationalOperandTypes
                ] or >
                oSymbolStkSetKind(syExpression)
                >>
               ;BinaryOperator
               [ (sInfixAnd)
               | *:
               }
               @Operand
                [ (sInfixAnd)
                | *:
                >>
               ;Operand
               @UnaryOperator
                [ (sInfixAnd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sInfixAnd)
                | sInfixAnd:
                .tInfixAnd
                ] or >
                oSymbolStkSetKind(syExpression)
                >>
               ;BinaryOperator
               [ (sIdentifier)
               | *:
               }
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syVariable)
                | *:
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 4076
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sInteger)
                  | *:
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                @VariableOperand
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 .tFetchInteger
                 ] or >
                 >>
                ;VariableOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sInteger)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sInteger)
                | *:
                >>
               ;BinaryOperator
               [ (sInteger)
               | *:
               }
               @Operand
                [ (sInteger)
                | sInteger:
                oValuePushInteger
                oSymbolStkPush(syExpression)
                oTypeStkPush(tpInteger)
                oTypeStkLinkToStandardType(stdInteger)
                .tLiteralInteger
                oEmitValue
                % value emitted 7
                oValuePop
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sLT)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sLT)
                | sLT:
                .tLT
                @CompareRelationalOperandTypes
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 oTypeStkPop
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 ] or >
                 ] or >
                 oTypeStkPop
                 oTypeStkPush(tpBoolean)
                 oSymbolStkPop
                 oSymbolStkSetKind(syExpression)
                 >>
                ;CompareRelationalOperandTypes
                ] or >
                oSymbolStkSetKind(syExpression)
                >>
               ;BinaryOperator
               [ (sAnd)
               | *:
               }
               @Operand
                [ (sAnd)
                | *:
                >>
               ;Operand
               @UnaryOperator
                [ (sAnd)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sAnd)
                | sAnd:
                .tAnd
                oTypeStkPush(tpBoolean)
                @CompareOperandAndResultTypes
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpBoolean)
                  | tpBoolean:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpBoolean)
                  | tpBoolean:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 oTypeStkPop
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpBoolean)
                  | tpBoolean:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpBoolean)
                  | tpBoolean:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 oTypeStkPop
                 oSymbolStkPop
                 oSymbolStkSetKind(syExpression)
                 >>
                ;CompareOperandAndResultTypes
                ] or >
                oSymbolStkSetKind(syExpression)
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;BooleanControlExpression
             ?sThen (sThen)
             .tIfThen
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             @Statement
              oSymbolTblPushScope
              @Block
               ?sBegin (sBegin)
               [ (sAssignmentStmt)
               | sAssignmentStmt:
               @AssignmentStmt
                ?sIdentifier (sIdentifier)
                oSymbolStkPushIdentifier
                .tAssignBegin
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 109
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sIdentifier)
                  | *:
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                [ oTypeStkChooseKind (tpBoolean)
                | *:
                @Expression
                 @Operand
                  [ (sIdentifier)
                  | sIdentifier:
                  oSymbolStkPushIdentifier
                  [ oSymbolStkChooseKind (syVariable)
                  | *:
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  @Variable
                   [ oSymbolStkChooseKind (syVariable)
                   | syVariable:
                   .tLiteralAddress
                   oValuePushSymbol
                   oEmitValue
                   % value emitted 104
                   oValuePop
                   ] or >
                   oTypeStkPushSymbol
                   @VariableExtension
                    [ (sInteger)
                    | *:
                    >>
                   ;VariableExtension
                   >>
                  ;Variable
                  @VariableOperand
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   .tFetchInteger
                   ] or >
                   >>
                  ;VariableOperand
                  ] or >
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sInteger)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sInteger)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sInteger)
                 | *:
                 }
                 @Operand
                  [ (sInteger)
                  | sInteger:
                  oValuePushInteger
                  oSymbolStkPush(syExpression)
                  oTypeStkPush(tpInteger)
                  oTypeStkLinkToStandardType(stdInteger)
                  .tLiteralInteger
                  oEmitValue
                  % value emitted 11
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sGT)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sGT)
                  | sGT:
                  .tGT
                  @CompareRelationalOperandTypes
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   oTypeStkPop
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   ] or >
                   ] or >
                   oTypeStkPop
                   oTypeStkPush(tpBoolean)
                   oSymbolStkPop
                   oSymbolStkSetKind(syExpression)
                   >>
                  ;CompareRelationalOperandTypes
                  ] or >
                  oSymbolStkSetKind(syExpression)
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                @CompareAndSwapTypes
                 [ oTypeStkChooseKind (tpBoolean)
                 | tpBoolean:
                 oTypeStkSwap
                 [ oTypeStkChooseKind (tpBoolean)
                 | tpBoolean:
                 ] or >
                 ] or >
                 >>
                ;CompareAndSwapTypes
                @EmitAssign
                 [ oTypeStkChooseKind (tpBoolean)
                 | tpBoolean:
                 .tAssignBoolean
                 ] or >
                 >>
                ;EmitAssign
                oTypeStkPop
                oSymbolStkPop
                oTypeStkPop
                oSymbolStkPop
                >>
               ;AssignmentStmt
               ] or >
               }
               [ (sEnd)
               | *:
               ] or >
               ?sEnd (sEnd)
               >>
              ;Block
              oSymbolTblPopScope
              >>
             ;Statement
             [ (sElse)
             | sElse:
             .tIfMerge
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             oFixSwap
             oFixPopForwardBranch
             @Statement
              oSymbolTblPushScope
              @Block
               ?sBegin (sBegin)
               [ (sAssignmentStmt)
               | sAssignmentStmt:
               @AssignmentStmt
                ?sIdentifier (sIdentifier)
                oSymbolStkPushIdentifier
                .tAssignBegin
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 109
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sIdentifier)
                  | *:
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                [ oTypeStkChooseKind (tpBoolean)
                | *:
                @Expression
                 @Operand
                  [ (sIdentifier)
                  | sIdentifier:
                  oSymbolStkPushIdentifier
                  [ oSymbolStkChooseKind (syVariable)
                  | *:
                  [ oSymbolStkChooseKind (syVariable)
                  | syVariable:
                  @Variable
                   [ oSymbolStkChooseKind (syVariable)
                   | syVariable:
                   .tLiteralAddress
                   oValuePushSymbol
                   oEmitValue
                   % value emitted 104
                   oValuePop
                   ] or >
                   oTypeStkPushSymbol
                   @VariableExtension
                    [ (sInteger)
                    | *:
                    >>
                   ;VariableExtension
                   >>
                  ;Variable
                  @VariableOperand
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   .tFetchInteger
                   ] or >
                   >>
                  ;VariableOperand
                  ] or >
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sInteger)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sInteger)
                  | *:
                  >>
                 ;BinaryOperator
                 [ (sInteger)
                 | *:
                 }
                 @Operand
                  [ (sInteger)
                  | sInteger:
                  oValuePushInteger
                  oSymbolStkPush(syExpression)
                  oTypeStkPush(tpInteger)
                  oTypeStkLinkToStandardType(stdInteger)
                  .tLiteralInteger
                  oEmitValue
                  % value emitted 16
                  oValuePop
                  ] or >
                  >>
                 ;Operand
                 @UnaryOperator
                  [ (sGT)
                  | *:
                  >>
                 ;UnaryOperator
                 @BinaryOperator
                  [ (sGT)
                  | sGT:
                  .tGT
                  @CompareRelationalOperandTypes
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   oTypeStkPop
                   [ oTypeStkChooseKind (tpInteger)
                   | tpInteger:
                   ] or >
                   ] or >
                   oTypeStkPop
                   oTypeStkPush(tpBoolean)
                   oSymbolStkPop
                   oSymbolStkSetKind(syExpression)
                   >>
                  ;CompareRelationalOperandTypes
                  ] or >
                  oSymbolStkSetKind(syExpression)
                  >>
                 ;BinaryOperator
                 [ (sExpnEnd)
                 | sExpnEnd:
                 ] or >
                 >>
                ;Expression
                @CompareAndSwapTypes
                 [ oTypeStkChooseKind (tpBoolean)
                 | tpBoolean:
                 oTypeStkSwap
                 [ oTypeStkChooseKind (tpBoolean)
                 | tpBoolean:
                 ] or >
                 ] or >
                 >>
                ;CompareAndSwapTypes
                @EmitAssign
                 [ oTypeStkChooseKind (tpBoolean)
                 | tpBoolean:
                 .tAssignBoolean
                 ] or >
                 >>
                ;EmitAssign
                oTypeStkPop
                oSymbolStkPop
                oTypeStkPop
                oSymbolStkPop
                >>
               ;AssignmentStmt
               ] or >
               }
               [ (sEnd)
               | *:
               ] or >
               ?sEnd (sEnd)
               >>
              ;Block
              oSymbolTblPopScope
              >>
             ;Statement
             ] or >
             .tIfEnd
             oFixPopForwardBranch
             >>
            ;IfStmt
            ] or >
            }
            [ (sEnd)
            | *:
            ] or >
            ?sEnd (sEnd)
            >>
           ;Block
           oSymbolTblPopScope
           >>
          ;Statement
          ] or >
          .tIfEnd
          oFixPopForwardBranch
          >>
         ;IfStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       ] or >
       .tIfEnd
       oFixPopForwardBranch
       >>
      ;IfStmt
      ] or >
      }
      [ (sIfStmt)
      | sIfStmt:
      @IfStmt
       .tIfBegin
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 109
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sNot)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tFetchBoolean
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sNot)
          | sNot:
          .tNot
          oTypeStkPush(tpBoolean)
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          oTypeStkPop
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       ?sThen (sThen)
       .tIfThen
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtNull)
          | *:
          .tCallBegin
          oTypeStkPushSymbol
          [ oTypeStkChooseRecursionFlag (no)
          | *:
          @ActualParameters
           oCountPush(zero)
           [ (sParmEnd)
           | sParmEnd:
           ] or >
           [ oTypeStkCompareParameterCount (yes)
           | yes:
           ] or >
           oCountPop
           >>
          ;ActualParameters
          .tCallEnd
          oValuePushSymbol
          oEmitValue
          % value emitted 2418
          oValuePop
          oTypeStkPop
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       [ (sEnd)
       | *:
       .tIfEnd
       oFixPopForwardBranch
       >>
      ;IfStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     @PublicDefinition
      [ (sPublic)
      | sPublic:
      oSymbolStkSetPublicFlag
      ] or >
      >>
     ;PublicDefinition
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sVar)
      | sVar:
      @VariableDeclarations
       ?sIdentifier (sIdentifier)
       oSymbolStkPushLocalIdentifier
       [ oSymbolStkChooseKind (syUndefined)
       | syUndefined:
       ] or >
       @PublicDefinition
        [ (sLike)
        | *:
        >>
       ;PublicDefinition
       [ (sLike)
       | *:
       @TypeBody
        [ (sLike)
        | *:
        @SimpleType
         ?sLike (sLike)
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syConstant)
         | syConstant:
         oTypeStkPushSymbol
         ] or >
         oSymbolStkPop
         ] or >
         >>
        ;SimpleType
        @TypeTblEnterIfNew
         [ oTypeStkChooseTypeReference (yes)
         | *:
         >>
        ;TypeTblEnterIfNew
        >>
       ;TypeBody
       @EnterVariableAttributes
        [ oSymbolStkChooseKind (syUndefined)
        | *:
        oSymbolStkSetKind(syVariable)
        [ oTypeStkChooseKind (tpBoolean)
        | *:
        @AllocateVar
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oTypeStkChooseKind (tpBoolean)
         | tpBoolean:
         oSymbolStkEnterDataAddress
         oAllocateVariable
         ] or >
         >>
        ;AllocateVar
        oSymbolStkEnterTypeReference
        oSymbolTblEnter
        >>
       ;EnterVariableAttributes
       oTypeStkPop
       oSymbolStkPop
       >>
      ;VariableDeclarations
      ] or >
      }
      [ (sCallStmt)
      | sCallStmt:
      @CallStmt
       ?sIdentifier (sIdentifier)
       oSymbolStkPushIdentifier
       [ oSymbolStkChooseKind (syProcedure)
       | *:
       [ oSymbolStkChooseKind (syProcedure)
       | syProcedure:
       [ oSymbolStkChooseStandardRoutine (rtNull)
       | *:
       .tCallBegin
       oTypeStkPushSymbol
       [ oTypeStkChooseRecursionFlag (no)
       | *:
       @ActualParameters
        oCountPush(zero)
        [ (sIdentifier)
        | *:
        [ oTypeStkCompareParameterCount (no)
        | *:
        oCountIncrement
        oSymbolStkPushFormalParameter
        oTypeStkPushSymbol
        [ oSymbolStkChooseKind (syVariable)
        | syVariable:
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 80
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sExpnEnd)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        @CompareAndSwapTypes
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         oTypeStkSwap
         [ oTypeStkChooseKind (tpInteger)
         | tpInteger:
         ] or >
         ] or >
         >>
        ;CompareAndSwapTypes
        ] or >
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        .tParmEnd
        }
        [ (sIdentifier)
        | *:
        [ oTypeStkCompareParameterCount (no)
        | *:
        oCountIncrement
        oSymbolStkPushFormalParameter
        oTypeStkPushSymbol
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        @VarActual
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 8
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sExpnEnd)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         .tVarParm
         [ oTypeStkCompareNames (yes)
         | yes:
         ] or >
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         ] or >
         >>
        ;VarActual
        ] or >
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        .tParmEnd
        }
        [ (sIdentifier)
        | *:
        [ oTypeStkCompareParameterCount (no)
        | *:
        oCountIncrement
        oSymbolStkPushFormalParameter
        oTypeStkPushSymbol
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        @VarActual
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 4080
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sExpnEnd)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         .tVarParm
         [ oTypeStkCompareNames (yes)
         | yes:
         ] or >
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         ] or >
         >>
        ;VarActual
        ] or >
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        .tParmEnd
        }
        [ (sIdentifier)
        | *:
        [ oTypeStkCompareParameterCount (no)
        | *:
        oCountIncrement
        oSymbolStkPushFormalParameter
        oTypeStkPushSymbol
        [ oSymbolStkChooseKind (syVarParameter)
        | syVarParameter:
        @VarActual
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 104
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sExpnEnd)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         .tVarParm
         [ oTypeStkCompareNames (yes)
         | yes:
         ] or >
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         ] or >
         >>
        ;VarActual
        ] or >
        oSymbolStkPop
        oTypeStkPop
        oSymbolStkPop
        oTypeStkPop
        .tParmEnd
        }
        [ (sParmEnd)
        | sParmEnd:
        ] or >
        [ oTypeStkCompareParameterCount (yes)
        | yes:
        ] or >
        oCountPop
        >>
       ;ActualParameters
       .tCallEnd
       oValuePushSymbol
       oEmitValue
       % value emitted 2727
       oValuePop
       oTypeStkPop
       ] or >
       oSymbolStkPop
       >>
      ;CallStmt
      ] or >
      }
      [ (sIfStmt)
      | sIfStmt:
      @IfStmt
       .tIfBegin
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 104
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sInteger)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tFetchInteger
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sInteger)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sInteger)
          | *:
          >>
         ;BinaryOperator
         [ (sInteger)
         | *:
         }
         @Operand
          [ (sInteger)
          | sInteger:
          oValuePushInteger
          oSymbolStkPush(syExpression)
          oTypeStkPush(tpInteger)
          oTypeStkLinkToStandardType(stdInteger)
          .tLiteralInteger
          oEmitValue
          % value emitted 21
          oValuePop
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sEq)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sEq)
          | sEq:
          [ oTypeStkChooseKind (tpInteger)
          | *:
          .tEQ
          @CompareEqualityOperandTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkPop
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           oTypeStkPop
           oTypeStkPush(tpBoolean)
           oSymbolStkPop
           oSymbolStkSetKind(syExpression)
           >>
          ;CompareEqualityOperandTypes
          ] or >
          oSymbolStkSetKind(syExpression)
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       ?sThen (sThen)
       .tIfThen
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtNull)
          | *:
          .tCallBegin
          oTypeStkPushSymbol
          [ oTypeStkChooseRecursionFlag (no)
          | *:
          @ActualParameters
           oCountPush(zero)
           [ (sParmEnd)
           | sParmEnd:
           ] or >
           [ oTypeStkCompareParameterCount (yes)
           | yes:
           ] or >
           oCountPop
           >>
          ;ActualParameters
          .tCallEnd
          oValuePushSymbol
          oEmitValue
          % value emitted 785
          oValuePop
          oTypeStkPop
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtWrite)
          | rtWrite:
          .tWriteBegin
          @WriteProcedure
           [ (sStringLiteral)
           | *:
           @WriteStandardExpnList
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            oSymbolStkPop
            [ (sStringLiteral)
            | *:
            .tTrapBegin
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            .tVarParm
            .tParmEnd
            @Expression
             @Operand
              [ (sStringLiteral)
              | sStringLiteral:
              oSymbolStkPush(syExpression)
              @StringLiteral
               .tSkipString
               oFixPushForwardBranch
               oEmitNullAddress
               % value emitted -32767
               .tStringData
               oValuePushStringLength
               oEmitValue
               % value emitted 17
               oValuePop
               oValuePushCodeAddress
               oValueNegate
               oEmitString
               % value emitted 32
               % value emitted 99
               % value emitted 97
               % value emitted 108
               % value emitted 108
               % value emitted 115
               % value emitted 32
               % value emitted 98
               % value emitted 108
               % value emitted 97
               % value emitted 99
               % value emitted 107
               % value emitted 106
               % value emitted 97
               % value emitted 99
               % value emitted 107
               % value emitted 46
               % value emitted 0
               oFixPopForwardBranch
               oTypeStkPush(tpChar)
               oTypeStkLinkToStandardType(stdChar)
               >>
              ;StringLiteral
              .tLiteralAddress
              oEmitValue
              % value emitted -3809
              .tFetchChar
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            .tParmEnd
            @WriteText
             [ (sParmEnd)
             | *:
             [ oTypeStkChooseKind (tpChar)
             | *:
             oValuePush(zero)
             .tLiteralInteger
             oEmitValue
             % value emitted 0
             oValuePop
             .tParmEnd
             [ oTypeStkChooseKind (tpChar)
             | tpChar:
             .tTrap
             oEmitTrapKind(trWriteString)
             % value emitted 109
             ] or >
             oSymbolStkPop
             oTypeStkPop
             >>
            ;WriteText
            }
            [ (sParmEnd)
            | sParmEnd:
            ] or >
            oValuePop
            >>
           ;WriteStandardExpnList
           .tWriteEnd
           >>
          ;WriteProcedure
          ] or >
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtWriteln)
          | rtWriteln:
          .tTrapBegin
          @WritelnProcedure
           [ (sParmEnd)
           | sParmEnd:
           oSymbolStkPushStandardVariable(stdOutput)
           [ oSymbolStkChooseKind (syVariable)
           | *:
           oValuePushSymbol
           .tLiteralAddress
           oEmitValue
           % value emitted 4
           oValuePop
           oSymbolStkPop
           .tVarParm
           .tParmEnd
           ] or >
           >>
          ;WritelnProcedure
          .tTrap
          oEmitTrapKind(trWriteln)
          % value emitted 6
          ] or >
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 109
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpBoolean)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syConstant)
            | *:
            [ oSymbolStkChooseKind (syConstant)
            | syConstant:
            @ConstantOperand
             oTypeStkPushSymbol
             oValuePushSymbol
             [ oTypeStkChooseKind (tpBoolean)
             | tpBoolean:
             .tLiteralBoolean
             oEmitValue
             % value emitted 1
             ] or >
             oValuePop
             >>
            ;ConstantOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tAssignBoolean
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 108
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpBoolean)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syConstant)
            | *:
            [ oSymbolStkChooseKind (syConstant)
            | syConstant:
            @ConstantOperand
             oTypeStkPushSymbol
             oValuePushSymbol
             [ oTypeStkChooseKind (tpBoolean)
             | tpBoolean:
             .tLiteralBoolean
             oEmitValue
             % value emitted 1
             ] or >
             oValuePop
             >>
            ;ConstantOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tAssignBoolean
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sAssignmentStmt)
         | sAssignmentStmt:
         @AssignmentStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          .tAssignBegin
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 92
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sIdentifier)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          [ oTypeStkChooseKind (tpInteger)
          | *:
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 92
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sInteger)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tFetchInteger
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sInteger)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sInteger)
            | *:
            >>
           ;BinaryOperator
           [ (sInteger)
           | *:
           }
           @Operand
            [ (sInteger)
            | sInteger:
            oValuePushInteger
            oSymbolStkPush(syExpression)
            oTypeStkPush(tpInteger)
            oTypeStkLinkToStandardType(stdInteger)
            .tLiteralInteger
            oEmitValue
            % value emitted 1
            oValuePop
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sAdd)
            | *:
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sAdd)
            | sAdd:
            .tAdd
            oTypeStkPush(tpInteger)
            @CompareOperandAndResultTypes
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             oTypeStkPop
             oSymbolStkPop
             oSymbolStkSetKind(syExpression)
             >>
            ;CompareOperandAndResultTypes
            ] or >
            oSymbolStkSetKind(syExpression)
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          @CompareAndSwapTypes
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           oTypeStkSwap
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           ] or >
           ] or >
           >>
          ;CompareAndSwapTypes
          @EmitAssign
           [ oTypeStkChooseKind (tpInteger)
           | tpInteger:
           .tAssignInteger
           ] or >
           >>
          ;EmitAssign
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          >>
         ;AssignmentStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       [ (sElse)
       | sElse:
       .tIfMerge
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       oFixSwap
       oFixPopForwardBranch
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sIfStmt)
         | sIfStmt:
         @IfStmt
          .tIfBegin
          @BooleanControlExpression
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 104
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sInteger)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sInteger)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sInteger)
             | *:
             >>
            ;BinaryOperator
            [ (sInteger)
            | *:
            }
            @Operand
             [ (sInteger)
             | sInteger:
             oValuePushInteger
             oSymbolStkPush(syExpression)
             oTypeStkPush(tpInteger)
             oTypeStkLinkToStandardType(stdInteger)
             .tLiteralInteger
             oEmitValue
             % value emitted 21
             oValuePop
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sGT)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sGT)
             | sGT:
             .tGT
             @CompareRelationalOperandTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkPop
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              oTypeStkPop
              oTypeStkPush(tpBoolean)
              oSymbolStkPop
              oSymbolStkSetKind(syExpression)
              >>
             ;CompareRelationalOperandTypes
             ] or >
             oSymbolStkSetKind(syExpression)
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           ] or >
           oSymbolStkPop
           oTypeStkPop
           >>
          ;BooleanControlExpression
          ?sThen (sThen)
          .tIfThen
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          @Statement
           oSymbolTblPushScope
           @Block
            ?sBegin (sBegin)
            [ (sCallStmt)
            | sCallStmt:
            @CallStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syProcedure)
             | *:
             [ oSymbolStkChooseKind (syProcedure)
             | syProcedure:
             [ oSymbolStkChooseStandardRoutine (rtNull)
             | *:
             .tCallBegin
             oTypeStkPushSymbol
             [ oTypeStkChooseRecursionFlag (no)
             | *:
             @ActualParameters
              oCountPush(zero)
              [ (sParmEnd)
              | sParmEnd:
              ] or >
              [ oTypeStkCompareParameterCount (yes)
              | yes:
              ] or >
              oCountPop
              >>
             ;ActualParameters
             .tCallEnd
             oValuePushSymbol
             oEmitValue
             % value emitted 785
             oValuePop
             oTypeStkPop
             ] or >
             oSymbolStkPop
             >>
            ;CallStmt
            ] or >
            }
            [ (sCallStmt)
            | sCallStmt:
            @CallStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syProcedure)
             | *:
             [ oSymbolStkChooseKind (syProcedure)
             | syProcedure:
             [ oSymbolStkChooseStandardRoutine (rtWrite)
             | rtWrite:
             .tWriteBegin
             @WriteProcedure
              [ (sStringLiteral)
              | *:
              @WriteStandardExpnList
               oSymbolStkPushStandardVariable(stdOutput)
               [ oSymbolStkChooseKind (syVariable)
               | *:
               oValuePushSymbol
               oSymbolStkPop
               [ (sStringLiteral)
               | *:
               .tTrapBegin
               .tLiteralAddress
               oEmitValue
               % value emitted 4
               .tVarParm
               .tParmEnd
               @Expression
                @Operand
                 [ (sStringLiteral)
                 | sStringLiteral:
                 oSymbolStkPush(syExpression)
                 @StringLiteral
                  .tSkipString
                  oFixPushForwardBranch
                  oEmitNullAddress
                  % value emitted -32767
                  .tStringData
                  oValuePushStringLength
                  oEmitValue
                  % value emitted 11
                  oValuePop
                  oValuePushCodeAddress
                  oValueNegate
                  oEmitString
                  % value emitted 32
                  % value emitted 103
                  % value emitted 111
                  % value emitted 101
                  % value emitted 115
                  % value emitted 32
                  % value emitted 98
                  % value emitted 117
                  % value emitted 115
                  % value emitted 116
                  % value emitted 46
                  % value emitted 0
                  oFixPopForwardBranch
                  oTypeStkPush(tpChar)
                  oTypeStkLinkToStandardType(stdChar)
                  >>
                 ;StringLiteral
                 .tLiteralAddress
                 oEmitValue
                 % value emitted -3902
                 .tFetchChar
                 oValuePop
                 ] or >
                 >>
                ;Operand
                @UnaryOperator
                 [ (sExpnEnd)
                 | *:
                 >>
                ;UnaryOperator
                @BinaryOperator
                 [ (sExpnEnd)
                 | *:
                 >>
                ;BinaryOperator
                [ (sExpnEnd)
                | sExpnEnd:
                ] or >
                >>
               ;Expression
               .tParmEnd
               @WriteText
                [ (sParmEnd)
                | *:
                [ oTypeStkChooseKind (tpChar)
                | *:
                oValuePush(zero)
                .tLiteralInteger
                oEmitValue
                % value emitted 0
                oValuePop
                .tParmEnd
                [ oTypeStkChooseKind (tpChar)
                | tpChar:
                .tTrap
                oEmitTrapKind(trWriteString)
                % value emitted 109
                ] or >
                oSymbolStkPop
                oTypeStkPop
                >>
               ;WriteText
               }
               [ (sParmEnd)
               | sParmEnd:
               ] or >
               oValuePop
               >>
              ;WriteStandardExpnList
              .tWriteEnd
              >>
             ;WriteProcedure
             ] or >
             ] or >
             oSymbolStkPop
             >>
            ;CallStmt
            ] or >
            }
            [ (sCallStmt)
            | sCallStmt:
            @CallStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syProcedure)
             | *:
             [ oSymbolStkChooseKind (syProcedure)
             | syProcedure:
             [ oSymbolStkChooseStandardRoutine (rtWriteln)
             | rtWriteln:
             .tTrapBegin
             @WritelnProcedure
              [ (sParmEnd)
              | sParmEnd:
              oSymbolStkPushStandardVariable(stdOutput)
              [ oSymbolStkChooseKind (syVariable)
              | *:
              oValuePushSymbol
              .tLiteralAddress
              oEmitValue
              % value emitted 4
              oValuePop
              oSymbolStkPop
              .tVarParm
              .tParmEnd
              ] or >
              >>
             ;WritelnProcedure
             .tTrap
             oEmitTrapKind(trWriteln)
             % value emitted 6
             ] or >
             ] or >
             oSymbolStkPop
             >>
            ;CallStmt
            ] or >
            }
            [ (sAssignmentStmt)
            | sAssignmentStmt:
            @AssignmentStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             .tAssignBegin
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 109
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sIdentifier)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             [ oTypeStkChooseKind (tpBoolean)
             | *:
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syConstant)
               | *:
               [ oSymbolStkChooseKind (syConstant)
               | syConstant:
               @ConstantOperand
                oTypeStkPushSymbol
                oValuePushSymbol
                [ oTypeStkChooseKind (tpBoolean)
                | tpBoolean:
                .tLiteralBoolean
                oEmitValue
                % value emitted 1
                ] or >
                oValuePop
                >>
               ;ConstantOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             @EmitAssign
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              .tAssignBoolean
              ] or >
              >>
             ;EmitAssign
             oTypeStkPop
             oSymbolStkPop
             oTypeStkPop
             oSymbolStkPop
             >>
            ;AssignmentStmt
            ] or >
            }
            [ (sAssignmentStmt)
            | sAssignmentStmt:
            @AssignmentStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             .tAssignBegin
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 108
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sIdentifier)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             [ oTypeStkChooseKind (tpBoolean)
             | *:
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syConstant)
               | *:
               [ oSymbolStkChooseKind (syConstant)
               | syConstant:
               @ConstantOperand
                oTypeStkPushSymbol
                oValuePushSymbol
                [ oTypeStkChooseKind (tpBoolean)
                | tpBoolean:
                .tLiteralBoolean
                oEmitValue
                % value emitted 1
                ] or >
                oValuePop
                >>
               ;ConstantOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             @EmitAssign
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              .tAssignBoolean
              ] or >
              >>
             ;EmitAssign
             oTypeStkPop
             oSymbolStkPop
             oTypeStkPop
             oSymbolStkPop
             >>
            ;AssignmentStmt
            ] or >
            }
            [ (sAssignmentStmt)
            | sAssignmentStmt:
            @AssignmentStmt
             ?sIdentifier (sIdentifier)
             oSymbolStkPushIdentifier
             .tAssignBegin
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 96
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sIdentifier)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             [ oTypeStkChooseKind (tpInteger)
             | *:
             @Expression
              @Operand
               [ (sIdentifier)
               | sIdentifier:
               oSymbolStkPushIdentifier
               [ oSymbolStkChooseKind (syVariable)
               | *:
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               @Variable
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                .tLiteralAddress
                oValuePushSymbol
                oEmitValue
                % value emitted 96
                oValuePop
                ] or >
                oTypeStkPushSymbol
                @VariableExtension
                 [ (sInteger)
                 | *:
                 >>
                ;VariableExtension
                >>
               ;Variable
               @VariableOperand
                [ oTypeStkChooseKind (tpInteger)
                | tpInteger:
                .tFetchInteger
                ] or >
                >>
               ;VariableOperand
               ] or >
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sInteger)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sInteger)
               | *:
               >>
              ;BinaryOperator
              [ (sInteger)
              | *:
              }
              @Operand
               [ (sInteger)
               | sInteger:
               oValuePushInteger
               oSymbolStkPush(syExpression)
               oTypeStkPush(tpInteger)
               oTypeStkLinkToStandardType(stdInteger)
               .tLiteralInteger
               oEmitValue
               % value emitted 1
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sAdd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sAdd)
               | sAdd:
               .tAdd
               oTypeStkPush(tpInteger)
               @CompareOperandAndResultTypes
                @CompareAndSwapTypes
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 oTypeStkSwap
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 ] or >
                 ] or >
                 >>
                ;CompareAndSwapTypes
                oTypeStkPop
                @CompareAndSwapTypes
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 oTypeStkSwap
                 [ oTypeStkChooseKind (tpInteger)
                 | tpInteger:
                 ] or >
                 ] or >
                 >>
                ;CompareAndSwapTypes
                oTypeStkPop
                oSymbolStkPop
                oSymbolStkSetKind(syExpression)
                >>
               ;CompareOperandAndResultTypes
               ] or >
               oSymbolStkSetKind(syExpression)
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             @CompareAndSwapTypes
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              oTypeStkSwap
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              ] or >
              ] or >
              >>
             ;CompareAndSwapTypes
             @EmitAssign
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tAssignInteger
              ] or >
              >>
             ;EmitAssign
             oTypeStkPop
             oSymbolStkPop
             oTypeStkPop
             oSymbolStkPop
             >>
            ;AssignmentStmt
            ] or >
            }
            [ (sEnd)
            | *:
            ] or >
            ?sEnd (sEnd)
            >>
           ;Block
           oSymbolTblPopScope
           >>
          ;Statement
          [ (sElse)
          | sElse:
          .tIfMerge
          oFixPushForwardBranch
          oEmitNullAddress
          % value emitted -32767
          oFixSwap
          oFixPopForwardBranch
          @Statement
           oSymbolTblPushScope
           @Block
            ?sBegin (sBegin)
            [ (sIfStmt)
            | sIfStmt:
            @IfStmt
             .tIfBegin
             @BooleanControlExpression
              @Expression
               @Operand
                [ (sIdentifier)
                | sIdentifier:
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syVariable)
                | *:
                [ oSymbolStkChooseKind (syVariable)
                | syVariable:
                @Variable
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 .tLiteralAddress
                 oValuePushSymbol
                 oEmitValue
                 % value emitted 110
                 oValuePop
                 ] or >
                 oTypeStkPushSymbol
                 @VariableExtension
                  [ (sStringLiteral)
                  | *:
                  >>
                 ;VariableExtension
                 >>
                ;Variable
                @VariableOperand
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 .tFetchChar
                 ] or >
                 >>
                ;VariableOperand
                ] or >
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sStringLiteral)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sStringLiteral)
                | *:
                >>
               ;BinaryOperator
               [ (sStringLiteral)
               | *:
               }
               @Operand
                [ (sStringLiteral)
                | sStringLiteral:
                oSymbolStkPush(syExpression)
                @StringLiteral
                 .tSkipString
                 oFixPushForwardBranch
                 oEmitNullAddress
                 % value emitted -32767
                 .tStringData
                 oValuePushStringLength
                 oEmitValue
                 % value emitted 1
                 oValuePop
                 oValuePushCodeAddress
                 oValueNegate
                 oEmitString
                 % value emitted 101
                 % value emitted 0
                 oFixPopForwardBranch
                 oTypeStkPush(tpChar)
                 oTypeStkLinkToStandardType(stdChar)
                 >>
                ;StringLiteral
                .tLiteralAddress
                oEmitValue
                % value emitted -3971
                .tFetchChar
                oValuePop
                ] or >
                >>
               ;Operand
               @UnaryOperator
                [ (sEq)
                | *:
                >>
               ;UnaryOperator
               @BinaryOperator
                [ (sEq)
                | sEq:
                [ oTypeStkChooseKind (tpChar)
                | tpChar:
                .tStringEQ
                ] or >
                @CompareEqualityOperandTypes
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 oTypeStkPop
                 [ oTypeStkChooseKind (tpChar)
                 | tpChar:
                 ] or >
                 ] or >
                 oTypeStkPop
                 oTypeStkPush(tpBoolean)
                 oSymbolStkPop
                 oSymbolStkSetKind(syExpression)
                 >>
                ;CompareEqualityOperandTypes
                ] or >
                oSymbolStkSetKind(syExpression)
                >>
               ;BinaryOperator
               [ (sExpnEnd)
               | sExpnEnd:
               ] or >
               >>
              ;Expression
              [ oTypeStkChooseKind (tpBoolean)
              | tpBoolean:
              ] or >
              oSymbolStkPop
              oTypeStkPop
              >>
             ;BooleanControlExpression
             ?sThen (sThen)
             .tIfThen
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             @Statement
              oSymbolTblPushScope
              @Block
               ?sBegin (sBegin)
               [ (sCallStmt)
               | sCallStmt:
               @CallStmt
                ?sIdentifier (sIdentifier)
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syProcedure)
                | *:
                [ oSymbolStkChooseKind (syProcedure)
                | syProcedure:
                [ oSymbolStkChooseStandardRoutine (rtNull)
                | *:
                .tCallBegin
                oTypeStkPushSymbol
                [ oTypeStkChooseRecursionFlag (no)
                | *:
                @ActualParameters
                 oCountPush(zero)
                 [ (sIdentifier)
                 | *:
                 [ oTypeStkCompareParameterCount (no)
                 | *:
                 oCountIncrement
                 oSymbolStkPushFormalParameter
                 oTypeStkPushSymbol
                 [ oSymbolStkChooseKind (syVariable)
                 | syVariable:
                 @Expression
                  @Operand
                   [ (sIdentifier)
                   | sIdentifier:
                   oSymbolStkPushIdentifier
                   [ oSymbolStkChooseKind (syVariable)
                   | *:
                   [ oSymbolStkChooseKind (syVariable)
                   | syVariable:
                   @Variable
                    [ oSymbolStkChooseKind (syVariable)
                    | syVariable:
                    .tLiteralAddress
                    oValuePushSymbol
                    oEmitValue
                    % value emitted 4080
                    oValuePop
                    ] or >
                    oTypeStkPushSymbol
                    @VariableExtension
                     [ (sExpnEnd)
                     | *:
                     >>
                    ;VariableExtension
                    >>
                   ;Variable
                   @VariableOperand
                    [ oTypeStkChooseKind (tpBoolean)
                    | tpBoolean:
                    .tFetchBoolean
                    ] or >
                    >>
                   ;VariableOperand
                   ] or >
                   ] or >
                   >>
                  ;Operand
                  @UnaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;UnaryOperator
                  @BinaryOperator
                   [ (sExpnEnd)
                   | *:
                   >>
                  ;BinaryOperator
                  [ (sExpnEnd)
                  | sExpnEnd:
                  ] or >
                  >>
                 ;Expression
                 @CompareAndSwapTypes
                  [ oTypeStkChooseKind (tpBoolean)
                  | tpBoolean:
                  oTypeStkSwap
                  [ oTypeStkChooseKind (tpBoolean)
                  | tpBoolean:
                  ] or >
                  ] or >
                  >>
                 ;CompareAndSwapTypes
                 ] or >
                 oSymbolStkPop
                 oTypeStkPop
                 oSymbolStkPop
                 oTypeStkPop
                 .tParmEnd
                 }
                 [ (sParmEnd)
                 | sParmEnd:
                 ] or >
                 [ oTypeStkCompareParameterCount (yes)
                 | yes:
                 ] or >
                 oCountPop
                 >>
                ;ActualParameters
                .tCallEnd
                oValuePushSymbol
                oEmitValue
                % value emitted 3583
                oValuePop
                oTypeStkPop
                ] or >
                oSymbolStkPop
                >>
               ;CallStmt
               ] or >
               }
               [ (sEnd)
               | *:
               ] or >
               ?sEnd (sEnd)
               >>
              ;Block
              oSymbolTblPopScope
              >>
             ;Statement
             [ (sElse)
             | sElse:
             .tIfMerge
             oFixPushForwardBranch
             oEmitNullAddress
             % value emitted -32767
             oFixSwap
             oFixPopForwardBranch
             @Statement
              oSymbolTblPushScope
              @Block
               ?sBegin (sBegin)
               [ (sCallStmt)
               | sCallStmt:
               @CallStmt
                ?sIdentifier (sIdentifier)
                oSymbolStkPushIdentifier
                [ oSymbolStkChooseKind (syProcedure)
                | *:
                [ oSymbolStkChooseKind (syProcedure)
                | syProcedure:
                [ oSymbolStkChooseStandardRoutine (rtNull)
                | *:
                .tCallBegin
                oTypeStkPushSymbol
                [ oTypeStkChooseRecursionFlag (no)
                | *:
                @ActualParameters
                 oCountPush(zero)
                 [ (sParmEnd)
                 | sParmEnd:
                 ] or >
                 [ oTypeStkCompareParameterCount (yes)
                 | yes:
                 ] or >
                 oCountPop
                 >>
                ;ActualParameters
                .tCallEnd
                oValuePushSymbol
                oEmitValue
                % value emitted 3545
                oValuePop
                oTypeStkPop
                ] or >
                oSymbolStkPop
                >>
               ;CallStmt
               ] or >
               }
               [ (sEnd)
               | *:
               ] or >
               ?sEnd (sEnd)
               >>
              ;Block
              oSymbolTblPopScope
              >>
             ;Statement
             ] or >
             .tIfEnd
             oFixPopForwardBranch
             >>
            ;IfStmt
            ] or >
            }
            [ (sEnd)
            | *:
            ] or >
            ?sEnd (sEnd)
            >>
           ;Block
           oSymbolTblPopScope
           >>
          ;Statement
          ] or >
          .tIfEnd
          oFixPopForwardBranch
          >>
         ;IfStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       ] or >
       .tIfEnd
       oFixPopForwardBranch
       >>
      ;IfStmt
      ] or >
      }
      [ (sIfStmt)
      | sIfStmt:
      @IfStmt
       .tIfBegin
       @BooleanControlExpression
        @Expression
         @Operand
          [ (sIdentifier)
          | sIdentifier:
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syVariable)
          | *:
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          @Variable
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           .tLiteralAddress
           oValuePushSymbol
           oEmitValue
           % value emitted 109
           oValuePop
           ] or >
           oTypeStkPushSymbol
           @VariableExtension
            [ (sExpnEnd)
            | *:
            >>
           ;VariableExtension
           >>
          ;Variable
          @VariableOperand
           [ oTypeStkChooseKind (tpBoolean)
           | tpBoolean:
           .tFetchBoolean
           ] or >
           >>
          ;VariableOperand
          ] or >
          ] or >
          >>
         ;Operand
         @UnaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;UnaryOperator
         @BinaryOperator
          [ (sExpnEnd)
          | *:
          >>
         ;BinaryOperator
         [ (sExpnEnd)
         | sExpnEnd:
         ] or >
         >>
        ;Expression
        [ oTypeStkChooseKind (tpBoolean)
        | tpBoolean:
        ] or >
        oSymbolStkPop
        oTypeStkPop
        >>
       ;BooleanControlExpression
       ?sThen (sThen)
       .tIfThen
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtNull)
          | *:
          .tCallBegin
          oTypeStkPushSymbol
          [ oTypeStkChooseRecursionFlag (no)
          | *:
          @ActualParameters
           oCountPush(zero)
           [ (sParmEnd)
           | sParmEnd:
           ] or >
           [ oTypeStkCompareParameterCount (yes)
           | yes:
           ] or >
           oCountPop
           >>
          ;ActualParameters
          .tCallEnd
          oValuePushSymbol
          oEmitValue
          % value emitted 785
          oValuePop
          oTypeStkPop
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtWrite)
          | rtWrite:
          .tWriteBegin
          @WriteProcedure
           [ (sStringLiteral)
           | *:
           @WriteStandardExpnList
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            oSymbolStkPop
            [ (sStringLiteral)
            | *:
            .tTrapBegin
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            .tVarParm
            .tParmEnd
            @Expression
             @Operand
              [ (sStringLiteral)
              | sStringLiteral:
              oSymbolStkPush(syExpression)
              @StringLiteral
               .tSkipString
               oFixPushForwardBranch
               oEmitNullAddress
               % value emitted -32767
               .tStringData
               oValuePushStringLength
               oEmitValue
               % value emitted 13
               oValuePop
               oValuePushCodeAddress
               oValueNegate
               oEmitString
               % value emitted 32
               % value emitted 115
               % value emitted 116
               % value emitted 97
               % value emitted 110
               % value emitted 100
               % value emitted 115
               % value emitted 32
               % value emitted 119
               % value emitted 105
               % value emitted 116
               % value emitted 104
               % value emitted 32
               % value emitted 0
               oFixPopForwardBranch
               oTypeStkPush(tpChar)
               oTypeStkLinkToStandardType(stdChar)
               >>
              ;StringLiteral
              .tLiteralAddress
              oEmitValue
              % value emitted -4027
              .tFetchChar
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            .tParmEnd
            @WriteText
             [ (sIdentifier)
             | *:
             [ oTypeStkChooseKind (tpChar)
             | *:
             oValuePush(zero)
             .tLiteralInteger
             oEmitValue
             % value emitted 0
             oValuePop
             .tParmEnd
             [ oTypeStkChooseKind (tpChar)
             | tpChar:
             .tTrap
             oEmitTrapKind(trWriteString)
             % value emitted 109
             ] or >
             oSymbolStkPop
             oTypeStkPop
             >>
            ;WriteText
            }
            [ (sIdentifier)
            | *:
            .tTrapBegin
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            .tVarParm
            .tParmEnd
            @Expression
             @Operand
              [ (sIdentifier)
              | sIdentifier:
              oSymbolStkPushIdentifier
              [ oSymbolStkChooseKind (syVariable)
              | *:
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              @Variable
               [ oSymbolStkChooseKind (syVariable)
               | syVariable:
               .tLiteralAddress
               oValuePushSymbol
               oEmitValue
               % value emitted 104
               oValuePop
               ] or >
               oTypeStkPushSymbol
               @VariableExtension
                [ (sExpnEnd)
                | *:
                >>
               ;VariableExtension
               >>
              ;Variable
              @VariableOperand
               [ oTypeStkChooseKind (tpInteger)
               | tpInteger:
               .tFetchInteger
               ] or >
               >>
              ;VariableOperand
              ] or >
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            .tParmEnd
            @WriteText
             [ (sFieldWidth)
             | sFieldWidth:
             @Expression
              @Operand
               [ (sInteger)
               | sInteger:
               oValuePushInteger
               oSymbolStkPush(syExpression)
               oTypeStkPush(tpInteger)
               oTypeStkLinkToStandardType(stdInteger)
               .tLiteralInteger
               oEmitValue
               % value emitted 1
               oValuePop
               ] or >
               >>
              ;Operand
              @UnaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;UnaryOperator
              @BinaryOperator
               [ (sExpnEnd)
               | *:
               >>
              ;BinaryOperator
              [ (sExpnEnd)
              | sExpnEnd:
              ] or >
              >>
             ;Expression
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             ] or >
             oSymbolStkPop
             oTypeStkPop
             ] or >
             .tParmEnd
             [ oTypeStkChooseKind (tpInteger)
             | tpInteger:
             .tTrap
             oEmitTrapKind(trWriteInteger)
             % value emitted 8
             ] or >
             oSymbolStkPop
             oTypeStkPop
             >>
            ;WriteText
            }
            [ (sStringLiteral)
            | *:
            .tTrapBegin
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            .tVarParm
            .tParmEnd
            @Expression
             @Operand
              [ (sStringLiteral)
              | sStringLiteral:
              oSymbolStkPush(syExpression)
              @StringLiteral
               .tSkipString
               oFixPushForwardBranch
               oEmitNullAddress
               % value emitted -32767
               .tStringData
               oValuePushStringLength
               oEmitValue
               % value emitted 1
               oValuePop
               oValuePushCodeAddress
               oValueNegate
               oEmitString
               % value emitted 46
               % value emitted 0
               oFixPopForwardBranch
               oTypeStkPush(tpChar)
               oTypeStkLinkToStandardType(stdChar)
               >>
              ;StringLiteral
              .tLiteralAddress
              oEmitValue
              % value emitted -4073
              .tFetchChar
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            .tParmEnd
            @WriteText
             [ (sParmEnd)
             | *:
             [ oTypeStkChooseKind (tpChar)
             | *:
             oValuePush(zero)
             .tLiteralInteger
             oEmitValue
             % value emitted 0
             oValuePop
             .tParmEnd
             [ oTypeStkChooseKind (tpChar)
             | tpChar:
             .tTrap
             oEmitTrapKind(trWriteString)
             % value emitted 109
             ] or >
             oSymbolStkPop
             oTypeStkPop
             >>
            ;WriteText
            }
            [ (sParmEnd)
            | sParmEnd:
            ] or >
            oValuePop
            >>
           ;WriteStandardExpnList
           .tWriteEnd
           >>
          ;WriteProcedure
          ] or >
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtWriteln)
          | rtWriteln:
          .tTrapBegin
          @WritelnProcedure
           [ (sParmEnd)
           | sParmEnd:
           oSymbolStkPushStandardVariable(stdOutput)
           [ oSymbolStkChooseKind (syVariable)
           | *:
           oValuePushSymbol
           .tLiteralAddress
           oEmitValue
           % value emitted 4
           oValuePop
           oSymbolStkPop
           .tVarParm
           .tParmEnd
           ] or >
           >>
          ;WritelnProcedure
          .tTrap
          oEmitTrapKind(trWriteln)
          % value emitted 6
          ] or >
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       [ (sElse)
       | sElse:
       .tIfMerge
       oFixPushForwardBranch
       oEmitNullAddress
       % value emitted -32767
       oFixSwap
       oFixPopForwardBranch
       @Statement
        oSymbolTblPushScope
        @Block
         ?sBegin (sBegin)
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtNull)
          | *:
          .tCallBegin
          oTypeStkPushSymbol
          [ oTypeStkChooseRecursionFlag (no)
          | *:
          @ActualParameters
           oCountPush(zero)
           [ (sParmEnd)
           | sParmEnd:
           ] or >
           [ oTypeStkCompareParameterCount (yes)
           | yes:
           ] or >
           oCountPop
           >>
          ;ActualParameters
          .tCallEnd
          oValuePushSymbol
          oEmitValue
          % value emitted 785
          oValuePop
          oTypeStkPop
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtWrite)
          | rtWrite:
          .tWriteBegin
          @WriteProcedure
           [ (sStringLiteral)
           | *:
           @WriteStandardExpnList
            oSymbolStkPushStandardVariable(stdOutput)
            [ oSymbolStkChooseKind (syVariable)
            | *:
            oValuePushSymbol
            oSymbolStkPop
            [ (sStringLiteral)
            | *:
            .tTrapBegin
            .tLiteralAddress
            oEmitValue
            % value emitted 4
            .tVarParm
            .tParmEnd
            @Expression
             @Operand
              [ (sStringLiteral)
              | sStringLiteral:
              oSymbolStkPush(syExpression)
              @StringLiteral
               .tSkipString
               oFixPushForwardBranch
               oEmitNullAddress
               % value emitted -32767
               .tStringData
               oValuePushStringLength
               oEmitValue
               % value emitted 26
               oValuePop
               oValuePushCodeAddress
               oValueNegate
               oEmitString
               % value emitted 32
               % value emitted 116
               % value emitted 97
               % value emitted 107
               % value emitted 101
               % value emitted 115
               % value emitted 32
               % value emitted 97
               % value emitted 32
               % value emitted 99
               % value emitted 97
               % value emitted 114
               % value emitted 100
               % value emitted 32
               % value emitted 97
               % value emitted 110
               % value emitted 100
               % value emitted 32
               % value emitted 110
               % value emitted 111
               % value emitted 119
               % value emitted 32
               % value emitted 104
               % value emitted 97
               % value emitted 115
               % value emitted 32
               % value emitted 0
               oFixPopForwardBranch
               oTypeStkPush(tpChar)
               oTypeStkLinkToStandardType(stdChar)
               >>
              ;StringLiteral
              .tLiteralAddress
              oEmitValue
              % value emitted -4111
              .tFetchChar
              oValuePop
              ] or >
              >>
             ;Operand
             @UnaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;UnaryOperator
             @BinaryOperator
              [ (sExpnEnd)
              | *:
              >>
             ;BinaryOperator
             [ (sExpnEnd)
             | sExpnEnd:
             ] or >
             >>
            ;Expression
            .tParmEnd
            @WriteText
             [ (sParmEnd)
             | *:
             [ oTypeStkChooseKind (tpChar)
             | *:
             oValuePush(zero)
             .tLiteralInteger
             oEmitValue
             % value emitted 0
             oValuePop
             .tParmEnd
             [ oTypeStkChooseKind (tpChar)
             | tpChar:
             .tTrap
             oEmitTrapKind(trWriteString)
             % value emitted 109
             ] or >
             oSymbolStkPop
             oTypeStkPop
             >>
            ;WriteText
            }
            [ (sParmEnd)
            | sParmEnd:
            ] or >
            oValuePop
            >>
           ;WriteStandardExpnList
           .tWriteEnd
           >>
          ;WriteProcedure
          ] or >
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtNull)
          | *:
          .tCallBegin
          oTypeStkPushSymbol
          [ oTypeStkChooseRecursionFlag (no)
          | *:
          @ActualParameters
           oCountPush(zero)
           [ (sIdentifier)
           | *:
           [ oTypeStkCompareParameterCount (no)
           | *:
           oCountIncrement
           oSymbolStkPushFormalParameter
           oTypeStkPushSymbol
           [ oSymbolStkChooseKind (syVariable)
           | syVariable:
           @Expression
            @Operand
             [ (sIdentifier)
             | sIdentifier:
             oSymbolStkPushIdentifier
             [ oSymbolStkChooseKind (syVariable)
             | *:
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             @Variable
              [ oSymbolStkChooseKind (syVariable)
              | syVariable:
              .tLiteralAddress
              oValuePushSymbol
              oEmitValue
              % value emitted 80
              oValuePop
              ] or >
              oTypeStkPushSymbol
              @VariableExtension
               [ (sExpnEnd)
               | *:
               >>
              ;VariableExtension
              >>
             ;Variable
             @VariableOperand
              [ oTypeStkChooseKind (tpInteger)
              | tpInteger:
              .tFetchInteger
              ] or >
              >>
             ;VariableOperand
             ] or >
             ] or >
             >>
            ;Operand
            @UnaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;UnaryOperator
            @BinaryOperator
             [ (sExpnEnd)
             | *:
             >>
            ;BinaryOperator
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            >>
           ;Expression
           @CompareAndSwapTypes
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            oTypeStkSwap
            [ oTypeStkChooseKind (tpInteger)
            | tpInteger:
            ] or >
            ] or >
            >>
           ;CompareAndSwapTypes
           ] or >
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           .tParmEnd
           }
           [ (sIdentifier)
           | *:
           [ oTypeStkCompareParameterCount (no)
           | *:
           oCountIncrement
           oSymbolStkPushFormalParameter
           oTypeStkPushSymbol
           [ oSymbolStkChooseKind (syVarParameter)
           | syVarParameter:
           @VarActual
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 8
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sExpnEnd)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            .tVarParm
            [ oTypeStkCompareNames (yes)
            | yes:
            ] or >
            [ (sExpnEnd)
            | sExpnEnd:
            ] or >
            ] or >
            >>
           ;VarActual
           ] or >
           oSymbolStkPop
           oTypeStkPop
           oSymbolStkPop
           oTypeStkPop
           .tParmEnd
           }
           [ (sParmEnd)
           | sParmEnd:
           ] or >
           [ oTypeStkCompareParameterCount (yes)
           | yes:
           ] or >
           oCountPop
           >>
          ;ActualParameters
          .tCallEnd
          oValuePushSymbol
          oEmitValue
          % value emitted 437
          oValuePop
          oTypeStkPop
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sCallStmt)
         | sCallStmt:
         @CallStmt
          ?sIdentifier (sIdentifier)
          oSymbolStkPushIdentifier
          [ oSymbolStkChooseKind (syProcedure)
          | *:
          [ oSymbolStkChooseKind (syProcedure)
          | syProcedure:
          [ oSymbolStkChooseStandardRoutine (rtWriteln)
          | rtWriteln:
          .tTrapBegin
          @WritelnProcedure
           [ (sParmEnd)
           | sParmEnd:
           oSymbolStkPushStandardVariable(stdOutput)
           [ oSymbolStkChooseKind (syVariable)
           | *:
           oValuePushSymbol
           .tLiteralAddress
           oEmitValue
           % value emitted 4
           oValuePop
           oSymbolStkPop
           .tVarParm
           .tParmEnd
           ] or >
           >>
          ;WritelnProcedure
          .tTrap
          oEmitTrapKind(trWriteln)
          % value emitted 6
          ] or >
          ] or >
          oSymbolStkPop
          >>
         ;CallStmt
         ] or >
         }
         [ (sEnd)
         | *:
         ] or >
         ?sEnd (sEnd)
         >>
        ;Block
        oSymbolTblPopScope
        >>
       ;Statement
       ] or >
       .tIfEnd
       oFixPopForwardBranch
       >>
      ;IfStmt
      ] or >
      }
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblMergePublicScope
   >>
  ;PackageDefinition
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 45
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 84
        % value emitted 104
        % value emitted 105
        % value emitted 115
        % value emitted 32
        % value emitted 112
        % value emitted 114
        % value emitted 111
        % value emitted 103
        % value emitted 114
        % value emitted 97
        % value emitted 109
        % value emitted 32
        % value emitted 115
        % value emitted 105
        % value emitted 109
        % value emitted 117
        % value emitted 108
        % value emitted 97
        % value emitted 116
        % value emitted 101
        % value emitted 115
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 103
        % value emitted 97
        % value emitted 109
        % value emitted 101
        % value emitted 32
        % value emitted 111
        % value emitted 102
        % value emitted 32
        % value emitted 98
        % value emitted 108
        % value emitted 97
        % value emitted 99
        % value emitted 107
        % value emitted 106
        % value emitted 97
        % value emitted 99
        % value emitted 107
        % value emitted 46
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4186
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 69
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 84
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 100
        % value emitted 101
        % value emitted 97
        % value emitted 108
        % value emitted 101
        % value emitted 114
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 115
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 99
        % value emitted 111
        % value emitted 109
        % value emitted 112
        % value emitted 117
        % value emitted 108
        % value emitted 115
        % value emitted 111
        % value emitted 114
        % value emitted 121
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 114
        % value emitted 97
        % value emitted 116
        % value emitted 101
        % value emitted 103
        % value emitted 121
        % value emitted 32
        % value emitted 111
        % value emitted 102
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 97
        % value emitted 110
        % value emitted 100
        % value emitted 105
        % value emitted 110
        % value emitted 103
        % value emitted 32
        % value emitted 111
        % value emitted 110
        % value emitted 32
        % value emitted 49
        % value emitted 55
        % value emitted 32
        % value emitted 111
        % value emitted 114
        % value emitted 32
        % value emitted 98
        % value emitted 101
        % value emitted 116
        % value emitted 116
        % value emitted 101
        % value emitted 114
        % value emitted 46
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4270
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 23
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 84
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 101
        % value emitted 114
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 115
        % value emitted 32
        % value emitted 101
        % value emitted 105
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 114
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4378
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 64
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 32
        % value emitted 32
        % value emitted 91
        % value emitted 49
        % value emitted 93
        % value emitted 32
        % value emitted 84
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 97
        % value emitted 110
        % value emitted 100
        % value emitted 97
        % value emitted 114
        % value emitted 100
        % value emitted 32
        % value emitted 110
        % value emitted 97
        % value emitted 105
        % value emitted 118
        % value emitted 101
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 114
        % value emitted 97
        % value emitted 116
        % value emitted 101
        % value emitted 103
        % value emitted 121
        % value emitted 32
        % value emitted 111
        % value emitted 102
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 97
        % value emitted 110
        % value emitted 100
        % value emitted 105
        % value emitted 110
        % value emitted 103
        % value emitted 32
        % value emitted 111
        % value emitted 110
        % value emitted 32
        % value emitted 110
        % value emitted 32
        % value emitted 111
        % value emitted 114
        % value emitted 32
        % value emitted 98
        % value emitted 101
        % value emitted 116
        % value emitted 116
        % value emitted 101
        % value emitted 114
        % value emitted 44
        % value emitted 32
        % value emitted 111
        % value emitted 114
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4431
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 66
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 32
        % value emitted 32
        % value emitted 91
        % value emitted 50
        % value emitted 93
        % value emitted 32
        % value emitted 65
        % value emitted 32
        % value emitted 115
        % value emitted 105
        % value emitted 109
        % value emitted 112
        % value emitted 108
        % value emitted 105
        % value emitted 102
        % value emitted 105
        % value emitted 101
        % value emitted 100
        % value emitted 32
        % value emitted 118
        % value emitted 101
        % value emitted 114
        % value emitted 115
        % value emitted 105
        % value emitted 111
        % value emitted 110
        % value emitted 32
        % value emitted 111
        % value emitted 102
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 114
        % value emitted 97
        % value emitted 116
        % value emitted 101
        % value emitted 103
        % value emitted 121
        % value emitted 32
        % value emitted 100
        % value emitted 101
        % value emitted 115
        % value emitted 99
        % value emitted 114
        % value emitted 105
        % value emitted 98
        % value emitted 101
        % value emitted 100
        % value emitted 32
        % value emitted 98
        % value emitted 121
        % value emitted 32
        % value emitted 32
        % value emitted 69
        % value emitted 46
        % value emitted 79
        % value emitted 46
        % value emitted 84
        % value emitted 104
        % value emitted 111
        % value emitted 114
        % value emitted 112
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4525
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 69
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 32
        % value emitted 32
        % value emitted 32
        % value emitted 32
        % value emitted 32
        % value emitted 32
        % value emitted 105
        % value emitted 110
        % value emitted 32
        % value emitted 104
        % value emitted 105
        % value emitted 115
        % value emitted 32
        % value emitted 98
        % value emitted 111
        % value emitted 111
        % value emitted 107
        % value emitted 32
        % value emitted 34
        % value emitted 66
        % value emitted 101
        % value emitted 97
        % value emitted 116
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 68
        % value emitted 101
        % value emitted 97
        % value emitted 108
        % value emitted 101
        % value emitted 114
        % value emitted 34
        % value emitted 32
        % value emitted 40
        % value emitted 86
        % value emitted 105
        % value emitted 110
        % value emitted 116
        % value emitted 97
        % value emitted 103
        % value emitted 101
        % value emitted 32
        % value emitted 66
        % value emitted 111
        % value emitted 111
        % value emitted 107
        % value emitted 115
        % value emitted 44
        % value emitted 32
        % value emitted 49
        % value emitted 57
        % value emitted 54
        % value emitted 54
        % value emitted 41
        % value emitted 59
        % value emitted 32
        % value emitted 112
        % value emitted 112
        % value emitted 46
        % value emitted 32
        % value emitted 50
        % value emitted 48
        % value emitted 45
        % value emitted 50
        % value emitted 49
        % value emitted 46
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4621
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 7
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 73
        % value emitted 110
        % value emitted 112
        % value emitted 117
        % value emitted 116
        % value emitted 32
        % value emitted 58
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4729
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 73
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 32
        % value emitted 32
        % value emitted 70
        % value emitted 111
        % value emitted 114
        % value emitted 32
        % value emitted 101
        % value emitted 97
        % value emitted 99
        % value emitted 104
        % value emitted 32
        % value emitted 115
        % value emitted 104
        % value emitted 117
        % value emitted 102
        % value emitted 102
        % value emitted 108
        % value emitted 101
        % value emitted 44
        % value emitted 32
        % value emitted 97
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 101
        % value emitted 114
        % value emitted 32
        % value emitted 110
        % value emitted 97
        % value emitted 109
        % value emitted 101
        % value emitted 32
        % value emitted 40
        % value emitted 99
        % value emitted 104
        % value emitted 97
        % value emitted 114
        % value emitted 97
        % value emitted 99
        % value emitted 116
        % value emitted 101
        % value emitted 114
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 114
        % value emitted 105
        % value emitted 110
        % value emitted 103
        % value emitted 32
        % value emitted 111
        % value emitted 102
        % value emitted 32
        % value emitted 60
        % value emitted 61
        % value emitted 32
        % value emitted 50
        % value emitted 48
        % value emitted 32
        % value emitted 99
        % value emitted 104
        % value emitted 97
        % value emitted 114
        % value emitted 97
        % value emitted 99
        % value emitted 116
        % value emitted 101
        % value emitted 114
        % value emitted 115
        % value emitted 41
        % value emitted 44
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4766
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 69
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 32
        % value emitted 32
        % value emitted 97
        % value emitted 110
        % value emitted 100
        % value emitted 32
        % value emitted 105
        % value emitted 102
        % value emitted 32
        % value emitted 40
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 101
        % value emitted 114
        % value emitted 32
        % value emitted 110
        % value emitted 97
        % value emitted 109
        % value emitted 101
        % value emitted 32
        % value emitted 115
        % value emitted 112
        % value emitted 101
        % value emitted 99
        % value emitted 105
        % value emitted 102
        % value emitted 105
        % value emitted 101
        % value emitted 100
        % value emitted 32
        % value emitted 105
        % value emitted 115
        % value emitted 32
        % value emitted 110
        % value emitted 111
        % value emitted 116
        % value emitted 32
        % value emitted 34
        % value emitted 69
        % value emitted 46
        % value emitted 79
        % value emitted 46
        % value emitted 84
        % value emitted 104
        % value emitted 111
        % value emitted 114
        % value emitted 112
        % value emitted 34
        % value emitted 44
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 99
        % value emitted 111
        % value emitted 117
        % value emitted 110
        % value emitted 116
        % value emitted 32
        % value emitted 91
        % value emitted 110
        % value emitted 93
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4869
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 29
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 32
        % value emitted 32
        % value emitted 111
        % value emitted 110
        % value emitted 32
        % value emitted 119
        % value emitted 104
        % value emitted 105
        % value emitted 99
        % value emitted 104
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 101
        % value emitted 114
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 97
        % value emitted 110
        % value emitted 100
        % value emitted 115
        % value emitted 46
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -4968
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 69
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 73
        % value emitted 102
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 101
        % value emitted 114
        % value emitted 32
        % value emitted 110
        % value emitted 97
        % value emitted 109
        % value emitted 101
        % value emitted 32
        % value emitted 115
        % value emitted 112
        % value emitted 101
        % value emitted 99
        % value emitted 105
        % value emitted 102
        % value emitted 105
        % value emitted 101
        % value emitted 100
        % value emitted 32
        % value emitted 105
        % value emitted 115
        % value emitted 32
        % value emitted 34
        % value emitted 69
        % value emitted 46
        % value emitted 79
        % value emitted 46
        % value emitted 84
        % value emitted 104
        % value emitted 111
        % value emitted 114
        % value emitted 112
        % value emitted 34
        % value emitted 44
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 101
        % value emitted 114
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 114
        % value emitted 97
        % value emitted 116
        % value emitted 101
        % value emitted 103
        % value emitted 121
        % value emitted 32
        % value emitted 117
        % value emitted 115
        % value emitted 101
        % value emitted 100
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -5036
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sStringLiteral)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 17
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 32
        % value emitted 119
        % value emitted 105
        % value emitted 108
        % value emitted 108
        % value emitted 32
        % value emitted 98
        % value emitted 101
        % value emitted 32
        % value emitted 84
        % value emitted 104
        % value emitted 111
        % value emitted 114
        % value emitted 112
        % value emitted 39
        % value emitted 115
        % value emitted 46
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -5124
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 71
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 79
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 114
        % value emitted 119
        % value emitted 105
        % value emitted 115
        % value emitted 101
        % value emitted 44
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 101
        % value emitted 114
        % value emitted 32
        % value emitted 119
        % value emitted 105
        % value emitted 108
        % value emitted 108
        % value emitted 32
        % value emitted 117
        % value emitted 115
        % value emitted 101
        % value emitted 32
        % value emitted 116
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 97
        % value emitted 110
        % value emitted 100
        % value emitted 97
        % value emitted 114
        % value emitted 100
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 111
        % value emitted 112
        % value emitted 32
        % value emitted 111
        % value emitted 110
        % value emitted 32
        % value emitted 99
        % value emitted 111
        % value emitted 117
        % value emitted 110
        % value emitted 116
        % value emitted 32
        % value emitted 62
        % value emitted 32
        % value emitted 110
        % value emitted 32
        % value emitted 115
        % value emitted 116
        % value emitted 114
        % value emitted 97
        % value emitted 116
        % value emitted 101
        % value emitted 103
        % value emitted 121
        % value emitted 46
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -5173
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWrite)
   | rtWrite:
   .tWriteBegin
   @WriteProcedure
    [ (sStringLiteral)
    | *:
    @WriteStandardExpnList
     oSymbolStkPushStandardVariable(stdOutput)
     [ oSymbolStkChooseKind (syVariable)
     | *:
     oValuePushSymbol
     oSymbolStkPop
     [ (sStringLiteral)
     | *:
     .tTrapBegin
     .tLiteralAddress
     oEmitValue
     % value emitted 4
     .tVarParm
     .tParmEnd
     @Expression
      @Operand
       [ (sStringLiteral)
       | sStringLiteral:
       oSymbolStkPush(syExpression)
       @StringLiteral
        .tSkipString
        oFixPushForwardBranch
        oEmitNullAddress
        % value emitted -32767
        .tStringData
        oValuePushStringLength
        oEmitValue
        % value emitted 71
        oValuePop
        oValuePushCodeAddress
        oValueNegate
        oEmitString
        % value emitted 84
        % value emitted 104
        % value emitted 101
        % value emitted 32
        % value emitted 112
        % value emitted 114
        % value emitted 111
        % value emitted 103
        % value emitted 114
        % value emitted 97
        % value emitted 109
        % value emitted 32
        % value emitted 119
        % value emitted 105
        % value emitted 108
        % value emitted 108
        % value emitted 32
        % value emitted 115
        % value emitted 105
        % value emitted 109
        % value emitted 117
        % value emitted 108
        % value emitted 97
        % value emitted 116
        % value emitted 101
        % value emitted 32
        % value emitted 111
        % value emitted 110
        % value emitted 101
        % value emitted 32
        % value emitted 99
        % value emitted 111
        % value emitted 109
        % value emitted 112
        % value emitted 108
        % value emitted 101
        % value emitted 116
        % value emitted 101
        % value emitted 32
        % value emitted 115
        % value emitted 104
        % value emitted 117
        % value emitted 102
        % value emitted 102
        % value emitted 108
        % value emitted 101
        % value emitted 32
        % value emitted 111
        % value emitted 102
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 32
        % value emitted 102
        % value emitted 111
        % value emitted 114
        % value emitted 32
        % value emitted 101
        % value emitted 97
        % value emitted 99
        % value emitted 104
        % value emitted 32
        % value emitted 112
        % value emitted 108
        % value emitted 97
        % value emitted 121
        % value emitted 101
        % value emitted 114
        % value emitted 46
        % value emitted 0
        oFixPopForwardBranch
        oTypeStkPush(tpChar)
        oTypeStkLinkToStandardType(stdChar)
        >>
       ;StringLiteral
       .tLiteralAddress
       oEmitValue
       % value emitted -5283
       .tFetchChar
       oValuePop
       ] or >
       >>
      ;Operand
      @UnaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;UnaryOperator
      @BinaryOperator
       [ (sExpnEnd)
       | *:
       >>
      ;BinaryOperator
      [ (sExpnEnd)
      | sExpnEnd:
      ] or >
      >>
     ;Expression
     .tParmEnd
     @WriteText
      [ (sParmEnd)
      | *:
      [ oTypeStkChooseKind (tpChar)
      | *:
      oValuePush(zero)
      .tLiteralInteger
      oEmitValue
      % value emitted 0
      oValuePop
      .tParmEnd
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tTrap
      oEmitTrapKind(trWriteString)
      % value emitted 109
      ] or >
      oSymbolStkPop
      oTypeStkPop
      >>
     ;WriteText
     }
     [ (sParmEnd)
     | sParmEnd:
     ] or >
     oValuePop
     >>
    ;WriteStandardExpnList
    .tWriteEnd
    >>
   ;WriteProcedure
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtWriteln)
   | rtWriteln:
   .tTrapBegin
   @WritelnProcedure
    [ (sParmEnd)
    | sParmEnd:
    oSymbolStkPushStandardVariable(stdOutput)
    [ oSymbolStkChooseKind (syVariable)
    | *:
    oValuePushSymbol
    .tLiteralAddress
    oEmitValue
    % value emitted 4
    oValuePop
    oSymbolStkPop
    .tVarParm
    .tParmEnd
    ] or >
    >>
   ;WritelnProcedure
   .tTrap
   oEmitTrapKind(trWriteln)
   % value emitted 6
   ] or >
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sLike)
    | *:
    >>
   ;PublicDefinition
   [ (sLike)
   | *:
   @TypeBody
    [ (sLike)
    | *:
    @SimpleType
     ?sLike (sLike)
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syConstant)
     | syConstant:
     oTypeStkPushSymbol
     ] or >
     oSymbolStkPop
     ] or >
     >>
    ;SimpleType
    @TypeTblEnterIfNew
     [ oTypeStkChooseTypeReference (yes)
     | *:
     >>
    ;TypeTblEnterIfNew
    >>
   ;TypeBody
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpBoolean)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpBoolean)
     | tpBoolean:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtNull)
   | *:
   .tCallBegin
   oTypeStkPushSymbol
   [ oTypeStkChooseRecursionFlag (no)
   | *:
   @ActualParameters
    oCountPush(zero)
    [ (sIdentifier)
    | *:
    [ oTypeStkCompareParameterCount (no)
    | *:
    oCountIncrement
    oSymbolStkPushFormalParameter
    oTypeStkPushSymbol
    [ oSymbolStkChooseKind (syVarParameter)
    | syVarParameter:
    @VarActual
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4081
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sExpnEnd)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     .tVarParm
     [ oTypeStkCompareNames (yes)
     | yes:
     ] or >
     [ (sExpnEnd)
     | sExpnEnd:
     ] or >
     ] or >
     >>
    ;VarActual
    ] or >
    oSymbolStkPop
    oTypeStkPop
    oSymbolStkPop
    oTypeStkPop
    .tParmEnd
    }
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    [ oTypeStkCompareParameterCount (yes)
    | yes:
    ] or >
    oCountPop
    >>
   ;ActualParameters
   .tCallEnd
   oValuePushSymbol
   oEmitValue
   % value emitted 924
   oValuePop
   oTypeStkPop
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sWhileStmt)
  | sWhileStmt:
  @WhileStmt
   .tWhileBegin
   oFixPushTargetAddress
   @BooleanControlExpression
    @Expression
     @Operand
      [ (sIdentifier)
      | sIdentifier:
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syVariable)
      | *:
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      @Variable
       [ oSymbolStkChooseKind (syVariable)
       | syVariable:
       .tLiteralAddress
       oValuePushSymbol
       oEmitValue
       % value emitted 4081
       oValuePop
       ] or >
       oTypeStkPushSymbol
       @VariableExtension
        [ (sExpnEnd)
        | *:
        >>
       ;VariableExtension
       >>
      ;Variable
      @VariableOperand
       [ oTypeStkChooseKind (tpBoolean)
       | tpBoolean:
       .tFetchBoolean
       ] or >
       >>
      ;VariableOperand
      ] or >
      ] or >
      >>
     ;Operand
     @UnaryOperator
      [ (sExpnEnd)
      | *:
      >>
     ;UnaryOperator
     @BinaryOperator
      [ (sExpnEnd)
      | *:
      >>
     ;BinaryOperator
     [ (sExpnEnd)
     | sExpnEnd:
     ] or >
     >>
    ;Expression
    [ oTypeStkChooseKind (tpBoolean)
    | tpBoolean:
    ] or >
    oSymbolStkPop
    oTypeStkPop
    >>
   ;BooleanControlExpression
   .tWhileTest
   oFixPushForwardBranch
   oEmitNullAddress
   % value emitted -32767
   oFixSwap
   @Statement
    oSymbolTblPushScope
    @Block
     ?sBegin (sBegin)
     [ (sNullStmt)
     | sNullStmt:
     ] or >
     }
     [ (sCallStmt)
     | sCallStmt:
     @CallStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syProcedure)
      | *:
      [ oSymbolStkChooseKind (syProcedure)
      | syProcedure:
      [ oSymbolStkChooseStandardRoutine (rtNull)
      | *:
      .tCallBegin
      oTypeStkPushSymbol
      [ oTypeStkChooseRecursionFlag (no)
      | *:
      @ActualParameters
       oCountPush(zero)
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       [ oTypeStkCompareParameterCount (yes)
       | yes:
       ] or >
       oCountPop
       >>
      ;ActualParameters
      .tCallEnd
      oValuePushSymbol
      oEmitValue
      % value emitted 167
      oValuePop
      oTypeStkPop
      ] or >
      oSymbolStkPop
      >>
     ;CallStmt
     ] or >
     }
     [ (sCallStmt)
     | sCallStmt:
     @CallStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syProcedure)
      | *:
      [ oSymbolStkChooseKind (syProcedure)
      | syProcedure:
      [ oSymbolStkChooseStandardRoutine (rtNull)
      | *:
      .tCallBegin
      oTypeStkPushSymbol
      [ oTypeStkChooseRecursionFlag (no)
      | *:
      @ActualParameters
       oCountPush(zero)
       [ (sIdentifier)
       | *:
       [ oTypeStkCompareParameterCount (no)
       | *:
       oCountIncrement
       oSymbolStkPushFormalParameter
       oTypeStkPushSymbol
       [ oSymbolStkChooseKind (syVarParameter)
       | syVarParameter:
       @VarActual
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4081
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sExpnEnd)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        .tVarParm
        [ oTypeStkCompareNames (yes)
        | yes:
        ] or >
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        ] or >
        >>
       ;VarActual
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       .tParmEnd
       }
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       [ oTypeStkCompareParameterCount (yes)
       | yes:
       ] or >
       oCountPop
       >>
      ;ActualParameters
      .tCallEnd
      oValuePushSymbol
      oEmitValue
      % value emitted 1735
      oValuePop
      oTypeStkPop
      ] or >
      oSymbolStkPop
      >>
     ;CallStmt
     ] or >
     }
     [ (sWhileStmt)
     | sWhileStmt:
     @WhileStmt
      .tWhileBegin
      oFixPushTargetAddress
      @BooleanControlExpression
       @Expression
        @Operand
         [ (sIdentifier)
         | sIdentifier:
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syVariable)
         | *:
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         @Variable
          [ oSymbolStkChooseKind (syVariable)
          | syVariable:
          .tLiteralAddress
          oValuePushSymbol
          oEmitValue
          % value emitted 4081
          oValuePop
          ] or >
          oTypeStkPushSymbol
          @VariableExtension
           [ (sExpnEnd)
           | *:
           >>
          ;VariableExtension
          >>
         ;Variable
         @VariableOperand
          [ oTypeStkChooseKind (tpBoolean)
          | tpBoolean:
          .tFetchBoolean
          ] or >
          >>
         ;VariableOperand
         ] or >
         ] or >
         >>
        ;Operand
        @UnaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;UnaryOperator
        @BinaryOperator
         [ (sExpnEnd)
         | *:
         >>
        ;BinaryOperator
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        >>
       ;Expression
       [ oTypeStkChooseKind (tpBoolean)
       | tpBoolean:
       ] or >
       oSymbolStkPop
       oTypeStkPop
       >>
      ;BooleanControlExpression
      .tWhileTest
      oFixPushForwardBranch
      oEmitNullAddress
      % value emitted -32767
      oFixSwap
      @Statement
       oSymbolTblPushScope
       @Block
        ?sBegin (sBegin)
        [ (sNullStmt)
        | sNullStmt:
        ] or >
        }
        [ (sCallStmt)
        | sCallStmt:
        @CallStmt
         ?sIdentifier (sIdentifier)
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syProcedure)
         | *:
         [ oSymbolStkChooseKind (syProcedure)
         | syProcedure:
         [ oSymbolStkChooseStandardRoutine (rtNull)
         | *:
         .tCallBegin
         oTypeStkPushSymbol
         [ oTypeStkChooseRecursionFlag (no)
         | *:
         @ActualParameters
          oCountPush(zero)
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          [ oTypeStkCompareParameterCount (yes)
          | yes:
          ] or >
          oCountPop
          >>
         ;ActualParameters
         .tCallEnd
         oValuePushSymbol
         oEmitValue
         % value emitted 2486
         oValuePop
         oTypeStkPop
         ] or >
         oSymbolStkPop
         >>
        ;CallStmt
        ] or >
        }
        [ (sWhileStmt)
        | sWhileStmt:
        @WhileStmt
         .tWhileBegin
         oFixPushTargetAddress
         @BooleanControlExpression
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 109
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sNot)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpBoolean)
             | tpBoolean:
             .tFetchBoolean
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sNot)
            | sNot:
            .tNot
            oTypeStkPush(tpBoolean)
            @CompareAndSwapTypes
             [ oTypeStkChooseKind (tpBoolean)
             | tpBoolean:
             oTypeStkSwap
             [ oTypeStkChooseKind (tpBoolean)
             | tpBoolean:
             ] or >
             ] or >
             >>
            ;CompareAndSwapTypes
            oTypeStkPop
            ] or >
            oSymbolStkSetKind(syExpression)
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          [ oTypeStkChooseKind (tpBoolean)
          | tpBoolean:
          ] or >
          oSymbolStkPop
          oTypeStkPop
          >>
         ;BooleanControlExpression
         .tWhileTest
         oFixPushForwardBranch
         oEmitNullAddress
         % value emitted -32767
         oFixSwap
         @Statement
          oSymbolTblPushScope
          @Block
           ?sBegin (sBegin)
           [ (sNullStmt)
           | sNullStmt:
           ] or >
           }
           [ (sCallStmt)
           | sCallStmt:
           @CallStmt
            ?sIdentifier (sIdentifier)
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syProcedure)
            | *:
            [ oSymbolStkChooseKind (syProcedure)
            | syProcedure:
            [ oSymbolStkChooseStandardRoutine (rtNull)
            | *:
            .tCallBegin
            oTypeStkPushSymbol
            [ oTypeStkChooseRecursionFlag (no)
            | *:
            @ActualParameters
             oCountPush(zero)
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             [ oTypeStkCompareParameterCount (yes)
             | yes:
             ] or >
             oCountPop
             >>
            ;ActualParameters
            .tCallEnd
            oValuePushSymbol
            oEmitValue
            % value emitted 3759
            oValuePop
            oTypeStkPop
            ] or >
            oSymbolStkPop
            >>
           ;CallStmt
           ] or >
           }
           [ (sEnd)
           | *:
           ] or >
           ?sEnd (sEnd)
           >>
          ;Block
          oSymbolTblPopScope
          >>
         ;Statement
         .tWhileEnd
         oFixPopTargetAddress
         % value emitted 5419
         oFixPopForwardBranch
         >>
        ;WhileStmt
        ] or >
        }
        [ (sWhileStmt)
        | sWhileStmt:
        @WhileStmt
         .tWhileBegin
         oFixPushTargetAddress
         @BooleanControlExpression
          @Expression
           @Operand
            [ (sIdentifier)
            | sIdentifier:
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syVariable)
            | *:
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            @Variable
             [ oSymbolStkChooseKind (syVariable)
             | syVariable:
             .tLiteralAddress
             oValuePushSymbol
             oEmitValue
             % value emitted 108
             oValuePop
             ] or >
             oTypeStkPushSymbol
             @VariableExtension
              [ (sNot)
              | *:
              >>
             ;VariableExtension
             >>
            ;Variable
            @VariableOperand
             [ oTypeStkChooseKind (tpBoolean)
             | tpBoolean:
             .tFetchBoolean
             ] or >
             >>
            ;VariableOperand
            ] or >
            ] or >
            >>
           ;Operand
           @UnaryOperator
            [ (sNot)
            | sNot:
            .tNot
            oTypeStkPush(tpBoolean)
            @CompareAndSwapTypes
             [ oTypeStkChooseKind (tpBoolean)
             | tpBoolean:
             oTypeStkSwap
             [ oTypeStkChooseKind (tpBoolean)
             | tpBoolean:
             ] or >
             ] or >
             >>
            ;CompareAndSwapTypes
            oTypeStkPop
            ] or >
            oSymbolStkSetKind(syExpression)
            >>
           ;UnaryOperator
           @BinaryOperator
            [ (sExpnEnd)
            | *:
            >>
           ;BinaryOperator
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           >>
          ;Expression
          [ oTypeStkChooseKind (tpBoolean)
          | tpBoolean:
          ] or >
          oSymbolStkPop
          oTypeStkPop
          >>
         ;BooleanControlExpression
         .tWhileTest
         oFixPushForwardBranch
         oEmitNullAddress
         % value emitted -32767
         oFixSwap
         @Statement
          oSymbolTblPushScope
          @Block
           ?sBegin (sBegin)
           [ (sNullStmt)
           | sNullStmt:
           ] or >
           }
           [ (sCallStmt)
           | sCallStmt:
           @CallStmt
            ?sIdentifier (sIdentifier)
            oSymbolStkPushIdentifier
            [ oSymbolStkChooseKind (syProcedure)
            | *:
            [ oSymbolStkChooseKind (syProcedure)
            | syProcedure:
            [ oSymbolStkChooseStandardRoutine (rtNull)
            | *:
            .tCallBegin
            oTypeStkPushSymbol
            [ oTypeStkChooseRecursionFlag (no)
            | *:
            @ActualParameters
             oCountPush(zero)
             [ (sParmEnd)
             | sParmEnd:
             ] or >
             [ oTypeStkCompareParameterCount (yes)
             | yes:
             ] or >
             oCountPop
             >>
            ;ActualParameters
            .tCallEnd
            oValuePushSymbol
            oEmitValue
            % value emitted 2967
            oValuePop
            oTypeStkPop
            ] or >
            oSymbolStkPop
            >>
           ;CallStmt
           ] or >
           }
           [ (sEnd)
           | *:
           ] or >
           ?sEnd (sEnd)
           >>
          ;Block
          oSymbolTblPopScope
          >>
         ;Statement
         .tWhileEnd
         oFixPopTargetAddress
         % value emitted 5437
         oFixPopForwardBranch
         >>
        ;WhileStmt
        ] or >
        }
        [ (sCallStmt)
        | sCallStmt:
        @CallStmt
         ?sIdentifier (sIdentifier)
         oSymbolStkPushIdentifier
         [ oSymbolStkChooseKind (syProcedure)
         | *:
         [ oSymbolStkChooseKind (syProcedure)
         | syProcedure:
         [ oSymbolStkChooseStandardRoutine (rtNull)
         | *:
         .tCallBegin
         oTypeStkPushSymbol
         [ oTypeStkChooseRecursionFlag (no)
         | *:
         @ActualParameters
          oCountPush(zero)
          [ (sIdentifier)
          | *:
          [ oTypeStkCompareParameterCount (no)
          | *:
          oCountIncrement
          oSymbolStkPushFormalParameter
          oTypeStkPushSymbol
          [ oSymbolStkChooseKind (syVarParameter)
          | syVarParameter:
          @VarActual
           [ (sIdentifier)
           | sIdentifier:
           oSymbolStkPushIdentifier
           @Variable
            [ oSymbolStkChooseKind (syVariable)
            | syVariable:
            .tLiteralAddress
            oValuePushSymbol
            oEmitValue
            % value emitted 4081
            oValuePop
            ] or >
            oTypeStkPushSymbol
            @VariableExtension
             [ (sExpnEnd)
             | *:
             >>
            ;VariableExtension
            >>
           ;Variable
           .tVarParm
           [ oTypeStkCompareNames (yes)
           | yes:
           ] or >
           [ (sExpnEnd)
           | sExpnEnd:
           ] or >
           ] or >
           >>
          ;VarActual
          ] or >
          oSymbolStkPop
          oTypeStkPop
          oSymbolStkPop
          oTypeStkPop
          .tParmEnd
          }
          [ (sParmEnd)
          | sParmEnd:
          ] or >
          [ oTypeStkCompareParameterCount (yes)
          | yes:
          ] or >
          oCountPop
          >>
         ;ActualParameters
         .tCallEnd
         oValuePushSymbol
         oEmitValue
         % value emitted 1735
         oValuePop
         oTypeStkPop
         ] or >
         oSymbolStkPop
         >>
        ;CallStmt
        ] or >
        }
        [ (sEnd)
        | *:
        ] or >
        ?sEnd (sEnd)
        >>
       ;Block
       oSymbolTblPopScope
       >>
      ;Statement
      .tWhileEnd
      oFixPopTargetAddress
      % value emitted 5406
      oFixPopForwardBranch
      >>
     ;WhileStmt
     ] or >
     }
     [ (sCallStmt)
     | sCallStmt:
     @CallStmt
      ?sIdentifier (sIdentifier)
      oSymbolStkPushIdentifier
      [ oSymbolStkChooseKind (syProcedure)
      | *:
      [ oSymbolStkChooseKind (syProcedure)
      | syProcedure:
      [ oSymbolStkChooseStandardRoutine (rtNull)
      | *:
      .tCallBegin
      oTypeStkPushSymbol
      [ oTypeStkChooseRecursionFlag (no)
      | *:
      @ActualParameters
       oCountPush(zero)
       [ (sIdentifier)
       | *:
       [ oTypeStkCompareParameterCount (no)
       | *:
       oCountIncrement
       oSymbolStkPushFormalParameter
       oTypeStkPushSymbol
       [ oSymbolStkChooseKind (syVarParameter)
       | syVarParameter:
       @VarActual
        [ (sIdentifier)
        | sIdentifier:
        oSymbolStkPushIdentifier
        @Variable
         [ oSymbolStkChooseKind (syVariable)
         | syVariable:
         .tLiteralAddress
         oValuePushSymbol
         oEmitValue
         % value emitted 4081
         oValuePop
         ] or >
         oTypeStkPushSymbol
         @VariableExtension
          [ (sExpnEnd)
          | *:
          >>
         ;VariableExtension
         >>
        ;Variable
        .tVarParm
        [ oTypeStkCompareNames (yes)
        | yes:
        ] or >
        [ (sExpnEnd)
        | sExpnEnd:
        ] or >
        ] or >
        >>
       ;VarActual
       ] or >
       oSymbolStkPop
       oTypeStkPop
       oSymbolStkPop
       oTypeStkPop
       .tParmEnd
       }
       [ (sParmEnd)
       | sParmEnd:
       ] or >
       [ oTypeStkCompareParameterCount (yes)
       | yes:
       ] or >
       oCountPop
       >>
      ;ActualParameters
      .tCallEnd
      oValuePushSymbol
      oEmitValue
      % value emitted 924
      oValuePop
      oTypeStkPop
      ] or >
      oSymbolStkPop
      >>
     ;CallStmt
     ] or >
     }
     [ (sEnd)
     | *:
     ] or >
     ?sEnd (sEnd)
     >>
    ;Block
    oSymbolTblPopScope
    >>
   ;Statement
   .tWhileEnd
   oFixPopTargetAddress
   % value emitted 5384
   oFixPopForwardBranch
   >>
  ;WhileStmt
  ] or >
  }
  [ (sEnd)
  | *:
  ] or >
  ?sEnd (sEnd)
  >>
 ;Block
 [ oSymbolTblLookupExternal (no)
 | *:
 oSymbolTblPopScope
 oSymbolStkPop
 .tTrapBegin
 .tTrap
 oEmitTrapKind(trHalt)
 % value emitted 0
 >>
;Program
