@Program
 ?sProgram (sProgram)
 oSymbolStkPush(syProcedure)
 oSymbolTblPushScope
 oCountPush(three)
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdOutput)
  | stdOutput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(two)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 2
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sParmEnd)
 | sParmEnd:
 ] or >
 oCountPop
 @Block
  ?sBegin (sBegin)
  [ (sPackage)
  | sPackage:
  @PackageDefinition
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   oSymbolStkSetKind(syPackage)
   oValuePushCodeAddress
   oSymbolStkEnterValue
   oValuePop
   oTypeStkPush(tpNull)
   oTypeStkSetRecursionFlag(yes)
   oTypeTblEnter
   oSymbolStkEnterTypeReference
   oSymbolTblEnter
   oSymbolTblPushScope
   @Block
    ?sBegin (sBegin)
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     @PublicDefinition
      [ (sPublic)
      | sPublic:
      oSymbolStkSetPublicFlag
      ] or >
      >>
     ;PublicDefinition
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sProcedure)
    | sProcedure:
    @ProcedureDefinition
     ?sIdentifier (sIdentifier)
     oSymbolStkPushLocalIdentifier
     [ oSymbolStkChooseKind (syUndefined)
     | syUndefined:
     ] or >
     .tSkipProc
     oFixPushForwardBranch
     oEmitNullAddress
     % value emitted -32767
     oSymbolStkSetKind(syProcedure)
     oValuePushCodeAddress
     oSymbolStkEnterValue
     @PublicDefinition
      [ (sParmEnd)
      | *:
      >>
     ;PublicDefinition
     oValuePop
     oTypeStkPush(tpNull)
     oTypeStkSetRecursionFlag(yes)
     oTypeTblEnter
     oSymbolStkEnterTypeReference
     oSymbolTblEnter
     oSymbolTblPushScope
     @ProcedureHeading
      oCountPush(zero)
      [ (sParmEnd)
      | sParmEnd:
      ] or >
      @ProcedurePrologue
       @CountPushCopy
        oValuePushCount
        oCountPushValue
        oValuePop
        >>
       ;CountPushCopy
       [ oCountChoose (zero)
       | zero:
       oCountPop
       .tParmEnd
       ] or >
       oTypeStkEnterParameterCount
       oCountPop
       >>
      ;ProcedurePrologue
      >>
     ;ProcedureHeading
     @Block
      ?sBegin (sBegin)
      [ (sEnd)
      | *:
      ] or >
      ?sEnd (sEnd)
      >>
     ;Block
     oTypeStkSetRecursionFlag(no)
     oTypeTblUpdate
     oTypeStkPop
     oSymbolTblUpdate
     oSymbolStkPop
     oSymbolTblPopScope
     oSymbolTblPreserveParameters
     .tProcedureEnd
     oFixPopForwardBranch
     >>
    ;ProcedureDefinition
    ] or >
    }
    [ (sEnd)
    | *:
    ] or >
    ?sEnd (sEnd)
    >>
   ;Block
   oTypeStkSetRecursionFlag(no)
   oTypeTblUpdate
   oTypeStkPop
   oSymbolTblUpdate
   oSymbolStkPop
   oSymbolTblMergePublicScope
   >>
  ;PackageDefinition
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syProcedure)
   | *:
   [ oSymbolStkChooseKind (syProcedure)
   | syProcedure:
   [ oSymbolStkChooseStandardRoutine (rtNull)
   | *:
   .tCallBegin
   oTypeStkPushSymbol
   [ oTypeStkChooseRecursionFlag (no)
   | *:
   @ActualParameters
    oCountPush(zero)
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    [ oTypeStkCompareParameterCount (yes)
    | yes:
    ] or >
    oCountPop
    >>
   ;ActualParameters
   .tCallEnd
   oValuePushSymbol
   oEmitValue
   % value emitted 13
   oValuePop
   oTypeStkPop
   ] or >
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sCallStmt)
  | sCallStmt:
  @CallStmt
   ?sIdentifier (sIdentifier)
   oSymbolStkPushIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   #eUndefinedIdentifier
   semantic error, line 11: identifier not declared
   ] or >
   [ oSymbolStkChooseKind (syUndefined)
   | *:
   #eProcedureReqd
   semantic error, line 11: procedure name required
   @FlushActuals
    [ (sParmEnd)
    | sParmEnd:
    ] or >
    >>
   ;FlushActuals
   oSymbolStkPop
   >>
  ;CallStmt
  ] or >
  }
  [ (sEnd)
  | *:
  ] or >
  ?sEnd (sEnd)
  >>
 ;Block
 [ oSymbolTblLookupExternal (no)
 | *:
 oSymbolTblPopScope
 oSymbolStkPop
 .tTrapBegin
 .tTrap
 oEmitTrapKind(trHalt)
 % value emitted 0
 >>
;Program
