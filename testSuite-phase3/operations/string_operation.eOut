@Program
 ?sProgram (sProgram)
 oSymbolStkPush(syProcedure)
 oSymbolTblPushScope
 oCountPush(three)
 [ (sIdentifier)
 | *:
 @ProgramParameter
  ?sIdentifier (sIdentifier)
  oSymbolStkPushLocalIdentifier
  [ oSymbolStkChooseKind (syUndefined)
  | syUndefined:
  [ oSymbolStkChooseStandardFile (stdInput)
  | stdInput:
  oSymbolStkSetKind(syVariable)
  oTypeStkPush(tpFile)
  oTypeStkLinkToStandardType(stdText)
  oSymbolStkEnterTypeReference
  oValuePush(one)
  ] or >
  @AllocateVar
   [ oSymbolStkChooseKind (syVariable)
   | *:
   [ oTypeStkChooseKind (tpFile)
   | tpFile:
   .tFileDescriptor
   oAllocateAlignOnWord
   oSymbolStkEnterDataAddress
   .tLiteralInteger
   oEmitValue
   % value emitted 1
   .tFileBind
   .tLiteralAddress
   oEmitDataAddress
   % value emitted 0
   .tStoreInteger
   oAllocateDescriptor
   ] or >
   >>
  ;AllocateVar
  oSymbolTblEnter
  ] or >
  oSymbolStkPop
  oTypeStkPop
  oValuePop
  >>
 ;ProgramParameter
 }
 [ (sParmEnd)
 | sParmEnd:
 ] or >
 oCountPop
 @Block
  ?sBegin (sBegin)
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sInitialValue)
    | *:
    >>
   ;PublicDefinition
   [ (sInitialValue)
   | sInitialValue:
   .tInitialValue
   @Expression
    @Operand
     [ (sStringLiteral)
     | sStringLiteral:
     oSymbolStkPush(syExpression)
     @StringLiteral
      .tSkipString
      oFixPushForwardBranch
      oEmitNullAddress
      % value emitted -32767
      .tStringData
      oValuePushStringLength
      oEmitValue
      % value emitted 5
      oValuePop
      oValuePushCodeAddress
      oValueNegate
      oEmitString
      % value emitted 72
      % value emitted 101
      % value emitted 108
      % value emitted 108
      % value emitted 111
      % value emitted 0
      oFixPopForwardBranch
      oTypeStkPush(tpChar)
      oTypeStkLinkToStandardType(stdChar)
      >>
     ;StringLiteral
     .tLiteralAddress
     oEmitValue
     % value emitted -16
     .tFetchChar
     oValuePop
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   .tInitEnd
   @TypeTblEnterIfNew
    [ oTypeStkChooseTypeReference (yes)
    | *:
    >>
   ;TypeTblEnterIfNew
   oSymbolStkPop
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpChar)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   .tLiteralAddress
   oValuePushSymbol
   oEmitValue
   % value emitted 4
   oValuePop
   [ oTypeStkChooseKind (tpChar)
   | *:
   @EmitStore
    [ oTypeStkChooseKind (tpChar)
    | tpChar:
    .tStoreChar
    ] or >
    >>
   ;EmitStore
   ] or >
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sInitialValue)
    | *:
    >>
   ;PublicDefinition
   [ (sInitialValue)
   | sInitialValue:
   .tInitialValue
   @Expression
    @Operand
     [ (sStringLiteral)
     | sStringLiteral:
     oSymbolStkPush(syExpression)
     @StringLiteral
      .tSkipString
      oFixPushForwardBranch
      oEmitNullAddress
      % value emitted -32767
      .tStringData
      oValuePushStringLength
      oEmitValue
      % value emitted 5
      oValuePop
      oValuePushCodeAddress
      oValueNegate
      oEmitString
      % value emitted 87
      % value emitted 111
      % value emitted 114
      % value emitted 108
      % value emitted 100
      % value emitted 0
      oFixPopForwardBranch
      oTypeStkPush(tpChar)
      oTypeStkLinkToStandardType(stdChar)
      >>
     ;StringLiteral
     .tLiteralAddress
     oEmitValue
     % value emitted -36
     .tFetchChar
     oValuePop
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   .tInitEnd
   @TypeTblEnterIfNew
    [ oTypeStkChooseTypeReference (yes)
    | *:
    >>
   ;TypeTblEnterIfNew
   oSymbolStkPop
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpChar)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   .tLiteralAddress
   oValuePushSymbol
   oEmitValue
   % value emitted 260
   oValuePop
   [ oTypeStkChooseKind (tpChar)
   | *:
   @EmitStore
    [ oTypeStkChooseKind (tpChar)
    | tpChar:
    .tStoreChar
    ] or >
    >>
   ;EmitStore
   ] or >
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sInitialValue)
    | *:
    >>
   ;PublicDefinition
   [ (sInitialValue)
   | sInitialValue:
   .tInitialValue
   @Expression
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sLength)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     @VariableOperand
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tFetchChar
      ] or >
      >>
     ;VariableOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sLength)
     | sLength:
     .tLength
     oTypeStkPush(tpChar)
     @CompareAndSwapTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkSwap
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      >>
     ;CompareAndSwapTypes
     oTypeStkPop
     oTypeStkPop
     oTypeStkPush(tpInteger)
     ] or >
     oSymbolStkSetKind(syExpression)
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sExpnEnd)
     | *:
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   .tInitEnd
   @TypeTblEnterIfNew
    [ oTypeStkChooseTypeReference (no)
    | no:
    oTypeTblEnter
    ] or >
    >>
   ;TypeTblEnterIfNew
   oSymbolStkPop
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpInteger)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpInteger)
     | tpInteger:
     oAllocateAlignOnWord
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   .tLiteralAddress
   oValuePushSymbol
   oEmitValue
   % value emitted 516
   oValuePop
   [ oTypeStkChooseKind (tpInteger)
   | *:
   @EmitStore
    [ oTypeStkChooseKind (tpInteger)
    | tpInteger:
    .tStoreInteger
    ] or >
    >>
   ;EmitStore
   ] or >
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sInitialValue)
    | *:
    >>
   ;PublicDefinition
   [ (sInitialValue)
   | sInitialValue:
   .tInitialValue
   @Expression
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sInteger)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     @VariableOperand
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tFetchChar
      ] or >
      >>
     ;VariableOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sInteger)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sInteger)
     | *:
     >>
    ;BinaryOperator
    [ (sInteger)
    | *:
    }
    @Operand
     [ (sInteger)
     | sInteger:
     oValuePushInteger
     oSymbolStkPush(syExpression)
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     .tLiteralInteger
     oEmitValue
     % value emitted 4
     oValuePop
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sInteger)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sInteger)
     | *:
     >>
    ;BinaryOperator
    [ (sInteger)
    | *:
    }
    @Operand
     [ (sInteger)
     | sInteger:
     oValuePushInteger
     oSymbolStkPush(syExpression)
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     .tLiteralInteger
     oEmitValue
     % value emitted 5
     oValuePop
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sSubstring)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sSubstring)
     | sSubstring:
     .tSubstring
     oTypeStkPush(tpChar)
     @CompareSubstringOperandAndResultTypes
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      oTypeStkPop
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      oTypeStkPop
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      oTypeStkPop
      oSymbolStkPop
      oSymbolStkPop
      oSymbolStkSetKind(syExpression)
      >>
     ;CompareSubstringOperandAndResultTypes
     ] or >
     oSymbolStkSetKind(syExpression)
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   .tInitEnd
   @TypeTblEnterIfNew
    [ oTypeStkChooseTypeReference (no)
    | no:
    oTypeTblEnter
    ] or >
    >>
   ;TypeTblEnterIfNew
   oSymbolStkPop
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpChar)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   .tLiteralAddress
   oValuePushSymbol
   oEmitValue
   % value emitted 520
   oValuePop
   [ oTypeStkChooseKind (tpChar)
   | *:
   @EmitStore
    [ oTypeStkChooseKind (tpChar)
    | tpChar:
    .tStoreChar
    ] or >
    >>
   ;EmitStore
   ] or >
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sInitialValue)
    | *:
    >>
   ;PublicDefinition
   [ (sInitialValue)
   | sInitialValue:
   .tInitialValue
   @Expression
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sIdentifier)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     @VariableOperand
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tFetchChar
      ] or >
      >>
     ;VariableOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sIdentifier)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sIdentifier)
     | *:
     >>
    ;BinaryOperator
    [ (sIdentifier)
    | *:
    }
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 260
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sConcatenate)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     @VariableOperand
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tFetchChar
      ] or >
      >>
     ;VariableOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sConcatenate)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sConcatenate)
     | sConcatenate:
     .tConcatenate
     oTypeStkPush(tpChar)
     @CompareOperandAndResultTypes
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      oTypeStkPop
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      oTypeStkPop
      oSymbolStkPop
      oSymbolStkSetKind(syExpression)
      >>
     ;CompareOperandAndResultTypes
     ] or >
     oSymbolStkSetKind(syExpression)
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   .tInitEnd
   @TypeTblEnterIfNew
    [ oTypeStkChooseTypeReference (no)
    | no:
    oTypeTblEnter
    ] or >
    >>
   ;TypeTblEnterIfNew
   oSymbolStkPop
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpChar)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   .tLiteralAddress
   oValuePushSymbol
   oEmitValue
   % value emitted 776
   oValuePop
   [ oTypeStkChooseKind (tpChar)
   | *:
   @EmitStore
    [ oTypeStkChooseKind (tpChar)
    | tpChar:
    .tStoreChar
    ] or >
    >>
   ;EmitStore
   ] or >
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sInitialValue)
    | *:
    >>
   ;PublicDefinition
   [ (sInitialValue)
   | sInitialValue:
   .tInitialValue
   @Expression
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sInteger)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     @VariableOperand
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tFetchChar
      ] or >
      >>
     ;VariableOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sInteger)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sInteger)
     | *:
     >>
    ;BinaryOperator
    [ (sInteger)
    | *:
    }
    @Operand
     [ (sInteger)
     | sInteger:
     oValuePushInteger
     oSymbolStkPush(syExpression)
     oTypeStkPush(tpInteger)
     oTypeStkLinkToStandardType(stdInteger)
     .tLiteralInteger
     oEmitValue
     % value emitted 5
     oValuePop
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sRepeatString)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sRepeatString)
     | sRepeatString:
     .tRepeatString
     oTypeStkPush(tpChar)
     @CompareStringRepeatOperandAndResultTypes
      oTypeStkSwap
      [ oTypeStkChooseKind (tpInteger)
      | tpInteger:
      ] or >
      oTypeStkPop
      @CompareAndSwapTypes
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       oTypeStkSwap
       [ oTypeStkChooseKind (tpChar)
       | tpChar:
       ] or >
       ] or >
       >>
      ;CompareAndSwapTypes
      oTypeStkPop
      oSymbolStkPop
      oSymbolStkSetKind(syExpression)
      >>
     ;CompareStringRepeatOperandAndResultTypes
     ] or >
     oSymbolStkSetKind(syExpression)
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   .tInitEnd
   @TypeTblEnterIfNew
    [ oTypeStkChooseTypeReference (no)
    | no:
    oTypeTblEnter
    ] or >
    >>
   ;TypeTblEnterIfNew
   oSymbolStkPop
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpChar)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   .tLiteralAddress
   oValuePushSymbol
   oEmitValue
   % value emitted 1032
   oValuePop
   [ oTypeStkChooseKind (tpChar)
   | *:
   @EmitStore
    [ oTypeStkChooseKind (tpChar)
    | tpChar:
    .tStoreChar
    ] or >
    >>
   ;EmitStore
   ] or >
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sInitialValue)
    | *:
    >>
   ;PublicDefinition
   [ (sInitialValue)
   | sInitialValue:
   .tInitialValue
   @Expression
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sIdentifier)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     @VariableOperand
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tFetchChar
      ] or >
      >>
     ;VariableOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sIdentifier)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sIdentifier)
     | *:
     >>
    ;BinaryOperator
    [ (sIdentifier)
    | *:
    }
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 260
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sEq)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     @VariableOperand
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tFetchChar
      ] or >
      >>
     ;VariableOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sEq)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sEq)
     | sEq:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     .tStringEQ
     ] or >
     @CompareEqualityOperandTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkPop
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      oTypeStkPop
      oTypeStkPush(tpBoolean)
      oSymbolStkPop
      oSymbolStkSetKind(syExpression)
      >>
     ;CompareEqualityOperandTypes
     ] or >
     oSymbolStkSetKind(syExpression)
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   .tInitEnd
   @TypeTblEnterIfNew
    [ oTypeStkChooseTypeReference (no)
    | no:
    oTypeTblEnter
    ] or >
    >>
   ;TypeTblEnterIfNew
   oSymbolStkPop
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpBoolean)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpBoolean)
     | tpBoolean:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   .tLiteralAddress
   oValuePushSymbol
   oEmitValue
   % value emitted 1288
   oValuePop
   [ oTypeStkChooseKind (tpBoolean)
   | *:
   @EmitStore
    [ oTypeStkChooseKind (tpBoolean)
    | tpBoolean:
    .tStoreBoolean
    ] or >
    >>
   ;EmitStore
   ] or >
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sVar)
  | sVar:
  @VariableDeclarations
   ?sIdentifier (sIdentifier)
   oSymbolStkPushLocalIdentifier
   [ oSymbolStkChooseKind (syUndefined)
   | syUndefined:
   ] or >
   @PublicDefinition
    [ (sInitialValue)
    | *:
    >>
   ;PublicDefinition
   [ (sInitialValue)
   | sInitialValue:
   .tInitialValue
   @Expression
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 4
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sIdentifier)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     @VariableOperand
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tFetchChar
      ] or >
      >>
     ;VariableOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sIdentifier)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sIdentifier)
     | *:
     >>
    ;BinaryOperator
    [ (sIdentifier)
    | *:
    }
    @Operand
     [ (sIdentifier)
     | sIdentifier:
     oSymbolStkPushIdentifier
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oSymbolStkChooseKind (syVariable)
     | syVariable:
     @Variable
      [ oSymbolStkChooseKind (syVariable)
      | syVariable:
      .tLiteralAddress
      oValuePushSymbol
      oEmitValue
      % value emitted 260
      oValuePop
      ] or >
      oTypeStkPushSymbol
      @VariableExtension
       [ (sNE)
       | *:
       >>
      ;VariableExtension
      >>
     ;Variable
     @VariableOperand
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      .tFetchChar
      ] or >
      >>
     ;VariableOperand
     ] or >
     ] or >
     >>
    ;Operand
    @UnaryOperator
     [ (sNE)
     | *:
     >>
    ;UnaryOperator
    @BinaryOperator
     [ (sNE)
     | sNE:
     [ oTypeStkChooseKind (tpChar)
     | tpChar:
     .tStringEQ
     .tNot
     ] or >
     @CompareEqualityOperandTypes
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      oTypeStkPop
      [ oTypeStkChooseKind (tpChar)
      | tpChar:
      ] or >
      ] or >
      oTypeStkPop
      oTypeStkPush(tpBoolean)
      oSymbolStkPop
      oSymbolStkSetKind(syExpression)
      >>
     ;CompareEqualityOperandTypes
     ] or >
     oSymbolStkSetKind(syExpression)
     >>
    ;BinaryOperator
    [ (sExpnEnd)
    | sExpnEnd:
    ] or >
    >>
   ;Expression
   .tInitEnd
   @TypeTblEnterIfNew
    [ oTypeStkChooseTypeReference (no)
    | no:
    oTypeTblEnter
    ] or >
    >>
   ;TypeTblEnterIfNew
   oSymbolStkPop
   @EnterVariableAttributes
    [ oSymbolStkChooseKind (syUndefined)
    | *:
    oSymbolStkSetKind(syVariable)
    [ oTypeStkChooseKind (tpBoolean)
    | *:
    @AllocateVar
     [ oSymbolStkChooseKind (syVariable)
     | *:
     [ oTypeStkChooseKind (tpBoolean)
     | tpBoolean:
     oSymbolStkEnterDataAddress
     oAllocateVariable
     ] or >
     >>
    ;AllocateVar
    oSymbolStkEnterTypeReference
    oSymbolTblEnter
    >>
   ;EnterVariableAttributes
   .tLiteralAddress
   oValuePushSymbol
   oEmitValue
   % value emitted 1289
   oValuePop
   [ oTypeStkChooseKind (tpBoolean)
   | *:
   @EmitStore
    [ oTypeStkChooseKind (tpBoolean)
    | tpBoolean:
    .tStoreBoolean
    ] or >
    >>
   ;EmitStore
   ] or >
   oTypeStkPop
   oSymbolStkPop
   >>
  ;VariableDeclarations
  ] or >
  }
  [ (sEnd)
  | *:
  ] or >
  ?sEnd (sEnd)
  >>
 ;Block
 [ oSymbolTblLookupExternal (no)
 | *:
 oSymbolTblPopScope
 oSymbolStkPop
 .tTrapBegin
 .tTrap
 oEmitTrapKind(trHalt)
 % value emitted 0
 >>
;Program
